2022-09-26 15:11:51,706 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 6.2.0.Final
2022-09-26 15:11:51,748 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting CoreCustomApiApplication using Java 1.8.0_181 on LAPTOP-F3OP9A9T with PID 15264 (C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\corecustomapi\target\classes started by DiGi-2 in C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\corecustomapi)
2022-09-26 15:11:51,750 INFO  [main] org.springframework.boot.SpringApplication: The following profiles are active: local
2022-09-26 15:11:52,673 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-26 15:11:53,014 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 329 ms. Found 68 JPA repository interfaces.
2022-09-26 15:11:53,476 INFO  [main] org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor: @Bean method RepositoryRestSupportConfiguration.persistentEntityResourceBeanPostProcessor is non-static and returns an object assignable to Spring's BeanFactoryPostProcessor interface. This will result in a failure to process annotations such as @Autowired, @Resource and @PostConstruct within the method's declaring @Configuration class. Add the 'static' modifier to this method to avoid these container lifecycle issues; see @Bean javadoc for complete details.
2022-09-26 15:11:53,738 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'platformProperties' of type [digi.ecomm.platformservice.PlatformProperties$$EnhancerBySpringCGLIB$$fc49aabe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-09-26 15:11:53,741 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'initialDataConfiguration' of type [digi.ecomm.platformservice.initialdata.InitialDataConfiguration$$EnhancerBySpringCGLIB$$362dd280] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-09-26 15:11:53,746 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'persistentConfiguration' of type [digi.ecomm.platformservice.persistent.PersistentConfiguration$$EnhancerBySpringCGLIB$$15e1800] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-09-26 15:11:54,481 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2022-09-26 15:11:54,490 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2022-09-26 15:11:54,491 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2022-09-26 15:11:54,492 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/9.0.56]
2022-09-26 15:11:54,607 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2022-09-26 15:11:54,607 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 2806 ms
2022-09-26 15:11:54,884 WARN  [main] com.zaxxer.hikari.HikariConfig: B2B_DS - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2022-09-26 15:11:54,885 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Starting...
2022-09-26 15:11:56,480 ERROR [main] com.zaxxer.hikari.pool.HikariPool: B2B_DS - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'b2b_platform'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:828)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at net.ttddyy.dsproxy.support.ProxyDataSource.getConnection(ProxyDataSource.java:72)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:99)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:52)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:90)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1301)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1290)
	at digi.ecomm.corecustomapi.CoreCustomApiApplication.main(CoreCustomApiApplication.java:16)
2022-09-26 15:11:56,486 WARN  [main] org.springframework.context.support.AbstractApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'quartzDataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration$JdbcStoreTypeConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLSyntaxErrorException: Unknown database 'b2b_platform'
2022-09-26 15:11:56,491 INFO  [main] org.apache.juli.logging.DirectJDKLog: Stopping service [Tomcat]
2022-09-26 15:11:56,502 INFO  [main] org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener: 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-09-26 15:11:56,531 ERROR [main] org.springframework.boot.SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'quartzDataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration$JdbcStoreTypeConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLSyntaxErrorException: Unknown database 'b2b_platform'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1301)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1290)
	at digi.ecomm.corecustomapi.CoreCustomApiApplication.main(CoreCustomApiApplication.java:16)
Caused by: org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLSyntaxErrorException: Unknown database 'b2b_platform'
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:67)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:90)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLSyntaxErrorException: Unknown database 'b2b_platform'
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:52)
	... 26 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown database 'b2b_platform'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:828)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at net.ttddyy.dsproxy.support.ProxyDataSource.getConnection(ProxyDataSource.java:72)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:99)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	... 27 common frames omitted
2022-09-26 15:14:48,118 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 6.2.0.Final
2022-09-26 15:14:48,146 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting CoreCustomApiApplication using Java 1.8.0_181 on LAPTOP-F3OP9A9T with PID 12300 (C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\corecustomapi\target\classes started by DiGi-2 in C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\corecustomapi)
2022-09-26 15:14:48,147 INFO  [main] org.springframework.boot.SpringApplication: The following profiles are active: local
2022-09-26 15:14:49,053 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-26 15:14:49,393 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 328 ms. Found 68 JPA repository interfaces.
2022-09-26 15:14:49,895 INFO  [main] org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor: @Bean method RepositoryRestSupportConfiguration.persistentEntityResourceBeanPostProcessor is non-static and returns an object assignable to Spring's BeanFactoryPostProcessor interface. This will result in a failure to process annotations such as @Autowired, @Resource and @PostConstruct within the method's declaring @Configuration class. Add the 'static' modifier to this method to avoid these container lifecycle issues; see @Bean javadoc for complete details.
2022-09-26 15:14:50,148 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'platformProperties' of type [digi.ecomm.platformservice.PlatformProperties$$EnhancerBySpringCGLIB$$cfa95d36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-09-26 15:14:50,150 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'initialDataConfiguration' of type [digi.ecomm.platformservice.initialdata.InitialDataConfiguration$$EnhancerBySpringCGLIB$$98d84f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-09-26 15:14:50,156 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'persistentConfiguration' of type [digi.ecomm.platformservice.persistent.PersistentConfiguration$$EnhancerBySpringCGLIB$$d4bdca78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-09-26 15:14:50,833 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2022-09-26 15:14:50,843 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2022-09-26 15:14:50,845 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2022-09-26 15:14:50,847 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/9.0.56]
2022-09-26 15:14:50,968 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2022-09-26 15:14:50,969 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 2781 ms
2022-09-26 15:14:51,225 WARN  [main] com.zaxxer.hikari.HikariConfig: B2B_DS - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2022-09-26 15:14:51,226 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Starting...
2022-09-26 15:14:51,804 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Start completed.
2022-09-26 15:14:52,426 INFO  [main] org.hibernate.jpa.internal.util.LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-26 15:14:52,474 INFO  [main] org.hibernate.Version: HHH000412: Hibernate ORM core version 5.6.3.Final
2022-09-26 15:14:52,611 INFO  [main] org.hibernate.annotations.common.reflection.java.JavaReflectionManager: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-26 15:14:52,733 INFO  [main] org.hibernate.dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-26 15:14:53,650 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#address` was mapped with explicit lazy-group (`address`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,651 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#baseStore` was mapped with explicit lazy-group (`baseStore`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,653 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#openingSchedule` was mapped with explicit lazy-group (`openingSchedule`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,660 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#address` was mapped with explicit lazy-group (`address`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,662 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#address` was mapped with explicit lazy-group (`address`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,662 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#baseStore` was mapped with explicit lazy-group (`baseStore`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,663 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#baseStore` was mapped with explicit lazy-group (`baseStore`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,666 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#openingSchedule` was mapped with explicit lazy-group (`openingSchedule`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,666 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#openingSchedule` was mapped with explicit lazy-group (`openingSchedule`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,667 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.store.PointOfService
2022-09-26 15:14:53,875 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#address` was mapped with explicit lazy-group (`address`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,876 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#baseStore` was mapped with explicit lazy-group (`baseStore`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,878 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#openingSchedule` was mapped with explicit lazy-group (`openingSchedule`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,886 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#address` was mapped with explicit lazy-group (`address`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,887 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#baseStore` was mapped with explicit lazy-group (`baseStore`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,888 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.PointOfService#openingSchedule` was mapped with explicit lazy-group (`openingSchedule`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,894 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransactionEntry#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,895 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransactionEntry#paymentTransaction` was mapped with explicit lazy-group (`paymentTransaction`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,903 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransactionEntry#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,905 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransactionEntry#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,906 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransactionEntry#paymentTransaction` was mapped with explicit lazy-group (`paymentTransaction`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,906 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransactionEntry#paymentTransaction` was mapped with explicit lazy-group (`paymentTransaction`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,948 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransactionEntry#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,949 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransactionEntry#paymentTransaction` was mapped with explicit lazy-group (`paymentTransaction`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,951 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransactionEntry#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,957 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransactionEntry#paymentTransaction` was mapped with explicit lazy-group (`paymentTransaction`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,960 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Language
2022-09-26 15:14:53,994 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.AttributeUnit10NAugmentation#attributeUnit` was mapped with explicit lazy-group (`attributeUnit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,995 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.AttributeUnit10NAugmentation#attributeUnit` was mapped with explicit lazy-group (`attributeUnit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:53,997 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.AttributeUnit10NAugmentation#attributeUnit` was mapped with explicit lazy-group (`attributeUnit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,016 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.AttributeUnit10NAugmentation#attributeUnit` was mapped with explicit lazy-group (`attributeUnit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,017 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.AttributeUnit10NAugmentation#attributeUnit` was mapped with explicit lazy-group (`attributeUnit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,021 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,023 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,023 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,029 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,031 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,032 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Cart#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,033 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,034 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,035 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,035 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,040 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,045 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,046 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,046 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,047 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,048 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,049 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Cart#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,050 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Cart#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,050 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.oms.Cart
2022-09-26 15:14:54,081 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,082 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,084 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,091 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,092 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,092 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Cart#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,093 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,093 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,094 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,094 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,095 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,095 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Cart#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,097 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariationOption#variation` was mapped with explicit lazy-group (`variation`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,100 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariationOption#variation` was mapped with explicit lazy-group (`variation`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,106 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariationOption#variation` was mapped with explicit lazy-group (`variation`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,107 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.pcm.VariationOption
2022-09-26 15:14:54,121 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariationOption#variation` was mapped with explicit lazy-group (`variation`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,122 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariationOption#variation` was mapped with explicit lazy-group (`variation`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,125 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BPermission#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,125 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BPermission#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,126 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BPermission#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,137 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BPermission#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,141 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BPermission#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,142 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BOrderThresholdPermission#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,143 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Country
2022-09-26 15:14:54,159 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,160 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,161 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,161 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,162 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,163 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,173 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,173 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,174 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,190 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,190 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,191 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,192 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,192 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,193 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,194 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,195 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,205 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,206 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.promotion.ProductPartnerPromotion
2022-09-26 15:14:54,222 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,223 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,225 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,225 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,226 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,227 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,231 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,238 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,239 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.elasticpathpcm.EpProduct
2022-09-26 15:14:54,264 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,265 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,267 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,275 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,276 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,277 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,277 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,278 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,278 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,279 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Quote#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,280 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,280 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,281 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,282 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,283 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,284 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,285 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,285 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,286 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,286 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,287 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Quote#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,287 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Quote#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,288 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.oms.Quote
2022-09-26 15:14:54,310 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,311 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,313 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,314 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,322 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,323 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Quote#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,323 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,324 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,324 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,325 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,325 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,326 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Quote#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,327 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,327 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,328 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,329 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,329 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,330 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,331 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,331 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,333 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,342 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,343 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,343 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,345 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,346 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,346 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,348 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,349 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,349 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,350 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,351 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,361 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,362 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,362 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,363 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,374 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,375 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,376 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,377 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,377 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,377 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,378 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.CartEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,379 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.OrderEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,379 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.QuoteEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,381 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,382 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,389 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,390 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.promotion.AbstractPromotion
2022-09-26 15:14:54,403 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,404 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,407 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.OrderThresholdFreeGiftPromotion#giftProduct` was mapped with explicit lazy-group (`giftProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,408 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.OrderThresholdPartnerPromotion#discountProduct` was mapped with explicit lazy-group (`discountProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,410 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,410 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,411 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,412 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,412 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,413 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,414 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contact` was mapped with explicit lazy-group (`contact`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,422 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contactAddress` was mapped with explicit lazy-group (`contactAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,423 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,424 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,424 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,425 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,426 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,427 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,427 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,428 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,429 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,429 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,430 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,431 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,432 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contact` was mapped with explicit lazy-group (`contact`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,434 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contact` was mapped with explicit lazy-group (`contact`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,434 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contactAddress` was mapped with explicit lazy-group (`contactAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,434 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contactAddress` was mapped with explicit lazy-group (`contactAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,435 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.organization.B2BUnit
2022-09-26 15:14:54,456 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,457 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,457 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,458 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,459 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,459 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,460 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contact` was mapped with explicit lazy-group (`contact`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,464 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contactAddress` was mapped with explicit lazy-group (`contactAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,471 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,473 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,473 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,474 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,474 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,474 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,476 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contact` was mapped with explicit lazy-group (`contact`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,479 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contactAddress` was mapped with explicit lazy-group (`contactAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,488 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,488 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,489 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,489 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.email.EmailMessage
2022-09-26 15:14:54,502 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,502 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,503 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,504 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,504 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,505 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,505 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,505 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,507 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,507 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,512 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,518 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,518 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,521 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,521 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,522 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,522 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,522 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,522 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,523 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,535 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserGroup
2022-09-26 15:14:54,545 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,547 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,547 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,555 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,558 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,558 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,567 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,568 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,569 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,569 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,570 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,580 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,580 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contact` was mapped with explicit lazy-group (`contact`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,581 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contactAddress` was mapped with explicit lazy-group (`contactAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,582 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,583 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,583 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,589 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,589 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,594 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,594 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,595 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariantProduct#baseProduct` was mapped with explicit lazy-group (`baseProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,596 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,596 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,597 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,597 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,600 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariantProduct#baseProduct` was mapped with explicit lazy-group (`baseProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,603 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariantProduct#baseProduct` was mapped with explicit lazy-group (`baseProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,609 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.pcm.VariantProduct
2022-09-26 15:14:54,630 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,631 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,631 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariantProduct#baseProduct` was mapped with explicit lazy-group (`baseProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,633 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,636 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,636 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariantProduct#baseProduct` was mapped with explicit lazy-group (`baseProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,644 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category10NAugmentation#category` was mapped with explicit lazy-group (`category`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,644 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category10NAugmentation#category` was mapped with explicit lazy-group (`category`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,645 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category10NAugmentation#category` was mapped with explicit lazy-group (`category`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,651 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category10NAugmentation#category` was mapped with explicit lazy-group (`category`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,656 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category10NAugmentation#category` was mapped with explicit lazy-group (`category`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,664 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,665 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,665 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,667 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,668 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,669 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,669 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contact` was mapped with explicit lazy-group (`contact`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,670 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contactAddress` was mapped with explicit lazy-group (`contactAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,671 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,671 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,672 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,672 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,673 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,673 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,674 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,675 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,675 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,676 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,676 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,677 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,677 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contact` was mapped with explicit lazy-group (`contact`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,678 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contact` was mapped with explicit lazy-group (`contact`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,678 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contactAddress` was mapped with explicit lazy-group (`contactAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,679 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contactAddress` was mapped with explicit lazy-group (`contactAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,679 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.organization.Company
2022-09-26 15:14:54,704 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,704 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,705 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,706 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,707 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,707 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,708 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contact` was mapped with explicit lazy-group (`contact`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,709 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contactAddress` was mapped with explicit lazy-group (`contactAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,710 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,713 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,723 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,723 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,724 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,724 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,725 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contact` was mapped with explicit lazy-group (`contact`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,726 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contactAddress` was mapped with explicit lazy-group (`contactAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,730 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,737 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,738 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,739 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,739 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,740 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,741 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,741 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,742 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,753 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,754 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,754 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,777 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,778 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,780 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,788 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,789 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,790 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,793 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,793 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,802 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,802 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,803 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,804 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.QuoteEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,805 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,805 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,806 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,811 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,818 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,818 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,819 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.QuoteEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,820 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.QuoteEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,831 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,831 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,832 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,833 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.QuoteEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,834 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,835 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,836 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,836 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.QuoteEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,837 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,838 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,846 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,852 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,852 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,855 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,856 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,862 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,863 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.promotion.ProductMultiBuyPromotion
2022-09-26 15:14:54,882 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,883 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,884 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.email.EmailAddress
2022-09-26 15:14:54,899 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,899 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,900 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,907 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,910 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,918 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,919 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.pcm.Category
2022-09-26 15:14:54,934 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,935 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,940 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,941 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Category#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,942 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,942 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,943 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,943 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,944 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,944 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,945 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,946 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,946 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,947 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.Principal
2022-09-26 15:14:54,964 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,964 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,965 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,966 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,968 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,968 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,969 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,969 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,970 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,970 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,971 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,972 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,972 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,973 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,973 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#defaultPaymentInfo` was mapped with explicit lazy-group (`defaultPaymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,974 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,974 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BCustomer#defaultB2BUnit` was mapped with explicit lazy-group (`defaultB2BUnit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,975 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contact` was mapped with explicit lazy-group (`contact`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,976 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Company#contactAddress` was mapped with explicit lazy-group (`contactAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,977 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.pcm.Variation
2022-09-26 15:14:54,987 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,988 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,988 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:54,990 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Region
2022-09-26 15:14:55,002 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,003 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,015 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,015 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#info` was mapped with explicit lazy-group (`info`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,016 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,023 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,024 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,024 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#info` was mapped with explicit lazy-group (`info`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,025 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#info` was mapped with explicit lazy-group (`info`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,026 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,030 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,037 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.payment.PaymentTransaction
2022-09-26 15:14:55,047 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,047 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#info` was mapped with explicit lazy-group (`info`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,048 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,056 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,057 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#info` was mapped with explicit lazy-group (`info`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,060 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentTransaction#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,061 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,068 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,069 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,070 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,070 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,071 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,071 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,076 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,082 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#defaultPaymentInfo` was mapped with explicit lazy-group (`defaultPaymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,083 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,083 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BCustomer#defaultB2BUnit` was mapped with explicit lazy-group (`defaultB2BUnit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,084 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,085 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,085 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,085 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,086 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,086 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,087 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,088 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,094 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,099 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,101 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,101 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,102 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,102 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,103 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,103 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,104 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#defaultPaymentInfo` was mapped with explicit lazy-group (`defaultPaymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,108 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#defaultPaymentInfo` was mapped with explicit lazy-group (`defaultPaymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,113 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,114 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,115 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BCustomer#defaultB2BUnit` was mapped with explicit lazy-group (`defaultB2BUnit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,116 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BCustomer#defaultB2BUnit` was mapped with explicit lazy-group (`defaultB2BUnit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,116 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.organization.B2BCustomer
2022-09-26 15:14:55,138 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,138 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,140 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,141 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,148 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,149 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,151 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,159 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,160 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#defaultPaymentInfo` was mapped with explicit lazy-group (`defaultPaymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,160 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,161 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BCustomer#defaultB2BUnit` was mapped with explicit lazy-group (`defaultB2BUnit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,161 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,162 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,163 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,163 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,164 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,165 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,166 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,171 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,177 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#defaultPaymentInfo` was mapped with explicit lazy-group (`defaultPaymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,178 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,179 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BCustomer#defaultB2BUnit` was mapped with explicit lazy-group (`defaultB2BUnit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,180 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,180 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,181 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,181 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,189 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,190 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,191 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,192 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,193 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,203 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,206 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,206 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,208 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,208 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,208 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,209 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductL10NAugmentation#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,210 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductL10NAugmentation#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,211 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductL10NAugmentation#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,217 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductL10NAugmentation#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,218 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductL10NAugmentation#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,219 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,219 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,220 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,221 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.OrderEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,221 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,222 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,222 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,223 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,223 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,224 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,225 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.OrderEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,225 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.OrderEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,235 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,235 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,236 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,238 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.OrderEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,239 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,239 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,240 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,240 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.OrderEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,241 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,242 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,242 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,247 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,248 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,255 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,255 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,256 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariantProduct#baseProduct` was mapped with explicit lazy-group (`baseProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,257 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,257 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,258 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,258 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,259 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariantProduct#baseProduct` was mapped with explicit lazy-group (`baseProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,259 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariantProduct#baseProduct` was mapped with explicit lazy-group (`baseProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,264 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.elasticpathpcm.EpVariantProduct
2022-09-26 15:14:55,293 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,294 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,295 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariantProduct#baseProduct` was mapped with explicit lazy-group (`baseProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,295 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,304 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,305 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariantProduct#baseProduct` was mapped with explicit lazy-group (`baseProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,306 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,307 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,307 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,310 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.promotion.ProductBundlePromotion
2022-09-26 15:14:55,330 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,331 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,332 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,342 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,343 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,351 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,352 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,353 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,353 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,354 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,355 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,359 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,365 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,365 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,367 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,368 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,368 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,369 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,369 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,373 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,379 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,379 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,381 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,382 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,382 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,384 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,385 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.User
2022-09-26 15:14:55,401 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,402 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,404 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,404 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,411 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,412 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,413 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,413 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,414 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,415 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,415 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,417 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,421 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,427 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,428 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,429 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,429 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#defaultPaymentInfo` was mapped with explicit lazy-group (`defaultPaymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,430 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,430 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BCustomer#defaultB2BUnit` was mapped with explicit lazy-group (`defaultB2BUnit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,432 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.pcm.Attribute
2022-09-26 15:14:55,443 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,444 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,444 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,451 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,451 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,457 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,458 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,458 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,467 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,472 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,473 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,474 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,475 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,475 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,476 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,476 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,488 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,489 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,489 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,490 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,499 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.EnumEntity
2022-09-26 15:14:55,514 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.pcm.ProductTaxGroup
2022-09-26 15:14:55,524 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserTaxGroup
2022-09-26 15:14:55,534 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,535 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,540 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,541 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.CartEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,542 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,543 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,544 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,547 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,554 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,555 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,556 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.CartEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,556 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.CartEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,567 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,568 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,569 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,569 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.CartEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,570 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#costCenter` was mapped with explicit lazy-group (`costCenter`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,571 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#deliveryPointOfService` was mapped with explicit lazy-group (`deliveryPointOfService`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,571 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrderEntry#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,572 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.CartEntry#order` was mapped with explicit lazy-group (`order`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,573 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.promotion.PromotionGroup
2022-09-26 15:14:55,583 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,584 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,586 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,587 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.promotion.ProductFixedPricePromotion
2022-09-26 15:14:55,600 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,600 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,607 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.pcm.AttributeTemplate
2022-09-26 15:14:55,619 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,620 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.OrderThresholdFreeGiftPromotion#giftProduct` was mapped with explicit lazy-group (`giftProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,621 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,624 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,624 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.OrderThresholdFreeGiftPromotion#giftProduct` was mapped with explicit lazy-group (`giftProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,631 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.OrderThresholdFreeGiftPromotion#giftProduct` was mapped with explicit lazy-group (`giftProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,632 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.promotion.OrderThresholdFreeGiftPromotion
2022-09-26 15:14:55,658 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,659 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.OrderThresholdFreeGiftPromotion#giftProduct` was mapped with explicit lazy-group (`giftProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,661 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,661 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.OrderThresholdFreeGiftPromotion#giftProduct` was mapped with explicit lazy-group (`giftProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,671 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,671 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.OrderThresholdPartnerPromotion#discountProduct` was mapped with explicit lazy-group (`discountProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,672 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,673 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,673 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.OrderThresholdPartnerPromotion#discountProduct` was mapped with explicit lazy-group (`discountProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,674 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.OrderThresholdPartnerPromotion#discountProduct` was mapped with explicit lazy-group (`discountProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,674 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.promotion.OrderThresholdPartnerPromotion
2022-09-26 15:14:55,687 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,688 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.OrderThresholdPartnerPromotion#discountProduct` was mapped with explicit lazy-group (`discountProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,693 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,693 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.OrderThresholdPartnerPromotion#discountProduct` was mapped with explicit lazy-group (`discountProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,694 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserDiscountGroup
2022-09-26 15:14:55,704 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Stock#warehouse` was mapped with explicit lazy-group (`warehouse`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,706 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Stock#warehouse` was mapped with explicit lazy-group (`warehouse`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,707 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Stock#warehouse` was mapped with explicit lazy-group (`warehouse`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,717 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Stock#warehouse` was mapped with explicit lazy-group (`warehouse`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,718 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Stock#warehouse` was mapped with explicit lazy-group (`warehouse`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,719 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.PromotionPriceRow#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,719 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.PromotionPriceRow#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,720 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.PromotionPriceRow#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,726 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.PromotionPriceRow#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,727 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.PromotionPriceRow#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,728 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,728 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,729 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,738 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,739 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,740 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,740 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.pcm.Product
2022-09-26 15:14:55,760 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,761 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,763 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,763 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Product#mainImage` was mapped with explicit lazy-group (`mainImage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,772 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.VariantProduct#baseProduct` was mapped with explicit lazy-group (`baseProduct`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,773 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,774 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,774 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,777 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,785 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,786 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,787 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,788 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,789 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,789 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,790 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,791 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,795 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,802 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,803 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,804 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.oms.AbstractOrder
2022-09-26 15:14:55,822 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,822 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,823 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,825 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,826 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,833 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,834 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,834 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,835 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,835 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,836 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Cart#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,836 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Order#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,837 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Quote#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,838 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Currency
2022-09-26 15:14:55,854 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,855 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,856 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,868 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,868 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,869 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BPermission#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,870 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BOrderThresholdPermission#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,879 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BPermission#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,880 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BPermission#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,880 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BOrderThresholdPermission#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,881 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BOrderThresholdPermission#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,890 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BPermission#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,891 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BOrderThresholdPermission#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,895 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BPermission#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,896 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BOrderThresholdPermission#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,897 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BQuoteLimit#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,897 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BQuoteLimit#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,898 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BQuoteLimit#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,905 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BQuoteLimit#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,906 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BQuoteLimit#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,919 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,920 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,921 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,928 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,929 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,930 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,930 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,931 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,931 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#defaultPaymentInfo` was mapped with explicit lazy-group (`defaultPaymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,932 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,933 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,942 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,943 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,944 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,944 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,945 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,945 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,946 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,947 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,947 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,948 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,955 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,957 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,957 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,958 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,959 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,959 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#defaultPaymentInfo` was mapped with explicit lazy-group (`defaultPaymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,960 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#defaultPaymentInfo` was mapped with explicit lazy-group (`defaultPaymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,960 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,961 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,961 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.organization.Customer
2022-09-26 15:14:55,979 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,980 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,982 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,983 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,991 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,991 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,992 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,993 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,993 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#defaultPaymentInfo` was mapped with explicit lazy-group (`defaultPaymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,994 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:55,996 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,006 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,007 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,008 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,008 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,009 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,010 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,010 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,014 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#defaultPaymentInfo` was mapped with explicit lazy-group (`defaultPaymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,022 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.Customer#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,022 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BCustomer#defaultB2BUnit` was mapped with explicit lazy-group (`defaultB2BUnit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,023 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,024 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,024 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,025 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.promotion.restriction.PromotionProductRestriction
2022-09-26 15:14:56,032 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,033 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,037 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.catalog.Catalog
2022-09-26 15:14:56,050 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,051 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,058 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,060 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,068 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#tax` was mapped with explicit lazy-group (`tax`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,069 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#userGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,070 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,070 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,071 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,072 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,076 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,082 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,083 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,083 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,085 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#tax` was mapped with explicit lazy-group (`tax`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,086 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#tax` was mapped with explicit lazy-group (`tax`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,086 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#userGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,087 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#userGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,096 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,097 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,098 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,099 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,100 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#tax` was mapped with explicit lazy-group (`tax`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,101 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#userGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,102 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,102 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,103 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,113 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,113 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#tax` was mapped with explicit lazy-group (`tax`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,114 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#userGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,115 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,116 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,117 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,118 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.promotion.OrderThresholdDiscountPromotion
2022-09-26 15:14:56,129 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,130 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,131 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultCurrency` was mapped with explicit lazy-group (`defaultCurrency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,132 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultDeliveryOrigin` was mapped with explicit lazy-group (`defaultDeliveryOrigin`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,133 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultLanguage` was mapped with explicit lazy-group (`defaultLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,135 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultCurrency` was mapped with explicit lazy-group (`defaultCurrency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,137 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultCurrency` was mapped with explicit lazy-group (`defaultCurrency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,144 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultDeliveryOrigin` was mapped with explicit lazy-group (`defaultDeliveryOrigin`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,145 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultDeliveryOrigin` was mapped with explicit lazy-group (`defaultDeliveryOrigin`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,145 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultLanguage` was mapped with explicit lazy-group (`defaultLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,146 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultLanguage` was mapped with explicit lazy-group (`defaultLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,147 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.store.BaseStore
2022-09-26 15:14:56,160 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultCurrency` was mapped with explicit lazy-group (`defaultCurrency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,160 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultDeliveryOrigin` was mapped with explicit lazy-group (`defaultDeliveryOrigin`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,161 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultLanguage` was mapped with explicit lazy-group (`defaultLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,162 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultCurrency` was mapped with explicit lazy-group (`defaultCurrency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,163 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultDeliveryOrigin` was mapped with explicit lazy-group (`defaultDeliveryOrigin`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,163 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.store.BaseStore#defaultLanguage` was mapped with explicit lazy-group (`defaultLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,172 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,172 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,175 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,187 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,188 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,190 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,197 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,197 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,198 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#discount` was mapped with explicit lazy-group (`discount`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,207 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,208 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,209 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#userGroup` was mapped with explicit lazy-group (`userGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,210 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,210 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,211 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,211 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,212 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#discount` was mapped with explicit lazy-group (`discount`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,212 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#discount` was mapped with explicit lazy-group (`discount`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,213 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,213 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,215 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,216 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,217 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#userGroup` was mapped with explicit lazy-group (`userGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,218 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#userGroup` was mapped with explicit lazy-group (`userGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,227 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,228 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,229 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#discount` was mapped with explicit lazy-group (`discount`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,230 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,237 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,238 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#userGroup` was mapped with explicit lazy-group (`userGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,240 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,241 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,242 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#discount` was mapped with explicit lazy-group (`discount`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,242 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,243 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,244 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#userGroup` was mapped with explicit lazy-group (`userGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,245 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.pcm.AttributeUnit
2022-09-26 15:14:56,256 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.pcm.ProductPriceGroup
2022-09-26 15:14:56,265 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Discount#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,266 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Discount#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,266 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Discount#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,281 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Discount#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,282 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Discount#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,291 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,291 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,292 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,297 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,298 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,304 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,305 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,305 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,306 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.promotion.ProductPercentageDiscountPromotion
2022-09-26 15:14:56,318 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,319 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,320 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,320 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,321 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,321 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,322 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,322 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Order#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,323 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,323 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,324 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,324 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,326 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,337 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,338 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,339 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,339 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,340 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,341 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Order#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,344 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Order#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,351 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.oms.Order
2022-09-26 15:14:56,368 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,369 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,374 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,376 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,377 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,384 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Order#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,385 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,385 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#deliveryAddress` was mapped with explicit lazy-group (`deliveryAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,386 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentAddress` was mapped with explicit lazy-group (`paymentAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,386 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#paymentInfo` was mapped with explicit lazy-group (`paymentInfo`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,387 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.AbstractOrder#store` was mapped with explicit lazy-group (`store`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,388 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.oms.Order#customer` was mapped with explicit lazy-group (`customer`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,389 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.pcm.ProductDiscountGroup
2022-09-26 15:14:56,401 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.store.Warehouse
2022-09-26 15:14:56,410 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BBudget#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,410 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BBudget#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,411 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BBudget#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,419 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.organization.B2BBudget
2022-09-26 15:14:56,428 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BBudget#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,429 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BBudget#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,430 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Tax#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,438 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Tax#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,440 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Tax#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,448 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Tax#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,448 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.Tax#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,450 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,451 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,453 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,459 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.promotion.restriction.PromotionUserRestriction
2022-09-26 15:14:56,466 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,469 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.restriction.AbstractPromotionRestriction#promotion` was mapped with explicit lazy-group (`promotion`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,469 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,476 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,477 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,478 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,478 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,480 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,480 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,481 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,482 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,497 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,500 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,508 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,509 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,509 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,510 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.payment.PaymentInfo#user` was mapped with explicit lazy-group (`user`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,511 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#attribute` was mapped with explicit lazy-group (`attribute`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,511 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,512 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,512 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#attribute` was mapped with explicit lazy-group (`attribute`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,513 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#attribute` was mapped with explicit lazy-group (`attribute`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,514 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,522 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,523 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,524 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,533 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#attribute` was mapped with explicit lazy-group (`attribute`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,534 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,535 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,535 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#attribute` was mapped with explicit lazy-group (`attribute`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,536 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,537 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.ProductFeature#unit` was mapped with explicit lazy-group (`unit`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,538 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BCostCenter#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,539 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BCostCenter#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,539 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BCostCenter#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,540 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.organization.B2BCostCenter
2022-09-26 15:14:56,548 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BCostCenter#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,550 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.organization.B2BCostCenter#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,556 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,557 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,558 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,568 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,569 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,570 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,571 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,571 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,572 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,572 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,573 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,581 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,581 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,583 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,584 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,585 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#discount` was mapped with explicit lazy-group (`discount`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,585 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,586 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,587 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.DiscountRow#userGroup` was mapped with explicit lazy-group (`userGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,587 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,588 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,588 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#userGroup` was mapped with explicit lazy-group (`userGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,589 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,589 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,590 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#tax` was mapped with explicit lazy-group (`tax`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,595 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.TaxRow#userGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,600 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,601 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,602 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,602 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,603 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#userGroup` was mapped with explicit lazy-group (`userGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,604 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,604 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,605 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,605 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,606 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,610 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,616 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,617 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,618 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#userGroup` was mapped with explicit lazy-group (`userGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,619 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#userGroup` was mapped with explicit lazy-group (`userGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,629 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,629 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,630 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,631 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,631 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#userGroup` was mapped with explicit lazy-group (`userGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,632 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,632 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PDTItem#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,635 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#product` was mapped with explicit lazy-group (`product`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,636 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#productGroup` was mapped with explicit lazy-group (`productGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,636 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.pcm.PriceRow#userGroup` was mapped with explicit lazy-group (`userGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,637 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,641 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,647 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,647 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,648 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,648 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,649 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,650 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,653 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,662 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,662 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,663 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,664 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,665 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,665 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,666 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,667 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,671 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,678 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,678 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,679 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,680 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,681 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,681 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,682 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.Employee
2022-09-26 15:14:56,697 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,697 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,698 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,700 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,702 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,704 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,711 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,711 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,712 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,713 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,713 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,714 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,714 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,715 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,722 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,722 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,724 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserPriceGroup
2022-09-26 15:14:56,743 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,744 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,744 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,745 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.promotion.ProductBXGYFPromotion
2022-09-26 15:14:56,757 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:14:56,758 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.promotion.AbstractPromotion#promotionGroup` was mapped with explicit lazy-group (`promotionGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-26 15:15:19,651 INFO  [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-26 15:15:19,662 INFO  [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-26 15:15:21,558 INFO  [main] org.quartz.impl.StdSchedulerFactory: Using default implementation for ThreadExecutor
2022-09-26 15:15:21,571 INFO  [main] org.quartz.core.SchedulerSignalerImpl: Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-09-26 15:15:21,572 INFO  [main] org.quartz.core.QuartzScheduler: Quartz Scheduler v.2.3.2 created.
2022-09-26 15:15:21,577 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: Using db table-based data access locking (synchronization).
2022-09-26 15:15:21,581 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreCMT: JobStoreCMT initialized.
2022-09-26 15:15:21,584 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler meta-data: Quartz Scheduler (v2.3.2) 'schedulerFactoryBean' with instanceId 'LAPTOP-F3OP9A9T1664180121560'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 25 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-09-26 15:15:21,585 INFO  [main] org.quartz.impl.StdSchedulerFactory: Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2022-09-26 15:15:21,591 INFO  [main] org.quartz.impl.StdSchedulerFactory: Quartz scheduler version: 2.3.2
2022-09-26 15:15:21,592 INFO  [main] org.quartz.core.QuartzScheduler: JobFactory set to: digi.ecomm.platformservice.cronjob.job.CronJobFactory@7b7aaaf6
2022-09-26 15:15:24,560 INFO  [main] org.springframework.security.web.DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@689ef61d, org.springframework.security.web.context.SecurityContextPersistenceFilter@3be76b8d, org.springframework.security.web.header.HeaderWriterFilter@4913778f, org.springframework.web.filter.CorsFilter@3f410749, org.springframework.security.web.authentication.logout.LogoutFilter@939f06, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4c40aed1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@60b65a4a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7acb4a51, org.springframework.security.web.session.SessionManagementFilter@1bd051c4, org.springframework.security.web.access.ExceptionTranslationFilter@3f31ff7a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7852d8ed]
2022-09-26 15:15:25,253 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8080"]
2022-09-26 15:15:25,273 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port(s): 8080 (http) with context path '/api'
2022-09-26 15:15:25,275 INFO  [main] org.springframework.scheduling.quartz.SchedulerFactoryBean: Starting Quartz Scheduler now
2022-09-26 15:15:25,310 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1664180121560 started.
2022-09-26 15:15:25,326 INFO  [main] org.springframework.boot.StartupInfoLogger: Started CoreCustomApiApplication in 37.728 seconds (JVM running for 38.184)
2022-09-26 15:16:27,656 INFO  [http-nio-8080-exec-1] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-26 15:16:27,657 INFO  [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2022-09-26 15:16:27,660 INFO  [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 2 ms
