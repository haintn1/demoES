openapi: 3.0.1
info:
  title: B2B Ecommerce Platform API
  description: B2B Ecommerce Platform API
  license:
    name: ""
    url: ""
  version: v1.0
externalDocs:
  description: B2B Ecommerce Platform Wiki Documentation
  url: ""
servers:
- url: http://localhost:8080/api
  description: Generated server url
paths:
  /addresses:
    get:
      tags:
      - address-entity-controller
      description: get-address
      operationId: getCollectionResource-address-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAddress'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAddress'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - address-entity-controller
      description: create-address
      operationId: postCollectionResource-address-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
  /addresses/{id}:
    get:
      tags:
      - address-entity-controller
      description: get-address
      operationId: getItemResource-address-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    put:
      tags:
      - address-entity-controller
      description: update-address
      operationId: putItemResource-address-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - address-entity-controller
      description: delete-address
      operationId: deleteItemResource-address-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /addresses/{id}/country:
    get:
      tags:
      - address-property-reference-controller
      description: get-country-by-address-Id
      operationId: followPropertyReference-address-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCountry'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - address-property-reference-controller
      description: update-country-by-address-Id
      operationId: createPropertyReference-address-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCountry'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCountry'
        "204":
          description: No Content
    delete:
      tags:
      - address-property-reference-controller
      description: delete-country-by-address-Id
      operationId: deletePropertyReference-address-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /addresses/{id}/country/{propertyId}:
    get:
      tags:
      - address-property-reference-controller
      description: get-country-by-address-Id
      operationId: followPropertyReference-address-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCountry'
        "404":
          description: Not Found
    delete:
      tags:
      - address-property-reference-controller
      description: delete-country-by-address-Id
      operationId: deletePropertyReferenceId-address-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /addresses/{id}/original:
    get:
      tags:
      - address-property-reference-controller
      description: get-address-by-address-Id
      operationId: followPropertyReference-address-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - address-property-reference-controller
      description: update-address-by-address-Id
      operationId: createPropertyReference-address-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - address-property-reference-controller
      description: delete-address-by-address-Id
      operationId: deletePropertyReference-address-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /addresses/{id}/original/{propertyId}:
    get:
      tags:
      - address-property-reference-controller
      description: get-address-by-address-Id
      operationId: followPropertyReference-address-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - address-property-reference-controller
      description: delete-address-by-address-Id
      operationId: deletePropertyReferenceId-address-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /addresses/{id}/region:
    get:
      tags:
      - address-property-reference-controller
      description: get-region-by-address-Id
      operationId: followPropertyReference-address-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelRegion'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - address-property-reference-controller
      description: update-region-by-address-Id
      operationId: createPropertyReference-address-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelRegion'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelRegion'
        "204":
          description: No Content
    delete:
      tags:
      - address-property-reference-controller
      description: delete-region-by-address-Id
      operationId: deletePropertyReference-address-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /addresses/{id}/region/{propertyId}:
    get:
      tags:
      - address-property-reference-controller
      description: get-region-by-address-Id
      operationId: followPropertyReference-address-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelRegion'
        "404":
          description: Not Found
    delete:
      tags:
      - address-property-reference-controller
      description: delete-region-by-address-Id
      operationId: deletePropertyReferenceId-address-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /addresses/{id}/title:
    get:
      tags:
      - address-property-reference-controller
      description: get-title-by-address-Id
      operationId: followPropertyReference-address-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - address-property-reference-controller
      description: update-title-by-address-Id
      operationId: createPropertyReference-address-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
        "204":
          description: No Content
    delete:
      tags:
      - address-property-reference-controller
      description: delete-title-by-address-Id
      operationId: deletePropertyReference-address-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /addresses/{id}/title/{propertyId}:
    get:
      tags:
      - address-property-reference-controller
      description: get-title-by-address-Id
      operationId: followPropertyReference-address-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
        "404":
          description: Not Found
    delete:
      tags:
      - address-property-reference-controller
      description: delete-title-by-address-Id
      operationId: deletePropertyReferenceId-address-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /attribute-templates:
    get:
      tags:
      - attribute-template-entity-controller
      description: get-attributetemplate
      operationId: getCollectionResource-attributetemplate-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAttributeTemplate'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAttributeTemplate'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - attribute-template-entity-controller
      description: create-attributetemplate
      operationId: postCollectionResource-attributetemplate-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeTemplateRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeTemplate'
  /attribute-templates/search/findByName:
    get:
      tags:
      - attribute-template-search-controller
      operationId: executeSearch-attributetemplate-get
      parameters:
      - name: name
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeTemplate'
        "404":
          description: Not Found
  /attribute-templates/{id}:
    get:
      tags:
      - attribute-template-entity-controller
      description: get-attributetemplate
      operationId: getItemResource-attributetemplate-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeTemplate'
        "404":
          description: Not Found
    put:
      tags:
      - attribute-template-entity-controller
      description: update-attributetemplate
      operationId: putItemResource-attributetemplate-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeTemplateRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeTemplate'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeTemplate'
        "204":
          description: No Content
    delete:
      tags:
      - attribute-template-entity-controller
      description: delete-attributetemplate
      operationId: deleteItemResource-attributetemplate-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /attribute-templates/{id}/attributes:
    get:
      tags:
      - attribute-template-property-reference-controller
      description: get-attribute-by-attributetemplate-Id
      operationId: followPropertyReference-attributetemplate-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAttribute'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - attribute-template-property-reference-controller
      description: update-attribute-by-attributetemplate-Id
      operationId: createPropertyReference-attributetemplate-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAttribute'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAttribute'
        "204":
          description: No Content
    delete:
      tags:
      - attribute-template-property-reference-controller
      description: delete-attribute-by-attributetemplate-Id
      operationId: deletePropertyReference-attributetemplate-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /attribute-templates/{id}/attributes/{propertyId}:
    get:
      tags:
      - attribute-template-property-reference-controller
      description: get-attribute-by-attributetemplate-Id
      operationId: followPropertyReference-attributetemplate-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAttribute'
        "404":
          description: Not Found
    delete:
      tags:
      - attribute-template-property-reference-controller
      description: delete-attribute-by-attributetemplate-Id
      operationId: deletePropertyReferenceId-attributetemplate-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /attribute-templates/{id}/categories:
    get:
      tags:
      - attribute-template-property-reference-controller
      description: get-category-by-attributetemplate-Id
      operationId: followPropertyReference-attributetemplate-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - attribute-template-property-reference-controller
      description: update-category-by-attributetemplate-Id
      operationId: createPropertyReference-attributetemplate-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "204":
          description: No Content
    delete:
      tags:
      - attribute-template-property-reference-controller
      description: delete-category-by-attributetemplate-Id
      operationId: deletePropertyReference-attributetemplate-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /attribute-templates/{id}/categories/{propertyId}:
    get:
      tags:
      - attribute-template-property-reference-controller
      description: get-category-by-attributetemplate-Id
      operationId: followPropertyReference-attributetemplate-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "404":
          description: Not Found
    delete:
      tags:
      - attribute-template-property-reference-controller
      description: delete-category-by-attributetemplate-Id
      operationId: deletePropertyReferenceId-attributetemplate-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /attribute-units:
    get:
      tags:
      - attribute-unit-entity-controller
      description: get-attributeunit
      operationId: getCollectionResource-attributeunit-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAttributeUnit'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAttributeUnit'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - attribute-unit-entity-controller
      description: create-attributeunit
      operationId: postCollectionResource-attributeunit-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeUnitRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeUnit'
  /attribute-units/search/findByCode:
    get:
      tags:
      - attribute-unit-search-controller
      operationId: executeSearch-attributeunit-get
      parameters:
      - name: code
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeUnit'
        "404":
          description: Not Found
  /attribute-units/{id}:
    get:
      tags:
      - attribute-unit-entity-controller
      description: get-attributeunit
      operationId: getItemResource-attributeunit-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeUnit'
        "404":
          description: Not Found
    put:
      tags:
      - attribute-unit-entity-controller
      description: update-attributeunit
      operationId: putItemResource-attributeunit-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeUnitRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeUnit'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeUnit'
        "204":
          description: No Content
    delete:
      tags:
      - attribute-unit-entity-controller
      description: delete-attributeunit
      operationId: deleteItemResource-attributeunit-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /attributes:
    get:
      tags:
      - attribute-entity-controller
      description: get-attribute
      operationId: getCollectionResource-attribute-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAttribute'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAttribute'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - attribute-entity-controller
      description: create-attribute
      operationId: postCollectionResource-attribute-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttribute'
  /attributes/search/findByName:
    get:
      tags:
      - attribute-search-controller
      operationId: executeSearch-attribute-get
      parameters:
      - name: name
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttribute'
        "404":
          description: Not Found
  /attributes/{id}:
    get:
      tags:
      - attribute-entity-controller
      description: get-attribute
      operationId: getItemResource-attribute-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttribute'
        "404":
          description: Not Found
    put:
      tags:
      - attribute-entity-controller
      description: update-attribute
      operationId: putItemResource-attribute-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttribute'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttribute'
        "204":
          description: No Content
    delete:
      tags:
      - attribute-entity-controller
      description: delete-attribute
      operationId: deleteItemResource-attribute-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /attributes/{id}/templates:
    get:
      tags:
      - attribute-property-reference-controller
      description: get-attributetemplate-by-attribute-Id
      operationId: followPropertyReference-attribute-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAttributeTemplate'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - attribute-property-reference-controller
      description: update-attributetemplate-by-attribute-Id
      operationId: createPropertyReference-attribute-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAttributeTemplate'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAttributeTemplate'
        "204":
          description: No Content
    delete:
      tags:
      - attribute-property-reference-controller
      description: delete-attributetemplate-by-attribute-Id
      operationId: deletePropertyReference-attribute-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /attributes/{id}/templates/{propertyId}:
    get:
      tags:
      - attribute-property-reference-controller
      description: get-attributetemplate-by-attribute-Id
      operationId: followPropertyReference-attribute-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAttributeTemplate'
        "404":
          description: Not Found
    delete:
      tags:
      - attribute-property-reference-controller
      description: delete-attributetemplate-by-attribute-Id
      operationId: deletePropertyReferenceId-attribute-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers:
    get:
      tags:
      - b-2-b-customer-entity-controller
      description: get-b2bcustomer
      operationId: getCollectionResource-b2bcustomer-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BCustomer'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BCustomer'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - b-2-b-customer-entity-controller
      description: create-b2bcustomer
      operationId: postCollectionResource-b2bcustomer-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BCustomerRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BCustomer'
  /b2b-customers/{id}:
    get:
      tags:
      - b-2-b-customer-entity-controller
      description: get-b2bcustomer
      operationId: getItemResource-b2bcustomer-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BCustomer'
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-entity-controller
      description: update-b2bcustomer
      operationId: putItemResource-b2bcustomer-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BCustomerRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BCustomer'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BCustomer'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-entity-controller
      description: delete-b2bcustomer
      operationId: deleteItemResource-b2bcustomer-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/accessibleCatalogs:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-catalog-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-catalog-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-catalog-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/accessibleCatalogs/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-catalog-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-catalog-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/accessibleCategories:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-category-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-category-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-category-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/accessibleCategories/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-category-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-category-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/addresses:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-address-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-address-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-address-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/addresses/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-address-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-address-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/billingAddress:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-address-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-address-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-address-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/billingAddress/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-address-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-address-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/carts:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-cart-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-cart-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-cart-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/carts/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-cart-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-cart-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/defaultB2BUnit:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-b2bunit-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-b2bunit-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-b2bunit-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/defaultB2BUnit/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-b2bunit-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-b2bunit-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/defaultPaymentInfo:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-paymentinfo-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_7_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-paymentinfo-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-paymentinfo-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/defaultPaymentInfo/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-paymentinfo-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-paymentinfo-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/discountGroup:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-userdiscountgroup-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_8_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-userdiscountgroup-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-userdiscountgroup-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/discountGroup/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-userdiscountgroup-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-userdiscountgroup-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/groups:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-usergroup-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_9_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-usergroup-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-usergroup-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/groups/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-usergroup-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-usergroup-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/orders:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-order-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_10_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-order-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-order-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/orders/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-order-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-order-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/paymentInfos:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-paymentinfo-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_11_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-paymentinfo-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-paymentinfo-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/paymentInfos/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-paymentinfo-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-paymentinfo-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/priceGroup:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-userpricegroup-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_12_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-userpricegroup-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-userpricegroup-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/priceGroup/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-userpricegroup-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-userpricegroup-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/profilePicture:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-media-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_13_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-media-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-media-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/profilePicture/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-media-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-media-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/sessionCurrency:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-currency-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_14_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-currency-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-currency-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/sessionCurrency/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-currency-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-currency-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/sessionLanguage:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-language-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_15_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-language-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-language-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/sessionLanguage/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-language-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-language-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/shippingAddress:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-address-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_16_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-address-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-address-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/shippingAddress/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-address-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_16
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-address-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/taxGroup:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-usertaxgroup-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_17_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-usertaxgroup-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_16
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-usertaxgroup-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_16
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/taxGroup/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-usertaxgroup-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_17
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-usertaxgroup-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_16
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/title:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-title-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_18_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-customer-property-reference-controller
      description: update-title-by-b2bcustomer-Id
      operationId: createPropertyReference-b2bcustomer-put_17
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-title-by-b2bcustomer-Id
      operationId: deletePropertyReference-b2bcustomer-delete_17
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-customers/{id}/title/{propertyId}:
    get:
      tags:
      - b-2-b-customer-property-reference-controller
      description: get-title-by-b2bcustomer-Id
      operationId: followPropertyReference-b2bcustomer-get_18
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-customer-property-reference-controller
      description: delete-title-by-b2bcustomer-Id
      operationId: deletePropertyReferenceId-b2bcustomer-delete_17
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-permissions:
    get:
      tags:
      - b-2-b-permission-entity-controller
      description: get-b2bpermission
      operationId: getCollectionResource-b2bpermission-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BPermission'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BPermission'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - b-2-b-permission-entity-controller
      description: create-b2bpermission
      operationId: postCollectionResource-b2bpermission-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BPermissionRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BPermission'
  /b2b-permissions/{id}:
    get:
      tags:
      - b-2-b-permission-entity-controller
      description: get-b2bpermission
      operationId: getItemResource-b2bpermission-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BPermission'
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-permission-entity-controller
      description: update-b2bpermission
      operationId: putItemResource-b2bpermission-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BPermissionRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BPermission'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BPermission'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-permission-entity-controller
      description: delete-b2bpermission
      operationId: deleteItemResource-b2bpermission-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-permissions/{id}/unit:
    get:
      tags:
      - b-2-b-permission-property-reference-controller
      description: get-b2bunit-by-b2bpermission-Id
      operationId: followPropertyReference-b2bpermission-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-permission-property-reference-controller
      description: update-b2bunit-by-b2bpermission-Id
      operationId: createPropertyReference-b2bpermission-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-permission-property-reference-controller
      description: delete-b2bunit-by-b2bpermission-Id
      operationId: deletePropertyReference-b2bpermission-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-permissions/{id}/unit/{propertyId}:
    get:
      tags:
      - b-2-b-permission-property-reference-controller
      description: get-b2bunit-by-b2bpermission-Id
      operationId: followPropertyReference-b2bpermission-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-permission-property-reference-controller
      description: delete-b2bunit-by-b2bpermission-Id
      operationId: deletePropertyReferenceId-b2bpermission-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units:
    get:
      tags:
      - b-2-b-unit-entity-controller
      description: get-b2bunit
      operationId: getCollectionResource-b2bunit-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BUnit'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BUnit'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - b-2-b-unit-entity-controller
      description: create-b2bunit
      operationId: postCollectionResource-b2bunit-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BUnitRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
  /b2b-units/{id}:
    get:
      tags:
      - b-2-b-unit-entity-controller
      description: get-b2bunit
      operationId: getItemResource-b2bunit-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-entity-controller
      description: update-b2bunit
      operationId: putItemResource-b2bunit-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BUnitRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-entity-controller
      description: delete-b2bunit
      operationId: deleteItemResource-b2bunit-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/accessibleCatalogs:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-catalog-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-catalog-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-catalog-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/accessibleCatalogs/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-catalog-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-catalog-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/accessibleCategories:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-category-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-category-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-category-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/accessibleCategories/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-category-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-category-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/accountManager:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-employee-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmployee'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-employee-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmployee'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmployee'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-employee-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/accountManager/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-employee-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmployee'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-employee-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/addresses:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-address-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-address-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-address-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/addresses/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-address-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-address-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/approvers:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-b2bcustomer-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BCustomer'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-b2bcustomer-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BCustomer'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BCustomer'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-b2bcustomer-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/approvers/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-b2bcustomer-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BCustomer'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-b2bcustomer-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/billingAddress:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-address-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-address-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-address-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/billingAddress/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-address-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-address-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/contact:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-user-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_7_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-user-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-user-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/contact/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-user-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-user-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/contactAddress:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-address-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_8_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-address-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-address-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/contactAddress/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-address-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-address-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/costCenters:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-b2bcostcenter-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_9_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BCostCenter'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-b2bcostcenter-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BCostCenter'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BCostCenter'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-b2bcostcenter-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/costCenters/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-b2bcostcenter-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BCostCenter'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-b2bcostcenter-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/groups:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-usergroup-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_10_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-usergroup-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-usergroup-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/groups/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-usergroup-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-usergroup-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/members:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-principal-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_11_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-principal-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-principal-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/members/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-principal-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-principal-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/orders:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-order-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_12_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-order-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-order-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/orders/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-order-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-order-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/permissions:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-b2bpermission-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_13_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BPermission'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-b2bpermission-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BPermission'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BPermission'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-b2bpermission-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/permissions/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-b2bpermission-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BPermission'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-b2bpermission-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/profilePicture:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-media-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_14_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-media-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-media-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/profilePicture/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-media-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-media-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/quoteLimit:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-b2bquotelimit-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_15_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BQuoteLimit'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-b2bquotelimit-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BQuoteLimit'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BQuoteLimit'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-b2bquotelimit-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/quoteLimit/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-b2bquotelimit-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BQuoteLimit'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-b2bquotelimit-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/shippingAddress:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-address-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_16_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-address-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-address-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/shippingAddress/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-address-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_16
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-address-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/userDiscountGroup:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-userdiscountgroup-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_17_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-userdiscountgroup-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_16
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-userdiscountgroup-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_16
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/userDiscountGroup/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-userdiscountgroup-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_17
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-userdiscountgroup-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_16
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/userPriceGroup:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-userpricegroup-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_18_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-userpricegroup-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_17
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-userpricegroup-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_17
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/userPriceGroup/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-userpricegroup-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_18
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-userpricegroup-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_17
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/userTaxGroup:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-usertaxgroup-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_19_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-unit-property-reference-controller
      description: update-usertaxgroup-by-b2bunit-Id
      operationId: createPropertyReference-b2bunit-put_18
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-usertaxgroup-by-b2bunit-Id
      operationId: deletePropertyReference-b2bunit-delete_18
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /b2b-units/{id}/userTaxGroup/{propertyId}:
    get:
      tags:
      - b-2-b-unit-property-reference-controller
      description: get-usertaxgroup-by-b2bunit-Id
      operationId: followPropertyReference-b2bunit-get_19
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-unit-property-reference-controller
      description: delete-usertaxgroup-by-b2bunit-Id
      operationId: deletePropertyReferenceId-b2bunit-delete_18
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores:
    get:
      tags:
      - base-store-entity-controller
      description: get-basestore
      operationId: getCollectionResource-basestore-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelBaseStore'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelBaseStore'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - base-store-entity-controller
      description: create-basestore
      operationId: postCollectionResource-basestore-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseStoreRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
  /base-stores/{id}:
    get:
      tags:
      - base-store-entity-controller
      description: get-basestore
      operationId: getItemResource-basestore-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
        "404":
          description: Not Found
    put:
      tags:
      - base-store-entity-controller
      description: update-basestore
      operationId: putItemResource-basestore-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseStoreRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
        "204":
          description: No Content
    delete:
      tags:
      - base-store-entity-controller
      description: delete-basestore
      operationId: deleteItemResource-basestore-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/currencies:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-currency-by-basestore-Id
      operationId: followPropertyReference-basestore-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - base-store-property-reference-controller
      description: update-currency-by-basestore-Id
      operationId: createPropertyReference-basestore-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-currency-by-basestore-Id
      operationId: deletePropertyReference-basestore-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/currencies/{propertyId}:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-currency-by-basestore-Id
      operationId: followPropertyReference-basestore-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-currency-by-basestore-Id
      operationId: deletePropertyReferenceId-basestore-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/defaultCurrency:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-currency-by-basestore-Id
      operationId: followPropertyReference-basestore-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - base-store-property-reference-controller
      description: update-currency-by-basestore-Id
      operationId: createPropertyReference-basestore-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-currency-by-basestore-Id
      operationId: deletePropertyReference-basestore-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/defaultCurrency/{propertyId}:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-currency-by-basestore-Id
      operationId: followPropertyReference-basestore-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-currency-by-basestore-Id
      operationId: deletePropertyReferenceId-basestore-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/defaultDeliveryOrigin:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-pointofservice-by-basestore-Id
      operationId: followPropertyReference-basestore-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPointOfService'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - base-store-property-reference-controller
      description: update-pointofservice-by-basestore-Id
      operationId: createPropertyReference-basestore-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPointOfService'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPointOfService'
        "204":
          description: No Content
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-pointofservice-by-basestore-Id
      operationId: deletePropertyReference-basestore-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/defaultDeliveryOrigin/{propertyId}:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-pointofservice-by-basestore-Id
      operationId: followPropertyReference-basestore-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPointOfService'
        "404":
          description: Not Found
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-pointofservice-by-basestore-Id
      operationId: deletePropertyReferenceId-basestore-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/defaultLanguage:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-language-by-basestore-Id
      operationId: followPropertyReference-basestore-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - base-store-property-reference-controller
      description: update-language-by-basestore-Id
      operationId: createPropertyReference-basestore-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "204":
          description: No Content
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-language-by-basestore-Id
      operationId: deletePropertyReference-basestore-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/defaultLanguage/{propertyId}:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-language-by-basestore-Id
      operationId: followPropertyReference-basestore-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "404":
          description: Not Found
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-language-by-basestore-Id
      operationId: deletePropertyReferenceId-basestore-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/languages:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-language-by-basestore-Id
      operationId: followPropertyReference-basestore-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelLanguage'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - base-store-property-reference-controller
      description: update-language-by-basestore-Id
      operationId: createPropertyReference-basestore-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelLanguage'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelLanguage'
        "204":
          description: No Content
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-language-by-basestore-Id
      operationId: deletePropertyReference-basestore-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/languages/{propertyId}:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-language-by-basestore-Id
      operationId: followPropertyReference-basestore-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelLanguage'
        "404":
          description: Not Found
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-language-by-basestore-Id
      operationId: deletePropertyReferenceId-basestore-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/pointOfServices:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-pointofservice-by-basestore-Id
      operationId: followPropertyReference-basestore-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPointOfService'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - base-store-property-reference-controller
      description: update-pointofservice-by-basestore-Id
      operationId: createPropertyReference-basestore-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPointOfService'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPointOfService'
        "204":
          description: No Content
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-pointofservice-by-basestore-Id
      operationId: deletePropertyReference-basestore-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/pointOfServices/{propertyId}:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-pointofservice-by-basestore-Id
      operationId: followPropertyReference-basestore-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPointOfService'
        "404":
          description: Not Found
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-pointofservice-by-basestore-Id
      operationId: deletePropertyReferenceId-basestore-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/warehouses:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-warehouse-by-basestore-Id
      operationId: followPropertyReference-basestore-get_7_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelWarehouse'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - base-store-property-reference-controller
      description: update-warehouse-by-basestore-Id
      operationId: createPropertyReference-basestore-put_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelWarehouse'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelWarehouse'
        "204":
          description: No Content
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-warehouse-by-basestore-Id
      operationId: deletePropertyReference-basestore-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /base-stores/{id}/warehouses/{propertyId}:
    get:
      tags:
      - base-store-property-reference-controller
      description: get-warehouse-by-basestore-Id
      operationId: followPropertyReference-basestore-get_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelWarehouse'
        "404":
          description: Not Found
    delete:
      tags:
      - base-store-property-reference-controller
      description: delete-warehouse-by-basestore-Id
      operationId: deletePropertyReferenceId-basestore-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /budgets:
    get:
      tags:
      - b-2-b-budget-entity-controller
      description: get-b2bbudget
      operationId: getCollectionResource-b2bbudget-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BBudget'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BBudget'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - b-2-b-budget-entity-controller
      description: create-b2bbudget
      operationId: postCollectionResource-b2bbudget-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BBudgetRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BBudget'
  /budgets/{id}:
    get:
      tags:
      - b-2-b-budget-entity-controller
      description: get-b2bbudget
      operationId: getItemResource-b2bbudget-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BBudget'
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-budget-entity-controller
      description: update-b2bbudget
      operationId: putItemResource-b2bbudget-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BBudgetRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BBudget'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BBudget'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-budget-entity-controller
      description: delete-b2bbudget
      operationId: deleteItemResource-b2bbudget-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /budgets/{id}/costCenters:
    get:
      tags:
      - b-2-b-budget-property-reference-controller
      description: get-b2bcostcenter-by-b2bbudget-Id
      operationId: followPropertyReference-b2bbudget-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BCostCenter'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-budget-property-reference-controller
      description: update-b2bcostcenter-by-b2bbudget-Id
      operationId: createPropertyReference-b2bbudget-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BCostCenter'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BCostCenter'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-budget-property-reference-controller
      description: delete-b2bcostcenter-by-b2bbudget-Id
      operationId: deletePropertyReference-b2bbudget-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /budgets/{id}/costCenters/{propertyId}:
    get:
      tags:
      - b-2-b-budget-property-reference-controller
      description: get-b2bcostcenter-by-b2bbudget-Id
      operationId: followPropertyReference-b2bbudget-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BCostCenter'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-budget-property-reference-controller
      description: delete-b2bcostcenter-by-b2bbudget-Id
      operationId: deletePropertyReferenceId-b2bbudget-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /budgets/{id}/currency:
    get:
      tags:
      - b-2-b-budget-property-reference-controller
      description: get-currency-by-b2bbudget-Id
      operationId: followPropertyReference-b2bbudget-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-budget-property-reference-controller
      description: update-currency-by-b2bbudget-Id
      operationId: createPropertyReference-b2bbudget-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-budget-property-reference-controller
      description: delete-currency-by-b2bbudget-Id
      operationId: deletePropertyReference-b2bbudget-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /budgets/{id}/currency/{propertyId}:
    get:
      tags:
      - b-2-b-budget-property-reference-controller
      description: get-currency-by-b2bbudget-Id
      operationId: followPropertyReference-b2bbudget-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-budget-property-reference-controller
      description: delete-currency-by-b2bbudget-Id
      operationId: deletePropertyReferenceId-b2bbudget-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cart-entries:
    get:
      tags:
      - cart-entry-entity-controller
      description: get-cartentry
      operationId: getCollectionResource-cartentry-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCartEntry'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCartEntry'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - cart-entry-entity-controller
      description: create-cartentry
      operationId: postCollectionResource-cartentry-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartEntryRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCartEntry'
  /cart-entries/{id}:
    get:
      tags:
      - cart-entry-entity-controller
      description: get-cartentry
      operationId: getItemResource-cartentry-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCartEntry'
        "404":
          description: Not Found
    put:
      tags:
      - cart-entry-entity-controller
      description: update-cartentry
      operationId: putItemResource-cartentry-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartEntryRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCartEntry'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCartEntry'
        "204":
          description: No Content
    delete:
      tags:
      - cart-entry-entity-controller
      description: delete-cartentry
      operationId: deleteItemResource-cartentry-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cart-entries/{id}/costCenter:
    get:
      tags:
      - cart-entry-property-reference-controller
      description: get-b2bcostcenter-by-cartentry-Id
      operationId: followPropertyReference-cartentry-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BCostCenter'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cart-entry-property-reference-controller
      description: update-b2bcostcenter-by-cartentry-Id
      operationId: createPropertyReference-cartentry-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BCostCenter'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BCostCenter'
        "204":
          description: No Content
    delete:
      tags:
      - cart-entry-property-reference-controller
      description: delete-b2bcostcenter-by-cartentry-Id
      operationId: deletePropertyReference-cartentry-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cart-entries/{id}/costCenter/{propertyId}:
    get:
      tags:
      - cart-entry-property-reference-controller
      description: get-b2bcostcenter-by-cartentry-Id
      operationId: followPropertyReference-cartentry-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BCostCenter'
        "404":
          description: Not Found
    delete:
      tags:
      - cart-entry-property-reference-controller
      description: delete-b2bcostcenter-by-cartentry-Id
      operationId: deletePropertyReferenceId-cartentry-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cart-entries/{id}/deliveryPointOfService:
    get:
      tags:
      - cart-entry-property-reference-controller
      description: get-pointofservice-by-cartentry-Id
      operationId: followPropertyReference-cartentry-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPointOfService'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cart-entry-property-reference-controller
      description: update-pointofservice-by-cartentry-Id
      operationId: createPropertyReference-cartentry-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPointOfService'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPointOfService'
        "204":
          description: No Content
    delete:
      tags:
      - cart-entry-property-reference-controller
      description: delete-pointofservice-by-cartentry-Id
      operationId: deletePropertyReference-cartentry-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cart-entries/{id}/deliveryPointOfService/{propertyId}:
    get:
      tags:
      - cart-entry-property-reference-controller
      description: get-pointofservice-by-cartentry-Id
      operationId: followPropertyReference-cartentry-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPointOfService'
        "404":
          description: Not Found
    delete:
      tags:
      - cart-entry-property-reference-controller
      description: delete-pointofservice-by-cartentry-Id
      operationId: deletePropertyReferenceId-cartentry-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cart-entries/{id}/order:
    get:
      tags:
      - cart-entry-property-reference-controller
      description: get-cart-by-cartentry-Id
      operationId: followPropertyReference-cartentry-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCart'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cart-entry-property-reference-controller
      description: update-cart-by-cartentry-Id
      operationId: createPropertyReference-cartentry-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCart'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCart'
        "204":
          description: No Content
    delete:
      tags:
      - cart-entry-property-reference-controller
      description: delete-cart-by-cartentry-Id
      operationId: deletePropertyReference-cartentry-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cart-entries/{id}/order/{propertyId}:
    get:
      tags:
      - cart-entry-property-reference-controller
      description: get-cart-by-cartentry-Id
      operationId: followPropertyReference-cartentry-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCart'
        "404":
          description: Not Found
    delete:
      tags:
      - cart-entry-property-reference-controller
      description: delete-cart-by-cartentry-Id
      operationId: deletePropertyReferenceId-cartentry-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cart-entries/{id}/product:
    get:
      tags:
      - cart-entry-property-reference-controller
      description: get-product-by-cartentry-Id
      operationId: followPropertyReference-cartentry-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cart-entry-property-reference-controller
      description: update-product-by-cartentry-Id
      operationId: createPropertyReference-cartentry-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "204":
          description: No Content
    delete:
      tags:
      - cart-entry-property-reference-controller
      description: delete-product-by-cartentry-Id
      operationId: deletePropertyReference-cartentry-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cart-entries/{id}/product/{propertyId}:
    get:
      tags:
      - cart-entry-property-reference-controller
      description: get-product-by-cartentry-Id
      operationId: followPropertyReference-cartentry-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "404":
          description: Not Found
    delete:
      tags:
      - cart-entry-property-reference-controller
      description: delete-product-by-cartentry-Id
      operationId: deletePropertyReferenceId-cartentry-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /catalogs:
    get:
      tags:
      - catalog-entity-controller
      description: get-catalog
      operationId: getCollectionResource-catalog-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCatalog'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCatalog'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - catalog-entity-controller
      description: create-catalog
      operationId: postCollectionResource-catalog-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
  /catalogs/search/findByCodeAndVersion:
    get:
      tags:
      - catalog-search-controller
      operationId: executeSearch-catalog-get
      parameters:
      - name: code
        in: query
        schema:
          type: string
      - name: catalogVersion
        in: query
        schema:
          type: string
          enum:
          - STAGED
          - ONLINE
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "404":
          description: Not Found
  /catalogs/{id}:
    get:
      tags:
      - catalog-entity-controller
      description: get-catalog
      operationId: getItemResource-catalog-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "404":
          description: Not Found
    put:
      tags:
      - catalog-entity-controller
      description: update-catalog
      operationId: putItemResource-catalog-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - catalog-entity-controller
      description: delete-catalog
      operationId: deleteItemResource-catalog-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /catalogs/{id}/allowedPrincipals:
    get:
      tags:
      - catalog-property-reference-controller
      description: get-principal-by-catalog-Id
      operationId: followPropertyReference-catalog-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - catalog-property-reference-controller
      description: update-principal-by-catalog-Id
      operationId: createPropertyReference-catalog-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
        "204":
          description: No Content
    delete:
      tags:
      - catalog-property-reference-controller
      description: delete-principal-by-catalog-Id
      operationId: deletePropertyReference-catalog-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /catalogs/{id}/allowedPrincipals/{propertyId}:
    get:
      tags:
      - catalog-property-reference-controller
      description: get-principal-by-catalog-Id
      operationId: followPropertyReference-catalog-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
        "404":
          description: Not Found
    delete:
      tags:
      - catalog-property-reference-controller
      description: delete-principal-by-catalog-Id
      operationId: deletePropertyReferenceId-catalog-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories:
    get:
      tags:
      - category-entity-controller
      description: get-category
      operationId: getCollectionResource-category-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCategory'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCategory'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - category-entity-controller
      description: create-category
      operationId: postCollectionResource-category-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCategory'
  /categories/search/findByCatalog:
    get:
      tags:
      - category-search-controller
      operationId: executeSearch-category-get
      parameters:
      - name: catalog
        in: query
        schema:
          $ref: '#/components/schemas/Catalog'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCategory'
        "404":
          description: Not Found
  /categories/search/findByCodeAndCatalog:
    get:
      tags:
      - category-search-controller
      operationId: executeSearch-category-get_1
      parameters:
      - name: code
        in: query
        schema:
          type: string
      - name: catalog
        in: query
        schema:
          $ref: '#/components/schemas/Catalog'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCategory'
        "404":
          description: Not Found
  /categories/{id}:
    get:
      tags:
      - category-entity-controller
      description: get-category
      operationId: getItemResource-category-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCategory'
        "404":
          description: Not Found
    put:
      tags:
      - category-entity-controller
      description: update-category
      operationId: putItemResource-category-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCategory'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCategory'
        "204":
          description: No Content
    delete:
      tags:
      - category-entity-controller
      description: delete-category
      operationId: deleteItemResource-category-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/allowedPrincipals:
    get:
      tags:
      - category-property-reference-controller
      description: get-principal-by-category-Id
      operationId: followPropertyReference-category-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - category-property-reference-controller
      description: update-principal-by-category-Id
      operationId: createPropertyReference-category-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
        "204":
          description: No Content
    delete:
      tags:
      - category-property-reference-controller
      description: delete-principal-by-category-Id
      operationId: deletePropertyReference-category-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/allowedPrincipals/{propertyId}:
    get:
      tags:
      - category-property-reference-controller
      description: get-principal-by-category-Id
      operationId: followPropertyReference-category-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
        "404":
          description: Not Found
    delete:
      tags:
      - category-property-reference-controller
      description: delete-principal-by-category-Id
      operationId: deletePropertyReferenceId-category-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/attributeTemplates:
    get:
      tags:
      - category-property-reference-controller
      description: get-attributetemplate-by-category-Id
      operationId: followPropertyReference-category-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAttributeTemplate'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - category-property-reference-controller
      description: update-attributetemplate-by-category-Id
      operationId: createPropertyReference-category-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAttributeTemplate'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAttributeTemplate'
        "204":
          description: No Content
    delete:
      tags:
      - category-property-reference-controller
      description: delete-attributetemplate-by-category-Id
      operationId: deletePropertyReference-category-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/attributeTemplates/{propertyId}:
    get:
      tags:
      - category-property-reference-controller
      description: get-attributetemplate-by-category-Id
      operationId: followPropertyReference-category-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAttributeTemplate'
        "404":
          description: Not Found
    delete:
      tags:
      - category-property-reference-controller
      description: delete-attributetemplate-by-category-Id
      operationId: deletePropertyReferenceId-category-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/catalog:
    get:
      tags:
      - category-property-reference-controller
      description: get-catalog-by-category-Id
      operationId: followPropertyReference-category-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - category-property-reference-controller
      description: update-catalog-by-category-Id
      operationId: createPropertyReference-category-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - category-property-reference-controller
      description: delete-catalog-by-category-Id
      operationId: deletePropertyReference-category-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/catalog/{propertyId}:
    get:
      tags:
      - category-property-reference-controller
      description: get-catalog-by-category-Id
      operationId: followPropertyReference-category-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "404":
          description: Not Found
    delete:
      tags:
      - category-property-reference-controller
      description: delete-catalog-by-category-Id
      operationId: deletePropertyReferenceId-category-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/mainImage:
    get:
      tags:
      - category-property-reference-controller
      description: get-media-by-category-Id
      operationId: followPropertyReference-category-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - category-property-reference-controller
      description: update-media-by-category-Id
      operationId: createPropertyReference-category-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "204":
          description: No Content
    delete:
      tags:
      - category-property-reference-controller
      description: delete-media-by-category-Id
      operationId: deletePropertyReference-category-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/mainImage/{propertyId}:
    get:
      tags:
      - category-property-reference-controller
      description: get-media-by-category-Id
      operationId: followPropertyReference-category-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "404":
          description: Not Found
    delete:
      tags:
      - category-property-reference-controller
      description: delete-media-by-category-Id
      operationId: deletePropertyReferenceId-category-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/products:
    get:
      tags:
      - category-property-reference-controller
      description: get-product-by-category-Id
      operationId: followPropertyReference-category-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelProduct'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - category-property-reference-controller
      description: update-product-by-category-Id
      operationId: createPropertyReference-category-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelProduct'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelProduct'
        "204":
          description: No Content
    delete:
      tags:
      - category-property-reference-controller
      description: delete-product-by-category-Id
      operationId: deletePropertyReference-category-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/products/{propertyId}:
    get:
      tags:
      - category-property-reference-controller
      description: get-product-by-category-Id
      operationId: followPropertyReference-category-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelProduct'
        "404":
          description: Not Found
    delete:
      tags:
      - category-property-reference-controller
      description: delete-product-by-category-Id
      operationId: deletePropertyReferenceId-category-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/subCategories:
    get:
      tags:
      - category-property-reference-controller
      description: get-category-by-category-Id
      operationId: followPropertyReference-category-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - category-property-reference-controller
      description: update-category-by-category-Id
      operationId: createPropertyReference-category-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "204":
          description: No Content
    delete:
      tags:
      - category-property-reference-controller
      description: delete-category-by-category-Id
      operationId: deletePropertyReference-category-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/subCategories/{propertyId}:
    get:
      tags:
      - category-property-reference-controller
      description: get-category-by-category-Id
      operationId: followPropertyReference-category-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "404":
          description: Not Found
    delete:
      tags:
      - category-property-reference-controller
      description: delete-category-by-category-Id
      operationId: deletePropertyReferenceId-category-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/superCategories:
    get:
      tags:
      - category-property-reference-controller
      description: get-category-by-category-Id
      operationId: followPropertyReference-category-get_7_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - category-property-reference-controller
      description: update-category-by-category-Id
      operationId: createPropertyReference-category-put_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "204":
          description: No Content
    delete:
      tags:
      - category-property-reference-controller
      description: delete-category-by-category-Id
      operationId: deletePropertyReference-category-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /categories/{id}/superCategories/{propertyId}:
    get:
      tags:
      - category-property-reference-controller
      description: get-category-by-category-Id
      operationId: followPropertyReference-category-get_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "404":
          description: Not Found
    delete:
      tags:
      - category-property-reference-controller
      description: delete-category-by-category-Id
      operationId: deletePropertyReferenceId-category-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cost-centers:
    get:
      tags:
      - b-2-b-cost-center-entity-controller
      description: get-b2bcostcenter
      operationId: getCollectionResource-b2bcostcenter-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BCostCenter'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BCostCenter'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - b-2-b-cost-center-entity-controller
      description: create-b2bcostcenter
      operationId: postCollectionResource-b2bcostcenter-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BCostCenterRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BCostCenter'
  /cost-centers/{id}:
    get:
      tags:
      - b-2-b-cost-center-entity-controller
      description: get-b2bcostcenter
      operationId: getItemResource-b2bcostcenter-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BCostCenter'
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-cost-center-entity-controller
      description: update-b2bcostcenter
      operationId: putItemResource-b2bcostcenter-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BCostCenterRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BCostCenter'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BCostCenter'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-cost-center-entity-controller
      description: delete-b2bcostcenter
      operationId: deleteItemResource-b2bcostcenter-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cost-centers/{id}/budgets:
    get:
      tags:
      - b-2-b-cost-center-property-reference-controller
      description: get-b2bbudget-by-b2bcostcenter-Id
      operationId: followPropertyReference-b2bcostcenter-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BBudget'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-cost-center-property-reference-controller
      description: update-b2bbudget-by-b2bcostcenter-Id
      operationId: createPropertyReference-b2bcostcenter-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BBudget'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BBudget'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-cost-center-property-reference-controller
      description: delete-b2bbudget-by-b2bcostcenter-Id
      operationId: deletePropertyReference-b2bcostcenter-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cost-centers/{id}/budgets/{propertyId}:
    get:
      tags:
      - b-2-b-cost-center-property-reference-controller
      description: get-b2bbudget-by-b2bcostcenter-Id
      operationId: followPropertyReference-b2bcostcenter-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelB2BBudget'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-cost-center-property-reference-controller
      description: delete-b2bbudget-by-b2bcostcenter-Id
      operationId: deletePropertyReferenceId-b2bcostcenter-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cost-centers/{id}/currency:
    get:
      tags:
      - b-2-b-cost-center-property-reference-controller
      description: get-currency-by-b2bcostcenter-Id
      operationId: followPropertyReference-b2bcostcenter-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-cost-center-property-reference-controller
      description: update-currency-by-b2bcostcenter-Id
      operationId: createPropertyReference-b2bcostcenter-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-cost-center-property-reference-controller
      description: delete-currency-by-b2bcostcenter-Id
      operationId: deletePropertyReference-b2bcostcenter-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cost-centers/{id}/currency/{propertyId}:
    get:
      tags:
      - b-2-b-cost-center-property-reference-controller
      description: get-currency-by-b2bcostcenter-Id
      operationId: followPropertyReference-b2bcostcenter-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-cost-center-property-reference-controller
      description: delete-currency-by-b2bcostcenter-Id
      operationId: deletePropertyReferenceId-b2bcostcenter-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /countries:
    get:
      tags:
      - country-entity-controller
      description: get-country
      operationId: getCollectionResource-country-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCountry'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCountry'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - country-entity-controller
      description: create-country
      operationId: postCollectionResource-country-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCountry'
  /countries/search/findByIsocode:
    get:
      tags:
      - country-search-controller
      operationId: executeSearch-country-get
      parameters:
      - name: isocode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCountry'
        "404":
          description: Not Found
  /countries/{id}:
    get:
      tags:
      - country-entity-controller
      description: get-country
      operationId: getItemResource-country-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCountry'
        "404":
          description: Not Found
    put:
      tags:
      - country-entity-controller
      description: update-country
      operationId: putItemResource-country-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCountry'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCountry'
        "204":
          description: No Content
    delete:
      tags:
      - country-entity-controller
      description: delete-country
      operationId: deleteItemResource-country-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /countries/{id}/regions:
    get:
      tags:
      - country-property-reference-controller
      description: get-region-by-country-Id
      operationId: followPropertyReference-country-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelRegion'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - country-property-reference-controller
      description: update-region-by-country-Id
      operationId: createPropertyReference-country-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelRegion'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelRegion'
        "204":
          description: No Content
    delete:
      tags:
      - country-property-reference-controller
      description: delete-region-by-country-Id
      operationId: deletePropertyReference-country-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /countries/{id}/regions/{propertyId}:
    get:
      tags:
      - country-property-reference-controller
      description: get-region-by-country-Id
      operationId: followPropertyReference-country-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelRegion'
        "404":
          description: Not Found
    delete:
      tags:
      - country-property-reference-controller
      description: delete-region-by-country-Id
      operationId: deletePropertyReferenceId-country-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cronjobs:
    get:
      tags:
      - cron-job-entity-controller
      description: get-cronjob
      operationId: getCollectionResource-cronjob-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCronJob'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCronJob'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - cron-job-entity-controller
      description: create-cronjob
      operationId: postCollectionResource-cronjob-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CronJobRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCronJob'
  /cronjobs/search/findByJobName:
    get:
      tags:
      - cron-job-search-controller
      operationId: executeSearch-cronjob-get
      parameters:
      - name: jobName
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCronJob'
        "404":
          description: Not Found
  /cronjobs/search/findByJobNameAndJobGroup:
    get:
      tags:
      - cron-job-search-controller
      operationId: executeSearch-cronjob-get_1
      parameters:
      - name: jobName
        in: query
        schema:
          type: string
      - name: jobGroup
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCronJob'
        "404":
          description: Not Found
  /cronjobs/{id}:
    get:
      tags:
      - cron-job-entity-controller
      description: get-cronjob
      operationId: getItemResource-cronjob-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCronJob'
        "404":
          description: Not Found
    put:
      tags:
      - cron-job-entity-controller
      description: update-cronjob
      operationId: putItemResource-cronjob-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CronJobRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCronJob'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCronJob'
        "204":
          description: No Content
    delete:
      tags:
      - cron-job-entity-controller
      description: delete-cronjob
      operationId: deleteItemResource-cronjob-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /currencies:
    get:
      tags:
      - currency-entity-controller
      description: get-currency
      operationId: getCollectionResource-currency-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCurrency'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCurrency'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - currency-entity-controller
      description: create-currency
      operationId: postCollectionResource-currency-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
  /currencies/search/findByIsocode:
    get:
      tags:
      - currency-search-controller
      operationId: executeSearch-currency-get
      parameters:
      - name: isocode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
  /currencies/{id}:
    get:
      tags:
      - currency-entity-controller
      description: get-currency
      operationId: getItemResource-currency-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    put:
      tags:
      - currency-entity-controller
      description: update-currency
      operationId: putItemResource-currency-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - currency-entity-controller
      description: delete-currency
      operationId: deleteItemResource-currency-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /currencies/{id}/baseStores:
    get:
      tags:
      - currency-property-reference-controller
      description: get-basestore-by-currency-Id
      operationId: followPropertyReference-currency-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelBaseStore'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - currency-property-reference-controller
      description: update-basestore-by-currency-Id
      operationId: createPropertyReference-currency-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelBaseStore'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelBaseStore'
        "204":
          description: No Content
    delete:
      tags:
      - currency-property-reference-controller
      description: delete-basestore-by-currency-Id
      operationId: deletePropertyReference-currency-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /currencies/{id}/baseStores/{propertyId}:
    get:
      tags:
      - currency-property-reference-controller
      description: get-basestore-by-currency-Id
      operationId: followPropertyReference-currency-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelBaseStore'
        "404":
          description: Not Found
    delete:
      tags:
      - currency-property-reference-controller
      description: delete-basestore-by-currency-Id
      operationId: deletePropertyReferenceId-currency-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers:
    get:
      tags:
      - customer-entity-controller
      description: get-customer
      operationId: getCollectionResource-customer-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCustomer'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCustomer'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - customer-entity-controller
      description: create-customer
      operationId: postCollectionResource-customer-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCustomer'
  /customers/{id}:
    get:
      tags:
      - customer-entity-controller
      description: get-customer
      operationId: getItemResource-customer-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCustomer'
        "404":
          description: Not Found
    put:
      tags:
      - customer-entity-controller
      description: update-customer
      operationId: putItemResource-customer-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCustomer'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCustomer'
        "204":
          description: No Content
    delete:
      tags:
      - customer-entity-controller
      description: delete-customer
      operationId: deleteItemResource-customer-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/accessibleCatalogs:
    get:
      tags:
      - customer-property-reference-controller
      description: get-catalog-by-customer-Id
      operationId: followPropertyReference-customer-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-catalog-by-customer-Id
      operationId: createPropertyReference-customer-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-catalog-by-customer-Id
      operationId: deletePropertyReference-customer-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/accessibleCatalogs/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-catalog-by-customer-Id
      operationId: followPropertyReference-customer-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-catalog-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/accessibleCategories:
    get:
      tags:
      - customer-property-reference-controller
      description: get-category-by-customer-Id
      operationId: followPropertyReference-customer-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-category-by-customer-Id
      operationId: createPropertyReference-customer-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-category-by-customer-Id
      operationId: deletePropertyReference-customer-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/accessibleCategories/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-category-by-customer-Id
      operationId: followPropertyReference-customer-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-category-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/addresses:
    get:
      tags:
      - customer-property-reference-controller
      description: get-address-by-customer-Id
      operationId: followPropertyReference-customer-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-address-by-customer-Id
      operationId: createPropertyReference-customer-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-address-by-customer-Id
      operationId: deletePropertyReference-customer-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/addresses/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-address-by-customer-Id
      operationId: followPropertyReference-customer-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-address-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/billingAddress:
    get:
      tags:
      - customer-property-reference-controller
      description: get-address-by-customer-Id
      operationId: followPropertyReference-customer-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-address-by-customer-Id
      operationId: createPropertyReference-customer-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-address-by-customer-Id
      operationId: deletePropertyReference-customer-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/billingAddress/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-address-by-customer-Id
      operationId: followPropertyReference-customer-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-address-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/carts:
    get:
      tags:
      - customer-property-reference-controller
      description: get-cart-by-customer-Id
      operationId: followPropertyReference-customer-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-cart-by-customer-Id
      operationId: createPropertyReference-customer-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-cart-by-customer-Id
      operationId: deletePropertyReference-customer-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/carts/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-cart-by-customer-Id
      operationId: followPropertyReference-customer-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-cart-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/defaultPaymentInfo:
    get:
      tags:
      - customer-property-reference-controller
      description: get-paymentinfo-by-customer-Id
      operationId: followPropertyReference-customer-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-paymentinfo-by-customer-Id
      operationId: createPropertyReference-customer-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-paymentinfo-by-customer-Id
      operationId: deletePropertyReference-customer-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/defaultPaymentInfo/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-paymentinfo-by-customer-Id
      operationId: followPropertyReference-customer-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-paymentinfo-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/discountGroup:
    get:
      tags:
      - customer-property-reference-controller
      description: get-userdiscountgroup-by-customer-Id
      operationId: followPropertyReference-customer-get_7_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-userdiscountgroup-by-customer-Id
      operationId: createPropertyReference-customer-put_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-userdiscountgroup-by-customer-Id
      operationId: deletePropertyReference-customer-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/discountGroup/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-userdiscountgroup-by-customer-Id
      operationId: followPropertyReference-customer-get_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-userdiscountgroup-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/groups:
    get:
      tags:
      - customer-property-reference-controller
      description: get-usergroup-by-customer-Id
      operationId: followPropertyReference-customer-get_8_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-usergroup-by-customer-Id
      operationId: createPropertyReference-customer-put_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-usergroup-by-customer-Id
      operationId: deletePropertyReference-customer-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/groups/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-usergroup-by-customer-Id
      operationId: followPropertyReference-customer-get_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-usergroup-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/orders:
    get:
      tags:
      - customer-property-reference-controller
      description: get-order-by-customer-Id
      operationId: followPropertyReference-customer-get_9_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-order-by-customer-Id
      operationId: createPropertyReference-customer-put_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-order-by-customer-Id
      operationId: deletePropertyReference-customer-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/orders/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-order-by-customer-Id
      operationId: followPropertyReference-customer-get_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-order-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/paymentInfos:
    get:
      tags:
      - customer-property-reference-controller
      description: get-paymentinfo-by-customer-Id
      operationId: followPropertyReference-customer-get_10_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-paymentinfo-by-customer-Id
      operationId: createPropertyReference-customer-put_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-paymentinfo-by-customer-Id
      operationId: deletePropertyReference-customer-delete_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/paymentInfos/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-paymentinfo-by-customer-Id
      operationId: followPropertyReference-customer-get_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-paymentinfo-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/priceGroup:
    get:
      tags:
      - customer-property-reference-controller
      description: get-userpricegroup-by-customer-Id
      operationId: followPropertyReference-customer-get_11_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-userpricegroup-by-customer-Id
      operationId: createPropertyReference-customer-put_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-userpricegroup-by-customer-Id
      operationId: deletePropertyReference-customer-delete_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/priceGroup/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-userpricegroup-by-customer-Id
      operationId: followPropertyReference-customer-get_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-userpricegroup-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/profilePicture:
    get:
      tags:
      - customer-property-reference-controller
      description: get-media-by-customer-Id
      operationId: followPropertyReference-customer-get_12_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-media-by-customer-Id
      operationId: createPropertyReference-customer-put_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-media-by-customer-Id
      operationId: deletePropertyReference-customer-delete_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/profilePicture/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-media-by-customer-Id
      operationId: followPropertyReference-customer-get_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-media-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/sessionCurrency:
    get:
      tags:
      - customer-property-reference-controller
      description: get-currency-by-customer-Id
      operationId: followPropertyReference-customer-get_13_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-currency-by-customer-Id
      operationId: createPropertyReference-customer-put_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-currency-by-customer-Id
      operationId: deletePropertyReference-customer-delete_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/sessionCurrency/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-currency-by-customer-Id
      operationId: followPropertyReference-customer-get_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-currency-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/sessionLanguage:
    get:
      tags:
      - customer-property-reference-controller
      description: get-language-by-customer-Id
      operationId: followPropertyReference-customer-get_14_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-language-by-customer-Id
      operationId: createPropertyReference-customer-put_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-language-by-customer-Id
      operationId: deletePropertyReference-customer-delete_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/sessionLanguage/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-language-by-customer-Id
      operationId: followPropertyReference-customer-get_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-language-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/shippingAddress:
    get:
      tags:
      - customer-property-reference-controller
      description: get-address-by-customer-Id
      operationId: followPropertyReference-customer-get_15_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-address-by-customer-Id
      operationId: createPropertyReference-customer-put_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-address-by-customer-Id
      operationId: deletePropertyReference-customer-delete_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/shippingAddress/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-address-by-customer-Id
      operationId: followPropertyReference-customer-get_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-address-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/taxGroup:
    get:
      tags:
      - customer-property-reference-controller
      description: get-usertaxgroup-by-customer-Id
      operationId: followPropertyReference-customer-get_16_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-usertaxgroup-by-customer-Id
      operationId: createPropertyReference-customer-put_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-usertaxgroup-by-customer-Id
      operationId: deletePropertyReference-customer-delete_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/taxGroup/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-usertaxgroup-by-customer-Id
      operationId: followPropertyReference-customer-get_16
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-usertaxgroup-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/title:
    get:
      tags:
      - customer-property-reference-controller
      description: get-title-by-customer-Id
      operationId: followPropertyReference-customer-get_17_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - customer-property-reference-controller
      description: update-title-by-customer-Id
      operationId: createPropertyReference-customer-put_16
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
        "204":
          description: No Content
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-title-by-customer-Id
      operationId: deletePropertyReference-customer-delete_16
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /customers/{id}/title/{propertyId}:
    get:
      tags:
      - customer-property-reference-controller
      description: get-title-by-customer-Id
      operationId: followPropertyReference-customer-get_17
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
        "404":
          description: Not Found
    delete:
      tags:
      - customer-property-reference-controller
      description: delete-title-by-customer-Id
      operationId: deletePropertyReferenceId-customer-delete_16
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /db-infos:
    get:
      tags:
      - debit-card-payment-info-entity-controller
      description: get-debitcardpaymentinfo
      operationId: getCollectionResource-debitcardpaymentinfo-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelDebitCardPaymentInfo'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelDebitCardPaymentInfo'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - debit-card-payment-info-entity-controller
      description: create-debitcardpaymentinfo
      operationId: postCollectionResource-debitcardpaymentinfo-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebitCardPaymentInfoRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDebitCardPaymentInfo'
  /db-infos/{id}:
    get:
      tags:
      - debit-card-payment-info-entity-controller
      description: get-debitcardpaymentinfo
      operationId: getItemResource-debitcardpaymentinfo-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDebitCardPaymentInfo'
        "404":
          description: Not Found
    put:
      tags:
      - debit-card-payment-info-entity-controller
      description: update-debitcardpaymentinfo
      operationId: putItemResource-debitcardpaymentinfo-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebitCardPaymentInfoRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDebitCardPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDebitCardPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - debit-card-payment-info-entity-controller
      description: delete-debitcardpaymentinfo
      operationId: deleteItemResource-debitcardpaymentinfo-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /db-infos/{id}/billingAddress:
    get:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: get-address-by-debitcardpaymentinfo-Id
      operationId: followPropertyReference-debitcardpaymentinfo-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: update-address-by-debitcardpaymentinfo-Id
      operationId: createPropertyReference-debitcardpaymentinfo-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: delete-address-by-debitcardpaymentinfo-Id
      operationId: deletePropertyReference-debitcardpaymentinfo-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /db-infos/{id}/billingAddress/{propertyId}:
    get:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: get-address-by-debitcardpaymentinfo-Id
      operationId: followPropertyReference-debitcardpaymentinfo-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: delete-address-by-debitcardpaymentinfo-Id
      operationId: deletePropertyReferenceId-debitcardpaymentinfo-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /db-infos/{id}/original:
    get:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: get-paymentinfo-by-debitcardpaymentinfo-Id
      operationId: followPropertyReference-debitcardpaymentinfo-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: update-paymentinfo-by-debitcardpaymentinfo-Id
      operationId: createPropertyReference-debitcardpaymentinfo-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: delete-paymentinfo-by-debitcardpaymentinfo-Id
      operationId: deletePropertyReference-debitcardpaymentinfo-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /db-infos/{id}/original/{propertyId}:
    get:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: get-paymentinfo-by-debitcardpaymentinfo-Id
      operationId: followPropertyReference-debitcardpaymentinfo-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "404":
          description: Not Found
    delete:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: delete-paymentinfo-by-debitcardpaymentinfo-Id
      operationId: deletePropertyReferenceId-debitcardpaymentinfo-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /db-infos/{id}/user:
    get:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: get-user-by-debitcardpaymentinfo-Id
      operationId: followPropertyReference-debitcardpaymentinfo-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: update-user-by-debitcardpaymentinfo-Id
      operationId: createPropertyReference-debitcardpaymentinfo-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: delete-user-by-debitcardpaymentinfo-Id
      operationId: deletePropertyReference-debitcardpaymentinfo-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /db-infos/{id}/user/{propertyId}:
    get:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: get-user-by-debitcardpaymentinfo-Id
      operationId: followPropertyReference-debitcardpaymentinfo-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    delete:
      tags:
      - debit-card-payment-info-property-reference-controller
      description: delete-user-by-debitcardpaymentinfo-Id
      operationId: deletePropertyReferenceId-debitcardpaymentinfo-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discount-rows:
    get:
      tags:
      - discount-row-entity-controller
      description: get-discountrow
      operationId: getCollectionResource-discountrow-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelDiscountRow'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelDiscountRow'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - discount-row-entity-controller
      description: create-discountrow
      operationId: postCollectionResource-discountrow-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRowRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDiscountRow'
  /discount-rows/{id}:
    get:
      tags:
      - discount-row-entity-controller
      description: get-discountrow
      operationId: getItemResource-discountrow-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDiscountRow'
        "404":
          description: Not Found
    put:
      tags:
      - discount-row-entity-controller
      description: update-discountrow
      operationId: putItemResource-discountrow-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRowRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDiscountRow'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDiscountRow'
        "204":
          description: No Content
    delete:
      tags:
      - discount-row-entity-controller
      description: delete-discountrow
      operationId: deleteItemResource-discountrow-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discount-rows/{id}/catalog:
    get:
      tags:
      - discount-row-property-reference-controller
      description: get-catalog-by-discountrow-Id
      operationId: followPropertyReference-discountrow-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - discount-row-property-reference-controller
      description: update-catalog-by-discountrow-Id
      operationId: createPropertyReference-discountrow-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - discount-row-property-reference-controller
      description: delete-catalog-by-discountrow-Id
      operationId: deletePropertyReference-discountrow-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discount-rows/{id}/catalog/{propertyId}:
    get:
      tags:
      - discount-row-property-reference-controller
      description: get-catalog-by-discountrow-Id
      operationId: followPropertyReference-discountrow-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "404":
          description: Not Found
    delete:
      tags:
      - discount-row-property-reference-controller
      description: delete-catalog-by-discountrow-Id
      operationId: deletePropertyReferenceId-discountrow-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discount-rows/{id}/currency:
    get:
      tags:
      - discount-row-property-reference-controller
      description: get-currency-by-discountrow-Id
      operationId: followPropertyReference-discountrow-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - discount-row-property-reference-controller
      description: update-currency-by-discountrow-Id
      operationId: createPropertyReference-discountrow-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - discount-row-property-reference-controller
      description: delete-currency-by-discountrow-Id
      operationId: deletePropertyReference-discountrow-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discount-rows/{id}/currency/{propertyId}:
    get:
      tags:
      - discount-row-property-reference-controller
      description: get-currency-by-discountrow-Id
      operationId: followPropertyReference-discountrow-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - discount-row-property-reference-controller
      description: delete-currency-by-discountrow-Id
      operationId: deletePropertyReferenceId-discountrow-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discount-rows/{id}/discount:
    get:
      tags:
      - discount-row-property-reference-controller
      description: get-discount-by-discountrow-Id
      operationId: followPropertyReference-discountrow-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDiscount'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - discount-row-property-reference-controller
      description: update-discount-by-discountrow-Id
      operationId: createPropertyReference-discountrow-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDiscount'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDiscount'
        "204":
          description: No Content
    delete:
      tags:
      - discount-row-property-reference-controller
      description: delete-discount-by-discountrow-Id
      operationId: deletePropertyReference-discountrow-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discount-rows/{id}/discount/{propertyId}:
    get:
      tags:
      - discount-row-property-reference-controller
      description: get-discount-by-discountrow-Id
      operationId: followPropertyReference-discountrow-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDiscount'
        "404":
          description: Not Found
    delete:
      tags:
      - discount-row-property-reference-controller
      description: delete-discount-by-discountrow-Id
      operationId: deletePropertyReferenceId-discountrow-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discount-rows/{id}/product:
    get:
      tags:
      - discount-row-property-reference-controller
      description: get-product-by-discountrow-Id
      operationId: followPropertyReference-discountrow-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - discount-row-property-reference-controller
      description: update-product-by-discountrow-Id
      operationId: createPropertyReference-discountrow-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "204":
          description: No Content
    delete:
      tags:
      - discount-row-property-reference-controller
      description: delete-product-by-discountrow-Id
      operationId: deletePropertyReference-discountrow-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discount-rows/{id}/product/{propertyId}:
    get:
      tags:
      - discount-row-property-reference-controller
      description: get-product-by-discountrow-Id
      operationId: followPropertyReference-discountrow-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "404":
          description: Not Found
    delete:
      tags:
      - discount-row-property-reference-controller
      description: delete-product-by-discountrow-Id
      operationId: deletePropertyReferenceId-discountrow-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discount-rows/{id}/productGroup:
    get:
      tags:
      - discount-row-property-reference-controller
      description: get-productdiscountgroup-by-discountrow-Id
      operationId: followPropertyReference-discountrow-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductDiscountGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - discount-row-property-reference-controller
      description: update-productdiscountgroup-by-discountrow-Id
      operationId: createPropertyReference-discountrow-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductDiscountGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductDiscountGroup'
        "204":
          description: No Content
    delete:
      tags:
      - discount-row-property-reference-controller
      description: delete-productdiscountgroup-by-discountrow-Id
      operationId: deletePropertyReference-discountrow-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discount-rows/{id}/productGroup/{propertyId}:
    get:
      tags:
      - discount-row-property-reference-controller
      description: get-productdiscountgroup-by-discountrow-Id
      operationId: followPropertyReference-discountrow-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductDiscountGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - discount-row-property-reference-controller
      description: delete-productdiscountgroup-by-discountrow-Id
      operationId: deletePropertyReferenceId-discountrow-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discount-rows/{id}/userGroup:
    get:
      tags:
      - discount-row-property-reference-controller
      description: get-userdiscountgroup-by-discountrow-Id
      operationId: followPropertyReference-discountrow-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - discount-row-property-reference-controller
      description: update-userdiscountgroup-by-discountrow-Id
      operationId: createPropertyReference-discountrow-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "204":
          description: No Content
    delete:
      tags:
      - discount-row-property-reference-controller
      description: delete-userdiscountgroup-by-discountrow-Id
      operationId: deletePropertyReference-discountrow-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discount-rows/{id}/userGroup/{propertyId}:
    get:
      tags:
      - discount-row-property-reference-controller
      description: get-userdiscountgroup-by-discountrow-Id
      operationId: followPropertyReference-discountrow-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - discount-row-property-reference-controller
      description: delete-userdiscountgroup-by-discountrow-Id
      operationId: deletePropertyReferenceId-discountrow-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discounts:
    get:
      tags:
      - discount-entity-controller
      description: get-discount
      operationId: getCollectionResource-discount-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelDiscount'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelDiscount'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - discount-entity-controller
      description: create-discount
      operationId: postCollectionResource-discount-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDiscount'
  /discounts/{id}:
    get:
      tags:
      - discount-entity-controller
      description: get-discount
      operationId: getItemResource-discount-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDiscount'
        "404":
          description: Not Found
    put:
      tags:
      - discount-entity-controller
      description: update-discount
      operationId: putItemResource-discount-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDiscount'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDiscount'
        "204":
          description: No Content
    delete:
      tags:
      - discount-entity-controller
      description: delete-discount
      operationId: deleteItemResource-discount-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discounts/{id}/currency:
    get:
      tags:
      - discount-property-reference-controller
      description: get-currency-by-discount-Id
      operationId: followPropertyReference-discount-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - discount-property-reference-controller
      description: update-currency-by-discount-Id
      operationId: createPropertyReference-discount-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - discount-property-reference-controller
      description: delete-currency-by-discount-Id
      operationId: deletePropertyReference-discount-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /discounts/{id}/currency/{propertyId}:
    get:
      tags:
      - discount-property-reference-controller
      description: get-currency-by-discount-Id
      operationId: followPropertyReference-discount-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - discount-property-reference-controller
      description: delete-currency-by-discount-Id
      operationId: deletePropertyReferenceId-discount-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /document-templates:
    get:
      tags:
      - document-template-entity-controller
      description: get-documenttemplate
      operationId: getCollectionResource-documenttemplate-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelDocumentTemplate'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelDocumentTemplate'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - document-template-entity-controller
      description: create-documenttemplate
      operationId: postCollectionResource-documenttemplate-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTemplateRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDocumentTemplate'
  /document-templates/{id}:
    get:
      tags:
      - document-template-entity-controller
      description: get-documenttemplate
      operationId: getItemResource-documenttemplate-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDocumentTemplate'
        "404":
          description: Not Found
    put:
      tags:
      - document-template-entity-controller
      description: update-documenttemplate
      operationId: putItemResource-documenttemplate-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTemplateRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDocumentTemplate'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelDocumentTemplate'
        "204":
          description: No Content
    delete:
      tags:
      - document-template-entity-controller
      description: delete-documenttemplate
      operationId: deleteItemResource-documenttemplate-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-addresses:
    get:
      tags:
      - email-address-entity-controller
      description: get-emailaddress
      operationId: getCollectionResource-emailaddress-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelEmailAddress'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelEmailAddress'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - email-address-entity-controller
      description: create-emailaddress
      operationId: postCollectionResource-emailaddress-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAddressRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmailAddress'
  /email-addresses/{id}:
    get:
      tags:
      - email-address-entity-controller
      description: get-emailaddress
      operationId: getItemResource-emailaddress-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmailAddress'
        "404":
          description: Not Found
    put:
      tags:
      - email-address-entity-controller
      description: update-emailaddress
      operationId: putItemResource-emailaddress-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAddressRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmailAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmailAddress'
        "204":
          description: No Content
    delete:
      tags:
      - email-address-entity-controller
      description: delete-emailaddress
      operationId: deleteItemResource-emailaddress-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-addresses/{id}/bccMessages:
    get:
      tags:
      - email-address-property-reference-controller
      description: get-emailmessage-by-emailaddress-Id
      operationId: followPropertyReference-emailaddress-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - email-address-property-reference-controller
      description: update-emailmessage-by-emailaddress-Id
      operationId: createPropertyReference-emailaddress-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
        "204":
          description: No Content
    delete:
      tags:
      - email-address-property-reference-controller
      description: delete-emailmessage-by-emailaddress-Id
      operationId: deletePropertyReference-emailaddress-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-addresses/{id}/bccMessages/{propertyId}:
    get:
      tags:
      - email-address-property-reference-controller
      description: get-emailmessage-by-emailaddress-Id
      operationId: followPropertyReference-emailaddress-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
        "404":
          description: Not Found
    delete:
      tags:
      - email-address-property-reference-controller
      description: delete-emailmessage-by-emailaddress-Id
      operationId: deletePropertyReferenceId-emailaddress-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-addresses/{id}/ccMessages:
    get:
      tags:
      - email-address-property-reference-controller
      description: get-emailmessage-by-emailaddress-Id
      operationId: followPropertyReference-emailaddress-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - email-address-property-reference-controller
      description: update-emailmessage-by-emailaddress-Id
      operationId: createPropertyReference-emailaddress-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
        "204":
          description: No Content
    delete:
      tags:
      - email-address-property-reference-controller
      description: delete-emailmessage-by-emailaddress-Id
      operationId: deletePropertyReference-emailaddress-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-addresses/{id}/ccMessages/{propertyId}:
    get:
      tags:
      - email-address-property-reference-controller
      description: get-emailmessage-by-emailaddress-Id
      operationId: followPropertyReference-emailaddress-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
        "404":
          description: Not Found
    delete:
      tags:
      - email-address-property-reference-controller
      description: delete-emailmessage-by-emailaddress-Id
      operationId: deletePropertyReferenceId-emailaddress-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-addresses/{id}/messagesSent:
    get:
      tags:
      - email-address-property-reference-controller
      description: get-emailmessage-by-emailaddress-Id
      operationId: followPropertyReference-emailaddress-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - email-address-property-reference-controller
      description: update-emailmessage-by-emailaddress-Id
      operationId: createPropertyReference-emailaddress-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
        "204":
          description: No Content
    delete:
      tags:
      - email-address-property-reference-controller
      description: delete-emailmessage-by-emailaddress-Id
      operationId: deletePropertyReference-emailaddress-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-addresses/{id}/messagesSent/{propertyId}:
    get:
      tags:
      - email-address-property-reference-controller
      description: get-emailmessage-by-emailaddress-Id
      operationId: followPropertyReference-emailaddress-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
        "404":
          description: Not Found
    delete:
      tags:
      - email-address-property-reference-controller
      description: delete-emailmessage-by-emailaddress-Id
      operationId: deletePropertyReferenceId-emailaddress-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-addresses/{id}/toMessages:
    get:
      tags:
      - email-address-property-reference-controller
      description: get-emailmessage-by-emailaddress-Id
      operationId: followPropertyReference-emailaddress-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - email-address-property-reference-controller
      description: update-emailmessage-by-emailaddress-Id
      operationId: createPropertyReference-emailaddress-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
        "204":
          description: No Content
    delete:
      tags:
      - email-address-property-reference-controller
      description: delete-emailmessage-by-emailaddress-Id
      operationId: deletePropertyReference-emailaddress-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-addresses/{id}/toMessages/{propertyId}:
    get:
      tags:
      - email-address-property-reference-controller
      description: get-emailmessage-by-emailaddress-Id
      operationId: followPropertyReference-emailaddress-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailMessage'
        "404":
          description: Not Found
    delete:
      tags:
      - email-address-property-reference-controller
      description: delete-emailmessage-by-emailaddress-Id
      operationId: deletePropertyReferenceId-emailaddress-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-messages:
    get:
      tags:
      - email-message-entity-controller
      description: get-emailmessage
      operationId: getCollectionResource-emailmessage-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelEmailMessage'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelEmailMessage'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - email-message-entity-controller
      description: create-emailmessage
      operationId: postCollectionResource-emailmessage-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailMessageRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmailMessage'
  /email-messages/{id}:
    get:
      tags:
      - email-message-entity-controller
      description: get-emailmessage
      operationId: getItemResource-emailmessage-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmailMessage'
        "404":
          description: Not Found
    put:
      tags:
      - email-message-entity-controller
      description: update-emailmessage
      operationId: putItemResource-emailmessage-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailMessageRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmailMessage'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmailMessage'
        "204":
          description: No Content
    delete:
      tags:
      - email-message-entity-controller
      description: delete-emailmessage
      operationId: deleteItemResource-emailmessage-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-messages/{id}/attachments:
    get:
      tags:
      - email-message-property-reference-controller
      description: get-emailattachment-by-emailmessage-Id
      operationId: followPropertyReference-emailmessage-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAttachment'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - email-message-property-reference-controller
      description: update-emailattachment-by-emailmessage-Id
      operationId: createPropertyReference-emailmessage-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAttachment'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAttachment'
        "204":
          description: No Content
    delete:
      tags:
      - email-message-property-reference-controller
      description: delete-emailattachment-by-emailmessage-Id
      operationId: deletePropertyReference-emailmessage-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-messages/{id}/attachments/{propertyId}:
    get:
      tags:
      - email-message-property-reference-controller
      description: get-emailattachment-by-emailmessage-Id
      operationId: followPropertyReference-emailmessage-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAttachment'
        "404":
          description: Not Found
    delete:
      tags:
      - email-message-property-reference-controller
      description: delete-emailattachment-by-emailmessage-Id
      operationId: deletePropertyReferenceId-emailmessage-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-messages/{id}/bccAddresses:
    get:
      tags:
      - email-message-property-reference-controller
      description: get-emailaddress-by-emailmessage-Id
      operationId: followPropertyReference-emailmessage-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - email-message-property-reference-controller
      description: update-emailaddress-by-emailmessage-Id
      operationId: createPropertyReference-emailmessage-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAddress'
        "204":
          description: No Content
    delete:
      tags:
      - email-message-property-reference-controller
      description: delete-emailaddress-by-emailmessage-Id
      operationId: deletePropertyReference-emailmessage-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-messages/{id}/bccAddresses/{propertyId}:
    get:
      tags:
      - email-message-property-reference-controller
      description: get-emailaddress-by-emailmessage-Id
      operationId: followPropertyReference-emailmessage-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - email-message-property-reference-controller
      description: delete-emailaddress-by-emailmessage-Id
      operationId: deletePropertyReferenceId-emailmessage-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-messages/{id}/ccAddresses:
    get:
      tags:
      - email-message-property-reference-controller
      description: get-emailaddress-by-emailmessage-Id
      operationId: followPropertyReference-emailmessage-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - email-message-property-reference-controller
      description: update-emailaddress-by-emailmessage-Id
      operationId: createPropertyReference-emailmessage-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAddress'
        "204":
          description: No Content
    delete:
      tags:
      - email-message-property-reference-controller
      description: delete-emailaddress-by-emailmessage-Id
      operationId: deletePropertyReference-emailmessage-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-messages/{id}/ccAddresses/{propertyId}:
    get:
      tags:
      - email-message-property-reference-controller
      description: get-emailaddress-by-emailmessage-Id
      operationId: followPropertyReference-emailmessage-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - email-message-property-reference-controller
      description: delete-emailaddress-by-emailmessage-Id
      operationId: deletePropertyReferenceId-emailmessage-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-messages/{id}/fromAddress:
    get:
      tags:
      - email-message-property-reference-controller
      description: get-emailaddress-by-emailmessage-Id
      operationId: followPropertyReference-emailmessage-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmailAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - email-message-property-reference-controller
      description: update-emailaddress-by-emailmessage-Id
      operationId: createPropertyReference-emailmessage-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmailAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmailAddress'
        "204":
          description: No Content
    delete:
      tags:
      - email-message-property-reference-controller
      description: delete-emailaddress-by-emailmessage-Id
      operationId: deletePropertyReference-emailmessage-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-messages/{id}/fromAddress/{propertyId}:
    get:
      tags:
      - email-message-property-reference-controller
      description: get-emailaddress-by-emailmessage-Id
      operationId: followPropertyReference-emailmessage-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmailAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - email-message-property-reference-controller
      description: delete-emailaddress-by-emailmessage-Id
      operationId: deletePropertyReferenceId-emailmessage-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-messages/{id}/toAddresses:
    get:
      tags:
      - email-message-property-reference-controller
      description: get-emailaddress-by-emailmessage-Id
      operationId: followPropertyReference-emailmessage-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - email-message-property-reference-controller
      description: update-emailaddress-by-emailmessage-Id
      operationId: createPropertyReference-emailmessage-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAddress'
        "204":
          description: No Content
    delete:
      tags:
      - email-message-property-reference-controller
      description: delete-emailaddress-by-emailmessage-Id
      operationId: deletePropertyReference-emailmessage-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /email-messages/{id}/toAddresses/{propertyId}:
    get:
      tags:
      - email-message-property-reference-controller
      description: get-emailaddress-by-emailmessage-Id
      operationId: followPropertyReference-emailmessage-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEmailAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - email-message-property-reference-controller
      description: delete-emailaddress-by-emailmessage-Id
      operationId: deletePropertyReferenceId-emailmessage-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees:
    get:
      tags:
      - employee-entity-controller
      description: get-employee
      operationId: getCollectionResource-employee-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelEmployee'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelEmployee'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - employee-entity-controller
      description: create-employee
      operationId: postCollectionResource-employee-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmployee'
  /employees/{id}:
    get:
      tags:
      - employee-entity-controller
      description: get-employee
      operationId: getItemResource-employee-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmployee'
        "404":
          description: Not Found
    put:
      tags:
      - employee-entity-controller
      description: update-employee
      operationId: putItemResource-employee-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmployee'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEmployee'
        "204":
          description: No Content
    delete:
      tags:
      - employee-entity-controller
      description: delete-employee
      operationId: deleteItemResource-employee-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/accessibleCatalogs:
    get:
      tags:
      - employee-property-reference-controller
      description: get-catalog-by-employee-Id
      operationId: followPropertyReference-employee-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-catalog-by-employee-Id
      operationId: createPropertyReference-employee-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-catalog-by-employee-Id
      operationId: deletePropertyReference-employee-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/accessibleCatalogs/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-catalog-by-employee-Id
      operationId: followPropertyReference-employee-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-catalog-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/accessibleCategories:
    get:
      tags:
      - employee-property-reference-controller
      description: get-category-by-employee-Id
      operationId: followPropertyReference-employee-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-category-by-employee-Id
      operationId: createPropertyReference-employee-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-category-by-employee-Id
      operationId: deletePropertyReference-employee-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/accessibleCategories/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-category-by-employee-Id
      operationId: followPropertyReference-employee-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-category-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/addresses:
    get:
      tags:
      - employee-property-reference-controller
      description: get-address-by-employee-Id
      operationId: followPropertyReference-employee-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-address-by-employee-Id
      operationId: createPropertyReference-employee-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-address-by-employee-Id
      operationId: deletePropertyReference-employee-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/addresses/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-address-by-employee-Id
      operationId: followPropertyReference-employee-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-address-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/billingAddress:
    get:
      tags:
      - employee-property-reference-controller
      description: get-address-by-employee-Id
      operationId: followPropertyReference-employee-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-address-by-employee-Id
      operationId: createPropertyReference-employee-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-address-by-employee-Id
      operationId: deletePropertyReference-employee-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/billingAddress/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-address-by-employee-Id
      operationId: followPropertyReference-employee-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-address-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/carts:
    get:
      tags:
      - employee-property-reference-controller
      description: get-cart-by-employee-Id
      operationId: followPropertyReference-employee-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-cart-by-employee-Id
      operationId: createPropertyReference-employee-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-cart-by-employee-Id
      operationId: deletePropertyReference-employee-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/carts/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-cart-by-employee-Id
      operationId: followPropertyReference-employee-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-cart-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/discountGroup:
    get:
      tags:
      - employee-property-reference-controller
      description: get-userdiscountgroup-by-employee-Id
      operationId: followPropertyReference-employee-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-userdiscountgroup-by-employee-Id
      operationId: createPropertyReference-employee-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-userdiscountgroup-by-employee-Id
      operationId: deletePropertyReference-employee-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/discountGroup/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-userdiscountgroup-by-employee-Id
      operationId: followPropertyReference-employee-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-userdiscountgroup-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/groups:
    get:
      tags:
      - employee-property-reference-controller
      description: get-usergroup-by-employee-Id
      operationId: followPropertyReference-employee-get_7_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-usergroup-by-employee-Id
      operationId: createPropertyReference-employee-put_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-usergroup-by-employee-Id
      operationId: deletePropertyReference-employee-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/groups/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-usergroup-by-employee-Id
      operationId: followPropertyReference-employee-get_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-usergroup-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/orders:
    get:
      tags:
      - employee-property-reference-controller
      description: get-order-by-employee-Id
      operationId: followPropertyReference-employee-get_8_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-order-by-employee-Id
      operationId: createPropertyReference-employee-put_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-order-by-employee-Id
      operationId: deletePropertyReference-employee-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/orders/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-order-by-employee-Id
      operationId: followPropertyReference-employee-get_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-order-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/paymentInfos:
    get:
      tags:
      - employee-property-reference-controller
      description: get-paymentinfo-by-employee-Id
      operationId: followPropertyReference-employee-get_9_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-paymentinfo-by-employee-Id
      operationId: createPropertyReference-employee-put_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-paymentinfo-by-employee-Id
      operationId: deletePropertyReference-employee-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/paymentInfos/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-paymentinfo-by-employee-Id
      operationId: followPropertyReference-employee-get_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-paymentinfo-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/priceGroup:
    get:
      tags:
      - employee-property-reference-controller
      description: get-userpricegroup-by-employee-Id
      operationId: followPropertyReference-employee-get_10_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-userpricegroup-by-employee-Id
      operationId: createPropertyReference-employee-put_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-userpricegroup-by-employee-Id
      operationId: deletePropertyReference-employee-delete_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/priceGroup/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-userpricegroup-by-employee-Id
      operationId: followPropertyReference-employee-get_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-userpricegroup-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/profilePicture:
    get:
      tags:
      - employee-property-reference-controller
      description: get-media-by-employee-Id
      operationId: followPropertyReference-employee-get_11_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-media-by-employee-Id
      operationId: createPropertyReference-employee-put_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-media-by-employee-Id
      operationId: deletePropertyReference-employee-delete_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/profilePicture/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-media-by-employee-Id
      operationId: followPropertyReference-employee-get_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-media-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/sessionCurrency:
    get:
      tags:
      - employee-property-reference-controller
      description: get-currency-by-employee-Id
      operationId: followPropertyReference-employee-get_12_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-currency-by-employee-Id
      operationId: createPropertyReference-employee-put_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-currency-by-employee-Id
      operationId: deletePropertyReference-employee-delete_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/sessionCurrency/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-currency-by-employee-Id
      operationId: followPropertyReference-employee-get_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-currency-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/sessionLanguage:
    get:
      tags:
      - employee-property-reference-controller
      description: get-language-by-employee-Id
      operationId: followPropertyReference-employee-get_13_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-language-by-employee-Id
      operationId: createPropertyReference-employee-put_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-language-by-employee-Id
      operationId: deletePropertyReference-employee-delete_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/sessionLanguage/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-language-by-employee-Id
      operationId: followPropertyReference-employee-get_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-language-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/shippingAddress:
    get:
      tags:
      - employee-property-reference-controller
      description: get-address-by-employee-Id
      operationId: followPropertyReference-employee-get_14_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-address-by-employee-Id
      operationId: createPropertyReference-employee-put_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-address-by-employee-Id
      operationId: deletePropertyReference-employee-delete_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/shippingAddress/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-address-by-employee-Id
      operationId: followPropertyReference-employee-get_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-address-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/taxGroup:
    get:
      tags:
      - employee-property-reference-controller
      description: get-usertaxgroup-by-employee-Id
      operationId: followPropertyReference-employee-get_15_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - employee-property-reference-controller
      description: update-usertaxgroup-by-employee-Id
      operationId: createPropertyReference-employee-put_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "204":
          description: No Content
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-usertaxgroup-by-employee-Id
      operationId: deletePropertyReference-employee-delete_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /employees/{id}/taxGroup/{propertyId}:
    get:
      tags:
      - employee-property-reference-controller
      description: get-usertaxgroup-by-employee-Id
      operationId: followPropertyReference-employee-get_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - employee-property-reference-controller
      description: delete-usertaxgroup-by-employee-Id
      operationId: deletePropertyReferenceId-employee-delete_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /invoice-infos:
    get:
      tags:
      - credit-card-payment-info-entity-controller
      description: get-creditcardpaymentinfo
      operationId: getCollectionResource-creditcardpaymentinfo-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCreditCardPaymentInfo'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCreditCardPaymentInfo'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - credit-card-payment-info-entity-controller
      description: create-creditcardpaymentinfo
      operationId: postCollectionResource-creditcardpaymentinfo-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardPaymentInfoRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCreditCardPaymentInfo'
  /invoice-infos/{id}:
    get:
      tags:
      - credit-card-payment-info-entity-controller
      description: get-creditcardpaymentinfo
      operationId: getItemResource-creditcardpaymentinfo-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCreditCardPaymentInfo'
        "404":
          description: Not Found
    put:
      tags:
      - credit-card-payment-info-entity-controller
      description: update-creditcardpaymentinfo
      operationId: putItemResource-creditcardpaymentinfo-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardPaymentInfoRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCreditCardPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCreditCardPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - credit-card-payment-info-entity-controller
      description: delete-creditcardpaymentinfo
      operationId: deleteItemResource-creditcardpaymentinfo-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /invoice-infos/{id}/billingAddress:
    get:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: get-address-by-creditcardpaymentinfo-Id
      operationId: followPropertyReference-creditcardpaymentinfo-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: update-address-by-creditcardpaymentinfo-Id
      operationId: createPropertyReference-creditcardpaymentinfo-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: delete-address-by-creditcardpaymentinfo-Id
      operationId: deletePropertyReference-creditcardpaymentinfo-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /invoice-infos/{id}/billingAddress/{propertyId}:
    get:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: get-address-by-creditcardpaymentinfo-Id
      operationId: followPropertyReference-creditcardpaymentinfo-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: delete-address-by-creditcardpaymentinfo-Id
      operationId: deletePropertyReferenceId-creditcardpaymentinfo-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /invoice-infos/{id}/original:
    get:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: get-paymentinfo-by-creditcardpaymentinfo-Id
      operationId: followPropertyReference-creditcardpaymentinfo-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: update-paymentinfo-by-creditcardpaymentinfo-Id
      operationId: createPropertyReference-creditcardpaymentinfo-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: delete-paymentinfo-by-creditcardpaymentinfo-Id
      operationId: deletePropertyReference-creditcardpaymentinfo-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /invoice-infos/{id}/original/{propertyId}:
    get:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: get-paymentinfo-by-creditcardpaymentinfo-Id
      operationId: followPropertyReference-creditcardpaymentinfo-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "404":
          description: Not Found
    delete:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: delete-paymentinfo-by-creditcardpaymentinfo-Id
      operationId: deletePropertyReferenceId-creditcardpaymentinfo-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /invoice-infos/{id}/user:
    get:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: get-user-by-creditcardpaymentinfo-Id
      operationId: followPropertyReference-creditcardpaymentinfo-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: update-user-by-creditcardpaymentinfo-Id
      operationId: createPropertyReference-creditcardpaymentinfo-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: delete-user-by-creditcardpaymentinfo-Id
      operationId: deletePropertyReference-creditcardpaymentinfo-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /invoice-infos/{id}/user/{propertyId}:
    get:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: get-user-by-creditcardpaymentinfo-Id
      operationId: followPropertyReference-creditcardpaymentinfo-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    delete:
      tags:
      - credit-card-payment-info-property-reference-controller
      description: delete-user-by-creditcardpaymentinfo-Id
      operationId: deletePropertyReferenceId-creditcardpaymentinfo-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /languages:
    get:
      tags:
      - language-entity-controller
      description: get-language
      operationId: getCollectionResource-language-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLanguage'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLanguage'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - language-entity-controller
      description: create-language
      operationId: postCollectionResource-language-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
  /languages/search/findByIsocode:
    get:
      tags:
      - language-search-controller
      operationId: executeSearch-language-get
      parameters:
      - name: isocode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "404":
          description: Not Found
  /languages/{id}:
    get:
      tags:
      - language-entity-controller
      description: get-language
      operationId: getItemResource-language-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "404":
          description: Not Found
    put:
      tags:
      - language-entity-controller
      description: update-language
      operationId: putItemResource-language-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "204":
          description: No Content
    delete:
      tags:
      - language-entity-controller
      description: delete-language
      operationId: deleteItemResource-language-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /languages/{id}/baseStores:
    get:
      tags:
      - language-property-reference-controller
      description: get-basestore-by-language-Id
      operationId: followPropertyReference-language-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelBaseStore'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - language-property-reference-controller
      description: update-basestore-by-language-Id
      operationId: createPropertyReference-language-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelBaseStore'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelBaseStore'
        "204":
          description: No Content
    delete:
      tags:
      - language-property-reference-controller
      description: delete-basestore-by-language-Id
      operationId: deletePropertyReference-language-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /languages/{id}/baseStores/{propertyId}:
    get:
      tags:
      - language-property-reference-controller
      description: get-basestore-by-language-Id
      operationId: followPropertyReference-language-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelBaseStore'
        "404":
          description: Not Found
    delete:
      tags:
      - language-property-reference-controller
      description: delete-basestore-by-language-Id
      operationId: deletePropertyReferenceId-language-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /medias:
    get:
      tags:
      - media-entity-controller
      description: get-media
      operationId: getCollectionResource-media-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelMedia'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelMedia'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - media-entity-controller
      description: create-media
      operationId: postCollectionResource-media-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
  /medias/search/findByCodeAndCatalog:
    get:
      tags:
      - media-search-controller
      operationId: executeSearch-media-get
      parameters:
      - name: code
        in: query
        schema:
          type: string
      - name: catalog
        in: query
        schema:
          $ref: '#/components/schemas/Catalog'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "404":
          description: Not Found
  /medias/search/findByExternalId:
    get:
      tags:
      - media-search-controller
      operationId: executeSearch-media-get_1
      parameters:
      - name: externalId
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "404":
          description: Not Found
  /medias/search/findByExternalIds:
    get:
      tags:
      - media-search-controller
      operationId: executeSearch-media-get_2
      parameters:
      - name: externalIds
        in: query
        schema:
          type: array
          items:
            type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelMedia'
        "404":
          description: Not Found
  /medias/{id}:
    get:
      tags:
      - media-entity-controller
      description: get-media
      operationId: getItemResource-media-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "404":
          description: Not Found
    put:
      tags:
      - media-entity-controller
      description: update-media
      operationId: putItemResource-media-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "204":
          description: No Content
    delete:
      tags:
      - media-entity-controller
      description: delete-media
      operationId: deleteItemResource-media-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /medias/{id}/catalog:
    get:
      tags:
      - media-property-reference-controller
      description: get-catalog-by-media-Id
      operationId: followPropertyReference-media-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - media-property-reference-controller
      description: update-catalog-by-media-Id
      operationId: createPropertyReference-media-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - media-property-reference-controller
      description: delete-catalog-by-media-Id
      operationId: deletePropertyReference-media-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /medias/{id}/catalog/{propertyId}:
    get:
      tags:
      - media-property-reference-controller
      description: get-catalog-by-media-Id
      operationId: followPropertyReference-media-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "404":
          description: Not Found
    delete:
      tags:
      - media-property-reference-controller
      description: delete-catalog-by-media-Id
      operationId: deletePropertyReferenceId-media-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /opening-schedules:
    get:
      tags:
      - opening-schedule-entity-controller
      description: get-openingschedule
      operationId: getCollectionResource-openingschedule-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelOpeningSchedule'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelOpeningSchedule'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - opening-schedule-entity-controller
      description: create-openingschedule
      operationId: postCollectionResource-openingschedule-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpeningScheduleRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOpeningSchedule'
  /opening-schedules/{id}:
    get:
      tags:
      - opening-schedule-entity-controller
      description: get-openingschedule
      operationId: getItemResource-openingschedule-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOpeningSchedule'
        "404":
          description: Not Found
    put:
      tags:
      - opening-schedule-entity-controller
      description: update-openingschedule
      operationId: putItemResource-openingschedule-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpeningScheduleRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOpeningSchedule'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOpeningSchedule'
        "204":
          description: No Content
    delete:
      tags:
      - opening-schedule-entity-controller
      description: delete-openingschedule
      operationId: deleteItemResource-openingschedule-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /order-thresholds:
    get:
      tags:
      - b-2-b-order-threshold-permission-entity-controller
      description: get-b2borderthresholdpermission
      operationId: getCollectionResource-b2borderthresholdpermission-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BOrderThresholdPermission'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BOrderThresholdPermission'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - b-2-b-order-threshold-permission-entity-controller
      description: create-b2borderthresholdpermission
      operationId: postCollectionResource-b2borderthresholdpermission-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BOrderThresholdPermissionRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BOrderThresholdPermission'
  /order-thresholds/{id}:
    get:
      tags:
      - b-2-b-order-threshold-permission-entity-controller
      description: get-b2borderthresholdpermission
      operationId: getItemResource-b2borderthresholdpermission-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BOrderThresholdPermission'
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-order-threshold-permission-entity-controller
      description: update-b2borderthresholdpermission
      operationId: putItemResource-b2borderthresholdpermission-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BOrderThresholdPermissionRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BOrderThresholdPermission'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BOrderThresholdPermission'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-order-threshold-permission-entity-controller
      description: delete-b2borderthresholdpermission
      operationId: deleteItemResource-b2borderthresholdpermission-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /order-thresholds/{id}/currency:
    get:
      tags:
      - b-2-b-order-threshold-permission-property-reference-controller
      description: get-currency-by-b2borderthresholdpermission-Id
      operationId: followPropertyReference-b2borderthresholdpermission-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-order-threshold-permission-property-reference-controller
      description: update-currency-by-b2borderthresholdpermission-Id
      operationId: createPropertyReference-b2borderthresholdpermission-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-order-threshold-permission-property-reference-controller
      description: delete-currency-by-b2borderthresholdpermission-Id
      operationId: deletePropertyReference-b2borderthresholdpermission-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /order-thresholds/{id}/currency/{propertyId}:
    get:
      tags:
      - b-2-b-order-threshold-permission-property-reference-controller
      description: get-currency-by-b2borderthresholdpermission-Id
      operationId: followPropertyReference-b2borderthresholdpermission-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-order-threshold-permission-property-reference-controller
      description: delete-currency-by-b2borderthresholdpermission-Id
      operationId: deletePropertyReferenceId-b2borderthresholdpermission-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /order-thresholds/{id}/unit:
    get:
      tags:
      - b-2-b-order-threshold-permission-property-reference-controller
      description: get-b2bunit-by-b2borderthresholdpermission-Id
      operationId: followPropertyReference-b2borderthresholdpermission-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-order-threshold-permission-property-reference-controller
      description: update-b2bunit-by-b2borderthresholdpermission-Id
      operationId: createPropertyReference-b2borderthresholdpermission-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-order-threshold-permission-property-reference-controller
      description: delete-b2bunit-by-b2borderthresholdpermission-Id
      operationId: deletePropertyReference-b2borderthresholdpermission-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /order-thresholds/{id}/unit/{propertyId}:
    get:
      tags:
      - b-2-b-order-threshold-permission-property-reference-controller
      description: get-b2bunit-by-b2borderthresholdpermission-Id
      operationId: followPropertyReference-b2borderthresholdpermission-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BUnit'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-order-threshold-permission-property-reference-controller
      description: delete-b2bunit-by-b2borderthresholdpermission-Id
      operationId: deletePropertyReferenceId-b2borderthresholdpermission-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders:
    get:
      tags:
      - order-entity-controller
      description: get-order
      operationId: getCollectionResource-order-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelOrder'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelOrder'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - order-entity-controller
      description: create-order
      operationId: postCollectionResource-order-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOrder'
  /orders/{id}:
    get:
      tags:
      - order-entity-controller
      description: get-order
      operationId: getItemResource-order-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOrder'
        "404":
          description: Not Found
    put:
      tags:
      - order-entity-controller
      description: update-order
      operationId: putItemResource-order-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOrder'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOrder'
        "204":
          description: No Content
    delete:
      tags:
      - order-entity-controller
      description: delete-order
      operationId: deleteItemResource-order-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/currency:
    get:
      tags:
      - order-property-reference-controller
      description: get-currency-by-order-Id
      operationId: followPropertyReference-order-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - order-property-reference-controller
      description: update-currency-by-order-Id
      operationId: createPropertyReference-order-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - order-property-reference-controller
      description: delete-currency-by-order-Id
      operationId: deletePropertyReference-order-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/currency/{propertyId}:
    get:
      tags:
      - order-property-reference-controller
      description: get-currency-by-order-Id
      operationId: followPropertyReference-order-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - order-property-reference-controller
      description: delete-currency-by-order-Id
      operationId: deletePropertyReferenceId-order-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/deliveryAddress:
    get:
      tags:
      - order-property-reference-controller
      description: get-address-by-order-Id
      operationId: followPropertyReference-order-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - order-property-reference-controller
      description: update-address-by-order-Id
      operationId: createPropertyReference-order-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - order-property-reference-controller
      description: delete-address-by-order-Id
      operationId: deletePropertyReference-order-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/deliveryAddress/{propertyId}:
    get:
      tags:
      - order-property-reference-controller
      description: get-address-by-order-Id
      operationId: followPropertyReference-order-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - order-property-reference-controller
      description: delete-address-by-order-Id
      operationId: deletePropertyReferenceId-order-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/discounts:
    get:
      tags:
      - order-property-reference-controller
      description: get-discount-by-order-Id
      operationId: followPropertyReference-order-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelDiscount'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - order-property-reference-controller
      description: update-discount-by-order-Id
      operationId: createPropertyReference-order-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelDiscount'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelDiscount'
        "204":
          description: No Content
    delete:
      tags:
      - order-property-reference-controller
      description: delete-discount-by-order-Id
      operationId: deletePropertyReference-order-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/discounts/{propertyId}:
    get:
      tags:
      - order-property-reference-controller
      description: get-discount-by-order-Id
      operationId: followPropertyReference-order-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelDiscount'
        "404":
          description: Not Found
    delete:
      tags:
      - order-property-reference-controller
      description: delete-discount-by-order-Id
      operationId: deletePropertyReferenceId-order-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/paymentAddress:
    get:
      tags:
      - order-property-reference-controller
      description: get-address-by-order-Id
      operationId: followPropertyReference-order-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - order-property-reference-controller
      description: update-address-by-order-Id
      operationId: createPropertyReference-order-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - order-property-reference-controller
      description: delete-address-by-order-Id
      operationId: deletePropertyReference-order-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/paymentAddress/{propertyId}:
    get:
      tags:
      - order-property-reference-controller
      description: get-address-by-order-Id
      operationId: followPropertyReference-order-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - order-property-reference-controller
      description: delete-address-by-order-Id
      operationId: deletePropertyReferenceId-order-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/paymentInfo:
    get:
      tags:
      - order-property-reference-controller
      description: get-paymentinfo-by-order-Id
      operationId: followPropertyReference-order-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - order-property-reference-controller
      description: update-paymentinfo-by-order-Id
      operationId: createPropertyReference-order-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - order-property-reference-controller
      description: delete-paymentinfo-by-order-Id
      operationId: deletePropertyReference-order-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/paymentInfo/{propertyId}:
    get:
      tags:
      - order-property-reference-controller
      description: get-paymentinfo-by-order-Id
      operationId: followPropertyReference-order-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "404":
          description: Not Found
    delete:
      tags:
      - order-property-reference-controller
      description: delete-paymentinfo-by-order-Id
      operationId: deletePropertyReferenceId-order-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/paymentTransactions:
    get:
      tags:
      - order-property-reference-controller
      description: get-paymenttransaction-by-order-Id
      operationId: followPropertyReference-order-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentTransaction'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - order-property-reference-controller
      description: update-paymenttransaction-by-order-Id
      operationId: createPropertyReference-order-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentTransaction'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentTransaction'
        "204":
          description: No Content
    delete:
      tags:
      - order-property-reference-controller
      description: delete-paymenttransaction-by-order-Id
      operationId: deletePropertyReference-order-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/paymentTransactions/{propertyId}:
    get:
      tags:
      - order-property-reference-controller
      description: get-paymenttransaction-by-order-Id
      operationId: followPropertyReference-order-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentTransaction'
        "404":
          description: Not Found
    delete:
      tags:
      - order-property-reference-controller
      description: delete-paymenttransaction-by-order-Id
      operationId: deletePropertyReferenceId-order-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/store:
    get:
      tags:
      - order-property-reference-controller
      description: get-basestore-by-order-Id
      operationId: followPropertyReference-order-get_7_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - order-property-reference-controller
      description: update-basestore-by-order-Id
      operationId: createPropertyReference-order-put_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
        "204":
          description: No Content
    delete:
      tags:
      - order-property-reference-controller
      description: delete-basestore-by-order-Id
      operationId: deletePropertyReference-order-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/store/{propertyId}:
    get:
      tags:
      - order-property-reference-controller
      description: get-basestore-by-order-Id
      operationId: followPropertyReference-order-get_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
        "404":
          description: Not Found
    delete:
      tags:
      - order-property-reference-controller
      description: delete-basestore-by-order-Id
      operationId: deletePropertyReferenceId-order-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/user:
    get:
      tags:
      - order-property-reference-controller
      description: get-user-by-order-Id
      operationId: followPropertyReference-order-get_8_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - order-property-reference-controller
      description: update-user-by-order-Id
      operationId: createPropertyReference-order-put_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
      - order-property-reference-controller
      description: delete-user-by-order-Id
      operationId: deletePropertyReference-order-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /orders/{id}/user/{propertyId}:
    get:
      tags:
      - order-property-reference-controller
      description: get-user-by-order-Id
      operationId: followPropertyReference-order-get_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    delete:
      tags:
      - order-property-reference-controller
      description: delete-user-by-order-Id
      operationId: deletePropertyReferenceId-order-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-infos:
    get:
      tags:
      - payment-info-entity-controller
      description: get-paymentinfo
      operationId: getCollectionResource-paymentinfo-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPaymentInfo'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPaymentInfo'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - payment-info-entity-controller
      description: create-paymentinfo
      operationId: postCollectionResource-paymentinfo-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInfoRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
  /payment-infos/{id}:
    get:
      tags:
      - payment-info-entity-controller
      description: get-paymentinfo
      operationId: getItemResource-paymentinfo-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "404":
          description: Not Found
    put:
      tags:
      - payment-info-entity-controller
      description: update-paymentinfo
      operationId: putItemResource-paymentinfo-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInfoRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - payment-info-entity-controller
      description: delete-paymentinfo
      operationId: deleteItemResource-paymentinfo-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-infos/{id}/billingAddress:
    get:
      tags:
      - payment-info-property-reference-controller
      description: get-address-by-paymentinfo-Id
      operationId: followPropertyReference-paymentinfo-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - payment-info-property-reference-controller
      description: update-address-by-paymentinfo-Id
      operationId: createPropertyReference-paymentinfo-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - payment-info-property-reference-controller
      description: delete-address-by-paymentinfo-Id
      operationId: deletePropertyReference-paymentinfo-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-infos/{id}/billingAddress/{propertyId}:
    get:
      tags:
      - payment-info-property-reference-controller
      description: get-address-by-paymentinfo-Id
      operationId: followPropertyReference-paymentinfo-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - payment-info-property-reference-controller
      description: delete-address-by-paymentinfo-Id
      operationId: deletePropertyReferenceId-paymentinfo-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-infos/{id}/original:
    get:
      tags:
      - payment-info-property-reference-controller
      description: get-paymentinfo-by-paymentinfo-Id
      operationId: followPropertyReference-paymentinfo-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - payment-info-property-reference-controller
      description: update-paymentinfo-by-paymentinfo-Id
      operationId: createPropertyReference-paymentinfo-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - payment-info-property-reference-controller
      description: delete-paymentinfo-by-paymentinfo-Id
      operationId: deletePropertyReference-paymentinfo-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-infos/{id}/original/{propertyId}:
    get:
      tags:
      - payment-info-property-reference-controller
      description: get-paymentinfo-by-paymentinfo-Id
      operationId: followPropertyReference-paymentinfo-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "404":
          description: Not Found
    delete:
      tags:
      - payment-info-property-reference-controller
      description: delete-paymentinfo-by-paymentinfo-Id
      operationId: deletePropertyReferenceId-paymentinfo-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-infos/{id}/user:
    get:
      tags:
      - payment-info-property-reference-controller
      description: get-user-by-paymentinfo-Id
      operationId: followPropertyReference-paymentinfo-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - payment-info-property-reference-controller
      description: update-user-by-paymentinfo-Id
      operationId: createPropertyReference-paymentinfo-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
      - payment-info-property-reference-controller
      description: delete-user-by-paymentinfo-Id
      operationId: deletePropertyReference-paymentinfo-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-infos/{id}/user/{propertyId}:
    get:
      tags:
      - payment-info-property-reference-controller
      description: get-user-by-paymentinfo-Id
      operationId: followPropertyReference-paymentinfo-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    delete:
      tags:
      - payment-info-property-reference-controller
      description: delete-user-by-paymentinfo-Id
      operationId: deletePropertyReferenceId-paymentinfo-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-transaction-entries:
    get:
      tags:
      - payment-transaction-entry-entity-controller
      description: get-paymenttransactionentry
      operationId: getCollectionResource-paymenttransactionentry-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPaymentTransactionEntry'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPaymentTransactionEntry'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - payment-transaction-entry-entity-controller
      description: create-paymenttransactionentry
      operationId: postCollectionResource-paymenttransactionentry-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionEntryRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransactionEntry'
  /payment-transaction-entries/{id}:
    get:
      tags:
      - payment-transaction-entry-entity-controller
      description: get-paymenttransactionentry
      operationId: getItemResource-paymenttransactionentry-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransactionEntry'
        "404":
          description: Not Found
    put:
      tags:
      - payment-transaction-entry-entity-controller
      description: update-paymenttransactionentry
      operationId: putItemResource-paymenttransactionentry-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionEntryRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransactionEntry'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransactionEntry'
        "204":
          description: No Content
    delete:
      tags:
      - payment-transaction-entry-entity-controller
      description: delete-paymenttransactionentry
      operationId: deleteItemResource-paymenttransactionentry-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-transaction-entries/{id}/currency:
    get:
      tags:
      - payment-transaction-entry-property-reference-controller
      description: get-currency-by-paymenttransactionentry-Id
      operationId: followPropertyReference-paymenttransactionentry-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - payment-transaction-entry-property-reference-controller
      description: update-currency-by-paymenttransactionentry-Id
      operationId: createPropertyReference-paymenttransactionentry-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - payment-transaction-entry-property-reference-controller
      description: delete-currency-by-paymenttransactionentry-Id
      operationId: deletePropertyReference-paymenttransactionentry-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-transaction-entries/{id}/currency/{propertyId}:
    get:
      tags:
      - payment-transaction-entry-property-reference-controller
      description: get-currency-by-paymenttransactionentry-Id
      operationId: followPropertyReference-paymenttransactionentry-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - payment-transaction-entry-property-reference-controller
      description: delete-currency-by-paymenttransactionentry-Id
      operationId: deletePropertyReferenceId-paymenttransactionentry-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-transaction-entries/{id}/paymentTransaction:
    get:
      tags:
      - payment-transaction-entry-property-reference-controller
      description: get-paymenttransaction-by-paymenttransactionentry-Id
      operationId: followPropertyReference-paymenttransactionentry-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransaction'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - payment-transaction-entry-property-reference-controller
      description: update-paymenttransaction-by-paymenttransactionentry-Id
      operationId: createPropertyReference-paymenttransactionentry-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransaction'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransaction'
        "204":
          description: No Content
    delete:
      tags:
      - payment-transaction-entry-property-reference-controller
      description: delete-paymenttransaction-by-paymenttransactionentry-Id
      operationId: deletePropertyReference-paymenttransactionentry-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-transaction-entries/{id}/paymentTransaction/{propertyId}:
    get:
      tags:
      - payment-transaction-entry-property-reference-controller
      description: get-paymenttransaction-by-paymenttransactionentry-Id
      operationId: followPropertyReference-paymenttransactionentry-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransaction'
        "404":
          description: Not Found
    delete:
      tags:
      - payment-transaction-entry-property-reference-controller
      description: delete-paymenttransaction-by-paymenttransactionentry-Id
      operationId: deletePropertyReferenceId-paymenttransactionentry-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-transactions:
    get:
      tags:
      - payment-transaction-entity-controller
      description: get-paymenttransaction
      operationId: getCollectionResource-paymenttransaction-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPaymentTransaction'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPaymentTransaction'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - payment-transaction-entity-controller
      description: create-paymenttransaction
      operationId: postCollectionResource-paymenttransaction-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransaction'
  /payment-transactions/{id}:
    get:
      tags:
      - payment-transaction-entity-controller
      description: get-paymenttransaction
      operationId: getItemResource-paymenttransaction-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransaction'
        "404":
          description: Not Found
    put:
      tags:
      - payment-transaction-entity-controller
      description: update-paymenttransaction
      operationId: putItemResource-paymenttransaction-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransaction'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransaction'
        "204":
          description: No Content
    delete:
      tags:
      - payment-transaction-entity-controller
      description: delete-paymenttransaction
      operationId: deleteItemResource-paymenttransaction-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-transactions/{id}/currency:
    get:
      tags:
      - payment-transaction-property-reference-controller
      description: get-currency-by-paymenttransaction-Id
      operationId: followPropertyReference-paymenttransaction-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - payment-transaction-property-reference-controller
      description: update-currency-by-paymenttransaction-Id
      operationId: createPropertyReference-paymenttransaction-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - payment-transaction-property-reference-controller
      description: delete-currency-by-paymenttransaction-Id
      operationId: deletePropertyReference-paymenttransaction-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-transactions/{id}/currency/{propertyId}:
    get:
      tags:
      - payment-transaction-property-reference-controller
      description: get-currency-by-paymenttransaction-Id
      operationId: followPropertyReference-paymenttransaction-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - payment-transaction-property-reference-controller
      description: delete-currency-by-paymenttransaction-Id
      operationId: deletePropertyReferenceId-paymenttransaction-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-transactions/{id}/entries:
    get:
      tags:
      - payment-transaction-property-reference-controller
      description: get-paymenttransactionentry-by-paymenttransaction-Id
      operationId: followPropertyReference-paymenttransaction-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentTransactionEntry'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - payment-transaction-property-reference-controller
      description: update-paymenttransactionentry-by-paymenttransaction-Id
      operationId: createPropertyReference-paymenttransaction-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentTransactionEntry'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentTransactionEntry'
        "204":
          description: No Content
    delete:
      tags:
      - payment-transaction-property-reference-controller
      description: delete-paymenttransactionentry-by-paymenttransaction-Id
      operationId: deletePropertyReference-paymenttransaction-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-transactions/{id}/entries/{propertyId}:
    get:
      tags:
      - payment-transaction-property-reference-controller
      description: get-paymenttransactionentry-by-paymenttransaction-Id
      operationId: followPropertyReference-paymenttransaction-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentTransactionEntry'
        "404":
          description: Not Found
    delete:
      tags:
      - payment-transaction-property-reference-controller
      description: delete-paymenttransactionentry-by-paymenttransaction-Id
      operationId: deletePropertyReferenceId-paymenttransaction-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-transactions/{id}/info:
    get:
      tags:
      - payment-transaction-property-reference-controller
      description: get-paymentinfo-by-paymenttransaction-Id
      operationId: followPropertyReference-paymenttransaction-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - payment-transaction-property-reference-controller
      description: update-paymentinfo-by-paymenttransaction-Id
      operationId: createPropertyReference-paymenttransaction-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - payment-transaction-property-reference-controller
      description: delete-paymentinfo-by-paymenttransaction-Id
      operationId: deletePropertyReference-paymenttransaction-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /payment-transactions/{id}/info/{propertyId}:
    get:
      tags:
      - payment-transaction-property-reference-controller
      description: get-paymentinfo-by-paymenttransaction-Id
      operationId: followPropertyReference-paymenttransaction-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "404":
          description: Not Found
    delete:
      tags:
      - payment-transaction-property-reference-controller
      description: delete-paymentinfo-by-paymenttransaction-Id
      operationId: deletePropertyReferenceId-paymenttransaction-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /point-of-services:
    get:
      tags:
      - point-of-service-entity-controller
      description: get-pointofservice
      operationId: getCollectionResource-pointofservice-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPointOfService'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPointOfService'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - point-of-service-entity-controller
      description: create-pointofservice
      operationId: postCollectionResource-pointofservice-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointOfServiceRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPointOfService'
  /point-of-services/{id}:
    get:
      tags:
      - point-of-service-entity-controller
      description: get-pointofservice
      operationId: getItemResource-pointofservice-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPointOfService'
        "404":
          description: Not Found
    put:
      tags:
      - point-of-service-entity-controller
      description: update-pointofservice
      operationId: putItemResource-pointofservice-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointOfServiceRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPointOfService'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPointOfService'
        "204":
          description: No Content
    delete:
      tags:
      - point-of-service-entity-controller
      description: delete-pointofservice
      operationId: deleteItemResource-pointofservice-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /point-of-services/{id}/address:
    get:
      tags:
      - point-of-service-property-reference-controller
      description: get-address-by-pointofservice-Id
      operationId: followPropertyReference-pointofservice-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - point-of-service-property-reference-controller
      description: update-address-by-pointofservice-Id
      operationId: createPropertyReference-pointofservice-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - point-of-service-property-reference-controller
      description: delete-address-by-pointofservice-Id
      operationId: deletePropertyReference-pointofservice-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /point-of-services/{id}/address/{propertyId}:
    get:
      tags:
      - point-of-service-property-reference-controller
      description: get-address-by-pointofservice-Id
      operationId: followPropertyReference-pointofservice-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - point-of-service-property-reference-controller
      description: delete-address-by-pointofservice-Id
      operationId: deletePropertyReferenceId-pointofservice-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /point-of-services/{id}/baseStore:
    get:
      tags:
      - point-of-service-property-reference-controller
      description: get-basestore-by-pointofservice-Id
      operationId: followPropertyReference-pointofservice-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - point-of-service-property-reference-controller
      description: update-basestore-by-pointofservice-Id
      operationId: createPropertyReference-pointofservice-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
        "204":
          description: No Content
    delete:
      tags:
      - point-of-service-property-reference-controller
      description: delete-basestore-by-pointofservice-Id
      operationId: deletePropertyReference-pointofservice-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /point-of-services/{id}/baseStore/{propertyId}:
    get:
      tags:
      - point-of-service-property-reference-controller
      description: get-basestore-by-pointofservice-Id
      operationId: followPropertyReference-pointofservice-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
        "404":
          description: Not Found
    delete:
      tags:
      - point-of-service-property-reference-controller
      description: delete-basestore-by-pointofservice-Id
      operationId: deletePropertyReferenceId-pointofservice-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /point-of-services/{id}/openingSchedule:
    get:
      tags:
      - point-of-service-property-reference-controller
      description: get-openingschedule-by-pointofservice-Id
      operationId: followPropertyReference-pointofservice-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOpeningSchedule'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - point-of-service-property-reference-controller
      description: update-openingschedule-by-pointofservice-Id
      operationId: createPropertyReference-pointofservice-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOpeningSchedule'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOpeningSchedule'
        "204":
          description: No Content
    delete:
      tags:
      - point-of-service-property-reference-controller
      description: delete-openingschedule-by-pointofservice-Id
      operationId: deletePropertyReference-pointofservice-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /point-of-services/{id}/openingSchedule/{propertyId}:
    get:
      tags:
      - point-of-service-property-reference-controller
      description: get-openingschedule-by-pointofservice-Id
      operationId: followPropertyReference-pointofservice-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOpeningSchedule'
        "404":
          description: Not Found
    delete:
      tags:
      - point-of-service-property-reference-controller
      description: delete-openingschedule-by-pointofservice-Id
      operationId: deletePropertyReferenceId-pointofservice-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /point-of-services/{id}/warehouses:
    get:
      tags:
      - point-of-service-property-reference-controller
      description: get-warehouse-by-pointofservice-Id
      operationId: followPropertyReference-pointofservice-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelWarehouse'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - point-of-service-property-reference-controller
      description: update-warehouse-by-pointofservice-Id
      operationId: createPropertyReference-pointofservice-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelWarehouse'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelWarehouse'
        "204":
          description: No Content
    delete:
      tags:
      - point-of-service-property-reference-controller
      description: delete-warehouse-by-pointofservice-Id
      operationId: deletePropertyReference-pointofservice-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /point-of-services/{id}/warehouses/{propertyId}:
    get:
      tags:
      - point-of-service-property-reference-controller
      description: get-warehouse-by-pointofservice-Id
      operationId: followPropertyReference-pointofservice-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelWarehouse'
        "404":
          description: Not Found
    delete:
      tags:
      - point-of-service-property-reference-controller
      description: delete-warehouse-by-pointofservice-Id
      operationId: deletePropertyReferenceId-pointofservice-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /price-rows:
    get:
      tags:
      - price-row-entity-controller
      description: get-pricerow
      operationId: getCollectionResource-pricerow-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPriceRow'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPriceRow'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - price-row-entity-controller
      description: create-pricerow
      operationId: postCollectionResource-pricerow-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceRowRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPriceRow'
  /price-rows/{id}:
    get:
      tags:
      - price-row-entity-controller
      description: get-pricerow
      operationId: getItemResource-pricerow-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPriceRow'
        "404":
          description: Not Found
    put:
      tags:
      - price-row-entity-controller
      description: update-pricerow
      operationId: putItemResource-pricerow-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceRowRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPriceRow'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPriceRow'
        "204":
          description: No Content
    delete:
      tags:
      - price-row-entity-controller
      description: delete-pricerow
      operationId: deleteItemResource-pricerow-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /price-rows/{id}/catalog:
    get:
      tags:
      - price-row-property-reference-controller
      description: get-catalog-by-pricerow-Id
      operationId: followPropertyReference-pricerow-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - price-row-property-reference-controller
      description: update-catalog-by-pricerow-Id
      operationId: createPropertyReference-pricerow-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - price-row-property-reference-controller
      description: delete-catalog-by-pricerow-Id
      operationId: deletePropertyReference-pricerow-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /price-rows/{id}/catalog/{propertyId}:
    get:
      tags:
      - price-row-property-reference-controller
      description: get-catalog-by-pricerow-Id
      operationId: followPropertyReference-pricerow-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "404":
          description: Not Found
    delete:
      tags:
      - price-row-property-reference-controller
      description: delete-catalog-by-pricerow-Id
      operationId: deletePropertyReferenceId-pricerow-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /price-rows/{id}/currency:
    get:
      tags:
      - price-row-property-reference-controller
      description: get-currency-by-pricerow-Id
      operationId: followPropertyReference-pricerow-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - price-row-property-reference-controller
      description: update-currency-by-pricerow-Id
      operationId: createPropertyReference-pricerow-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - price-row-property-reference-controller
      description: delete-currency-by-pricerow-Id
      operationId: deletePropertyReference-pricerow-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /price-rows/{id}/currency/{propertyId}:
    get:
      tags:
      - price-row-property-reference-controller
      description: get-currency-by-pricerow-Id
      operationId: followPropertyReference-pricerow-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - price-row-property-reference-controller
      description: delete-currency-by-pricerow-Id
      operationId: deletePropertyReferenceId-pricerow-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /price-rows/{id}/product:
    get:
      tags:
      - price-row-property-reference-controller
      description: get-product-by-pricerow-Id
      operationId: followPropertyReference-pricerow-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - price-row-property-reference-controller
      description: update-product-by-pricerow-Id
      operationId: createPropertyReference-pricerow-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "204":
          description: No Content
    delete:
      tags:
      - price-row-property-reference-controller
      description: delete-product-by-pricerow-Id
      operationId: deletePropertyReference-pricerow-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /price-rows/{id}/product/{propertyId}:
    get:
      tags:
      - price-row-property-reference-controller
      description: get-product-by-pricerow-Id
      operationId: followPropertyReference-pricerow-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "404":
          description: Not Found
    delete:
      tags:
      - price-row-property-reference-controller
      description: delete-product-by-pricerow-Id
      operationId: deletePropertyReferenceId-pricerow-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /price-rows/{id}/productGroup:
    get:
      tags:
      - price-row-property-reference-controller
      description: get-productpricegroup-by-pricerow-Id
      operationId: followPropertyReference-pricerow-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductPriceGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - price-row-property-reference-controller
      description: update-productpricegroup-by-pricerow-Id
      operationId: createPropertyReference-pricerow-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductPriceGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductPriceGroup'
        "204":
          description: No Content
    delete:
      tags:
      - price-row-property-reference-controller
      description: delete-productpricegroup-by-pricerow-Id
      operationId: deletePropertyReference-pricerow-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /price-rows/{id}/productGroup/{propertyId}:
    get:
      tags:
      - price-row-property-reference-controller
      description: get-productpricegroup-by-pricerow-Id
      operationId: followPropertyReference-pricerow-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductPriceGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - price-row-property-reference-controller
      description: delete-productpricegroup-by-pricerow-Id
      operationId: deletePropertyReferenceId-pricerow-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /price-rows/{id}/userGroup:
    get:
      tags:
      - price-row-property-reference-controller
      description: get-userpricegroup-by-pricerow-Id
      operationId: followPropertyReference-pricerow-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - price-row-property-reference-controller
      description: update-userpricegroup-by-pricerow-Id
      operationId: createPropertyReference-pricerow-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "204":
          description: No Content
    delete:
      tags:
      - price-row-property-reference-controller
      description: delete-userpricegroup-by-pricerow-Id
      operationId: deletePropertyReference-pricerow-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /price-rows/{id}/userGroup/{propertyId}:
    get:
      tags:
      - price-row-property-reference-controller
      description: get-userpricegroup-by-pricerow-Id
      operationId: followPropertyReference-pricerow-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - price-row-property-reference-controller
      description: delete-userpricegroup-by-pricerow-Id
      operationId: deletePropertyReferenceId-pricerow-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals:
    get:
      tags:
      - principal-entity-controller
      description: get-principal
      operationId: getCollectionResource-principal-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPrincipal'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPrincipal'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - principal-entity-controller
      description: create-principal
      operationId: postCollectionResource-principal-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPrincipal'
  /principals/search/findByUid:
    get:
      tags:
      - principal-search-controller
      operationId: executeSearch-principal-get
      parameters:
      - name: uid
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPrincipal'
        "404":
          description: Not Found
  /principals/{id}:
    get:
      tags:
      - principal-entity-controller
      description: get-principal
      operationId: getItemResource-principal-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPrincipal'
        "404":
          description: Not Found
    put:
      tags:
      - principal-entity-controller
      description: update-principal
      operationId: putItemResource-principal-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPrincipal'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPrincipal'
        "204":
          description: No Content
    delete:
      tags:
      - principal-entity-controller
      description: delete-principal
      operationId: deleteItemResource-principal-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/accessibleCatalogs:
    get:
      tags:
      - principal-property-reference-controller
      description: get-catalog-by-principal-Id
      operationId: followPropertyReference-principal-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - principal-property-reference-controller
      description: update-catalog-by-principal-Id
      operationId: createPropertyReference-principal-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-catalog-by-principal-Id
      operationId: deletePropertyReference-principal-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/accessibleCatalogs/{propertyId}:
    get:
      tags:
      - principal-property-reference-controller
      description: get-catalog-by-principal-Id
      operationId: followPropertyReference-principal-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "404":
          description: Not Found
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-catalog-by-principal-Id
      operationId: deletePropertyReferenceId-principal-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/accessibleCategories:
    get:
      tags:
      - principal-property-reference-controller
      description: get-category-by-principal-Id
      operationId: followPropertyReference-principal-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - principal-property-reference-controller
      description: update-category-by-principal-Id
      operationId: createPropertyReference-principal-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "204":
          description: No Content
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-category-by-principal-Id
      operationId: deletePropertyReference-principal-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/accessibleCategories/{propertyId}:
    get:
      tags:
      - principal-property-reference-controller
      description: get-category-by-principal-Id
      operationId: followPropertyReference-principal-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "404":
          description: Not Found
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-category-by-principal-Id
      operationId: deletePropertyReferenceId-principal-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/addresses:
    get:
      tags:
      - principal-property-reference-controller
      description: get-address-by-principal-Id
      operationId: followPropertyReference-principal-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - principal-property-reference-controller
      description: update-address-by-principal-Id
      operationId: createPropertyReference-principal-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-address-by-principal-Id
      operationId: deletePropertyReference-principal-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/addresses/{propertyId}:
    get:
      tags:
      - principal-property-reference-controller
      description: get-address-by-principal-Id
      operationId: followPropertyReference-principal-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-address-by-principal-Id
      operationId: deletePropertyReferenceId-principal-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/billingAddress:
    get:
      tags:
      - principal-property-reference-controller
      description: get-address-by-principal-Id
      operationId: followPropertyReference-principal-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - principal-property-reference-controller
      description: update-address-by-principal-Id
      operationId: createPropertyReference-principal-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-address-by-principal-Id
      operationId: deletePropertyReference-principal-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/billingAddress/{propertyId}:
    get:
      tags:
      - principal-property-reference-controller
      description: get-address-by-principal-Id
      operationId: followPropertyReference-principal-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-address-by-principal-Id
      operationId: deletePropertyReferenceId-principal-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/groups:
    get:
      tags:
      - principal-property-reference-controller
      description: get-usergroup-by-principal-Id
      operationId: followPropertyReference-principal-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - principal-property-reference-controller
      description: update-usergroup-by-principal-Id
      operationId: createPropertyReference-principal-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "204":
          description: No Content
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-usergroup-by-principal-Id
      operationId: deletePropertyReference-principal-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/groups/{propertyId}:
    get:
      tags:
      - principal-property-reference-controller
      description: get-usergroup-by-principal-Id
      operationId: followPropertyReference-principal-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-usergroup-by-principal-Id
      operationId: deletePropertyReferenceId-principal-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/profilePicture:
    get:
      tags:
      - principal-property-reference-controller
      description: get-media-by-principal-Id
      operationId: followPropertyReference-principal-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - principal-property-reference-controller
      description: update-media-by-principal-Id
      operationId: createPropertyReference-principal-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "204":
          description: No Content
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-media-by-principal-Id
      operationId: deletePropertyReference-principal-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/profilePicture/{propertyId}:
    get:
      tags:
      - principal-property-reference-controller
      description: get-media-by-principal-Id
      operationId: followPropertyReference-principal-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "404":
          description: Not Found
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-media-by-principal-Id
      operationId: deletePropertyReferenceId-principal-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/shippingAddress:
    get:
      tags:
      - principal-property-reference-controller
      description: get-address-by-principal-Id
      operationId: followPropertyReference-principal-get_7_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - principal-property-reference-controller
      description: update-address-by-principal-Id
      operationId: createPropertyReference-principal-put_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-address-by-principal-Id
      operationId: deletePropertyReference-principal-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /principals/{id}/shippingAddress/{propertyId}:
    get:
      tags:
      - principal-property-reference-controller
      description: get-address-by-principal-Id
      operationId: followPropertyReference-principal-get_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - principal-property-reference-controller
      description: delete-address-by-principal-Id
      operationId: deletePropertyReferenceId-principal-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /product-features:
    get:
      tags:
      - product-feature-entity-controller
      description: get-productfeature
      operationId: getCollectionResource-productfeature-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelProductFeature'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelProductFeature'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - product-feature-entity-controller
      description: create-productfeature
      operationId: postCollectionResource-productfeature-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFeatureRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductFeature'
  /product-features/search/findByProduct:
    get:
      tags:
      - product-feature-search-controller
      operationId: executeSearch-productfeature-get
      parameters:
      - name: product
        in: query
        schema:
          $ref: '#/components/schemas/Product'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelProductFeature'
        "404":
          description: Not Found
  /product-features/{id}:
    get:
      tags:
      - product-feature-entity-controller
      description: get-productfeature
      operationId: getItemResource-productfeature-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductFeature'
        "404":
          description: Not Found
    put:
      tags:
      - product-feature-entity-controller
      description: update-productfeature
      operationId: putItemResource-productfeature-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFeatureRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductFeature'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductFeature'
        "204":
          description: No Content
    delete:
      tags:
      - product-feature-entity-controller
      description: delete-productfeature
      operationId: deleteItemResource-productfeature-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /product-features/{id}/attribute:
    get:
      tags:
      - product-feature-property-reference-controller
      description: get-attribute-by-productfeature-Id
      operationId: followPropertyReference-productfeature-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttribute'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - product-feature-property-reference-controller
      description: update-attribute-by-productfeature-Id
      operationId: createPropertyReference-productfeature-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttribute'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttribute'
        "204":
          description: No Content
    delete:
      tags:
      - product-feature-property-reference-controller
      description: delete-attribute-by-productfeature-Id
      operationId: deletePropertyReference-productfeature-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /product-features/{id}/attribute/{propertyId}:
    get:
      tags:
      - product-feature-property-reference-controller
      description: get-attribute-by-productfeature-Id
      operationId: followPropertyReference-productfeature-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttribute'
        "404":
          description: Not Found
    delete:
      tags:
      - product-feature-property-reference-controller
      description: delete-attribute-by-productfeature-Id
      operationId: deletePropertyReferenceId-productfeature-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /product-features/{id}/product:
    get:
      tags:
      - product-feature-property-reference-controller
      description: get-product-by-productfeature-Id
      operationId: followPropertyReference-productfeature-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - product-feature-property-reference-controller
      description: update-product-by-productfeature-Id
      operationId: createPropertyReference-productfeature-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "204":
          description: No Content
    delete:
      tags:
      - product-feature-property-reference-controller
      description: delete-product-by-productfeature-Id
      operationId: deletePropertyReference-productfeature-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /product-features/{id}/product/{propertyId}:
    get:
      tags:
      - product-feature-property-reference-controller
      description: get-product-by-productfeature-Id
      operationId: followPropertyReference-productfeature-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "404":
          description: Not Found
    delete:
      tags:
      - product-feature-property-reference-controller
      description: delete-product-by-productfeature-Id
      operationId: deletePropertyReferenceId-productfeature-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /product-features/{id}/unit:
    get:
      tags:
      - product-feature-property-reference-controller
      description: get-attributeunit-by-productfeature-Id
      operationId: followPropertyReference-productfeature-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeUnit'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - product-feature-property-reference-controller
      description: update-attributeunit-by-productfeature-Id
      operationId: createPropertyReference-productfeature-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeUnit'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeUnit'
        "204":
          description: No Content
    delete:
      tags:
      - product-feature-property-reference-controller
      description: delete-attributeunit-by-productfeature-Id
      operationId: deletePropertyReference-productfeature-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /product-features/{id}/unit/{propertyId}:
    get:
      tags:
      - product-feature-property-reference-controller
      description: get-attributeunit-by-productfeature-Id
      operationId: followPropertyReference-productfeature-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAttributeUnit'
        "404":
          description: Not Found
    delete:
      tags:
      - product-feature-property-reference-controller
      description: delete-attributeunit-by-productfeature-Id
      operationId: deletePropertyReferenceId-productfeature-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /product-tax-groups:
    get:
      tags:
      - enum-entity-entity-controller
      description: get-enumentity
      operationId: getCollectionResource-enumentity-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelEnumEntity'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelEnumEntity'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - enum-entity-entity-controller
      description: create-enumentity
      operationId: postCollectionResource-enumentity-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumEntityRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEnumEntity'
  /product-tax-groups/{id}:
    get:
      tags:
      - enum-entity-entity-controller
      description: get-enumentity
      operationId: getItemResource-enumentity-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEnumEntity'
        "404":
          description: Not Found
    put:
      tags:
      - enum-entity-entity-controller
      description: update-enumentity
      operationId: putItemResource-enumentity-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumEntityRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEnumEntity'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelEnumEntity'
        "204":
          description: No Content
    delete:
      tags:
      - enum-entity-entity-controller
      description: delete-enumentity
      operationId: deleteItemResource-enumentity-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products:
    get:
      tags:
      - product-entity-controller
      description: get-product
      operationId: getCollectionResource-product-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelProduct'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelProduct'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - product-entity-controller
      description: create-product
      operationId: postCollectionResource-product-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
  /products/search/findByCodeAndCatalog:
    get:
      tags:
      - product-search-controller
      operationId: executeSearch-product-get
      parameters:
      - name: code
        in: query
        schema:
          type: string
      - name: catalog
        in: query
        schema:
          $ref: '#/components/schemas/Catalog'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "404":
          description: Not Found
  /products/search/findByExternalIds:
    get:
      tags:
      - product-search-controller
      operationId: executeSearch-product-get_1
      parameters:
      - name: externalIds
        in: query
        schema:
          type: array
          items:
            type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelProduct'
        "404":
          description: Not Found
  /products/{id}:
    get:
      tags:
      - product-entity-controller
      description: get-product
      operationId: getItemResource-product-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "404":
          description: Not Found
    put:
      tags:
      - product-entity-controller
      description: update-product
      operationId: putItemResource-product-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "204":
          description: No Content
    delete:
      tags:
      - product-entity-controller
      description: delete-product
      operationId: deleteItemResource-product-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/catalog:
    get:
      tags:
      - product-property-reference-controller
      description: get-catalog-by-product-Id
      operationId: followPropertyReference-product-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - product-property-reference-controller
      description: update-catalog-by-product-Id
      operationId: createPropertyReference-product-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - product-property-reference-controller
      description: delete-catalog-by-product-Id
      operationId: deletePropertyReference-product-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/catalog/{propertyId}:
    get:
      tags:
      - product-property-reference-controller
      description: get-catalog-by-product-Id
      operationId: followPropertyReference-product-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "404":
          description: Not Found
    delete:
      tags:
      - product-property-reference-controller
      description: delete-catalog-by-product-Id
      operationId: deletePropertyReferenceId-product-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/categories:
    get:
      tags:
      - product-property-reference-controller
      description: get-category-by-product-Id
      operationId: followPropertyReference-product-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - product-property-reference-controller
      description: update-category-by-product-Id
      operationId: createPropertyReference-product-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "204":
          description: No Content
    delete:
      tags:
      - product-property-reference-controller
      description: delete-category-by-product-Id
      operationId: deletePropertyReference-product-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/categories/{propertyId}:
    get:
      tags:
      - product-property-reference-controller
      description: get-category-by-product-Id
      operationId: followPropertyReference-product-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "404":
          description: Not Found
    delete:
      tags:
      - product-property-reference-controller
      description: delete-category-by-product-Id
      operationId: deletePropertyReferenceId-product-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/discountRows:
    get:
      tags:
      - product-property-reference-controller
      description: get-discountrow-by-product-Id
      operationId: followPropertyReference-product-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelDiscountRow'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - product-property-reference-controller
      description: update-discountrow-by-product-Id
      operationId: createPropertyReference-product-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelDiscountRow'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelDiscountRow'
        "204":
          description: No Content
    delete:
      tags:
      - product-property-reference-controller
      description: delete-discountrow-by-product-Id
      operationId: deletePropertyReference-product-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/discountRows/{propertyId}:
    get:
      tags:
      - product-property-reference-controller
      description: get-discountrow-by-product-Id
      operationId: followPropertyReference-product-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelDiscountRow'
        "404":
          description: Not Found
    delete:
      tags:
      - product-property-reference-controller
      description: delete-discountrow-by-product-Id
      operationId: deletePropertyReferenceId-product-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/features:
    get:
      tags:
      - product-property-reference-controller
      description: get-productfeature-by-product-Id
      operationId: followPropertyReference-product-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelProductFeature'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - product-property-reference-controller
      description: update-productfeature-by-product-Id
      operationId: createPropertyReference-product-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelProductFeature'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelProductFeature'
        "204":
          description: No Content
    delete:
      tags:
      - product-property-reference-controller
      description: delete-productfeature-by-product-Id
      operationId: deletePropertyReference-product-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/features/{propertyId}:
    get:
      tags:
      - product-property-reference-controller
      description: get-productfeature-by-product-Id
      operationId: followPropertyReference-product-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelProductFeature'
        "404":
          description: Not Found
    delete:
      tags:
      - product-property-reference-controller
      description: delete-productfeature-by-product-Id
      operationId: deletePropertyReferenceId-product-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/mainImage:
    get:
      tags:
      - product-property-reference-controller
      description: get-media-by-product-Id
      operationId: followPropertyReference-product-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - product-property-reference-controller
      description: update-media-by-product-Id
      operationId: createPropertyReference-product-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "204":
          description: No Content
    delete:
      tags:
      - product-property-reference-controller
      description: delete-media-by-product-Id
      operationId: deletePropertyReference-product-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/mainImage/{propertyId}:
    get:
      tags:
      - product-property-reference-controller
      description: get-media-by-product-Id
      operationId: followPropertyReference-product-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "404":
          description: Not Found
    delete:
      tags:
      - product-property-reference-controller
      description: delete-media-by-product-Id
      operationId: deletePropertyReferenceId-product-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/priceRows:
    get:
      tags:
      - product-property-reference-controller
      description: get-pricerow-by-product-Id
      operationId: followPropertyReference-product-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPriceRow'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - product-property-reference-controller
      description: update-pricerow-by-product-Id
      operationId: createPropertyReference-product-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPriceRow'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPriceRow'
        "204":
          description: No Content
    delete:
      tags:
      - product-property-reference-controller
      description: delete-pricerow-by-product-Id
      operationId: deletePropertyReference-product-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/priceRows/{propertyId}:
    get:
      tags:
      - product-property-reference-controller
      description: get-pricerow-by-product-Id
      operationId: followPropertyReference-product-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPriceRow'
        "404":
          description: Not Found
    delete:
      tags:
      - product-property-reference-controller
      description: delete-pricerow-by-product-Id
      operationId: deletePropertyReferenceId-product-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/taxRows:
    get:
      tags:
      - product-property-reference-controller
      description: get-taxrow-by-product-Id
      operationId: followPropertyReference-product-get_7_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaxRow'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - product-property-reference-controller
      description: update-taxrow-by-product-Id
      operationId: createPropertyReference-product-put_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaxRow'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaxRow'
        "204":
          description: No Content
    delete:
      tags:
      - product-property-reference-controller
      description: delete-taxrow-by-product-Id
      operationId: deletePropertyReference-product-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/taxRows/{propertyId}:
    get:
      tags:
      - product-property-reference-controller
      description: get-taxrow-by-product-Id
      operationId: followPropertyReference-product-get_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaxRow'
        "404":
          description: Not Found
    delete:
      tags:
      - product-property-reference-controller
      description: delete-taxrow-by-product-Id
      operationId: deletePropertyReferenceId-product-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/variantProducts:
    get:
      tags:
      - product-property-reference-controller
      description: get-variantproduct-by-product-Id
      operationId: followPropertyReference-product-get_8_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariantProduct'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - product-property-reference-controller
      description: update-variantproduct-by-product-Id
      operationId: createPropertyReference-product-put_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariantProduct'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariantProduct'
        "204":
          description: No Content
    delete:
      tags:
      - product-property-reference-controller
      description: delete-variantproduct-by-product-Id
      operationId: deletePropertyReference-product-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/variantProducts/{propertyId}:
    get:
      tags:
      - product-property-reference-controller
      description: get-variantproduct-by-product-Id
      operationId: followPropertyReference-product-get_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariantProduct'
        "404":
          description: Not Found
    delete:
      tags:
      - product-property-reference-controller
      description: delete-variantproduct-by-product-Id
      operationId: deletePropertyReferenceId-product-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/variations:
    get:
      tags:
      - product-property-reference-controller
      description: get-variation-by-product-Id
      operationId: followPropertyReference-product-get_9_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariation'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - product-property-reference-controller
      description: update-variation-by-product-Id
      operationId: createPropertyReference-product-put_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariation'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariation'
        "204":
          description: No Content
    delete:
      tags:
      - product-property-reference-controller
      description: delete-variation-by-product-Id
      operationId: deletePropertyReference-product-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /products/{id}/variations/{propertyId}:
    get:
      tags:
      - product-property-reference-controller
      description: get-variation-by-product-Id
      operationId: followPropertyReference-product-get_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariation'
        "404":
          description: Not Found
    delete:
      tags:
      - product-property-reference-controller
      description: delete-variation-by-product-Id
      operationId: deletePropertyReferenceId-product-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /profile:
    get:
      tags:
      - profile-controller
      operationId: listAllFormsOfMetadata_1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepresentationModelObject'
  /profile/addresses:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/attribute-templates:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/attribute-units:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_3
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/attributes:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_4
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/b2b-customers:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_5
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/b2b-permissions:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_6
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/b2b-units:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_7
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/base-stores:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_8
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/budgets:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_9
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/cart-entries:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/catalogs:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_11
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/categories:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_12
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/cost-centers:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_13
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/countries:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_14
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/cronjobs:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_15
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/currencies:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_16
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/customers:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_17
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/db-infos:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_18
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/discount-rows:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_19
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/discounts:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_20
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/document-templates:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_21
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/email-addresses:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_22
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/email-messages:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_23
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/employees:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_24
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/invoice-infos:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_25
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/languages:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_26
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/medias:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_27
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/opening-schedules:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_28
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/order-thresholds:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_29
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/orders:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/payment-infos:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_31
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/payment-transaction-entries:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/payment-transactions:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_33
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/point-of-services:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_34
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/price-rows:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_35
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/principals:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_36
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/product-features:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_37
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/product-tax-groups:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_38
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/products:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_39
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/promotion-groups:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_40
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/promotion-prices:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_41
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/promotion-restrictions:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_42
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/promotions:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_43
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/quote-limits:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_44
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/quotes:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_45
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/regions:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_46
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/stocks:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_47
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/sync-logs:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_48
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/tax-rows:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_49
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/taxes:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_50
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/titles:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_51
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/user-discount-groups:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_52
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/user-groups:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_53
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/user-price-groups:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_54
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/user-tax-groups:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_55
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/users:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_56
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/variation-options:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_57
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/variations:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_58
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/warehouses:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_59
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /promotion-groups:
    get:
      tags:
      - promotion-group-entity-controller
      description: get-promotiongroup
      operationId: getCollectionResource-promotiongroup-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPromotionGroup'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPromotionGroup'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - promotion-group-entity-controller
      description: create-promotiongroup
      operationId: postCollectionResource-promotiongroup-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionGroupRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPromotionGroup'
  /promotion-groups/{id}:
    get:
      tags:
      - promotion-group-entity-controller
      description: get-promotiongroup
      operationId: getItemResource-promotiongroup-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPromotionGroup'
        "404":
          description: Not Found
    put:
      tags:
      - promotion-group-entity-controller
      description: update-promotiongroup
      operationId: putItemResource-promotiongroup-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionGroupRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPromotionGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPromotionGroup'
        "204":
          description: No Content
    delete:
      tags:
      - promotion-group-entity-controller
      description: delete-promotiongroup
      operationId: deleteItemResource-promotiongroup-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /promotion-groups/{id}/promotions:
    get:
      tags:
      - promotion-group-property-reference-controller
      description: get-abstractpromotion-by-promotiongroup-Id
      operationId: followPropertyReference-promotiongroup-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAbstractPromotion'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - promotion-group-property-reference-controller
      description: update-abstractpromotion-by-promotiongroup-Id
      operationId: createPropertyReference-promotiongroup-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAbstractPromotion'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAbstractPromotion'
        "204":
          description: No Content
    delete:
      tags:
      - promotion-group-property-reference-controller
      description: delete-abstractpromotion-by-promotiongroup-Id
      operationId: deletePropertyReference-promotiongroup-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /promotion-groups/{id}/promotions/{propertyId}:
    get:
      tags:
      - promotion-group-property-reference-controller
      description: get-abstractpromotion-by-promotiongroup-Id
      operationId: followPropertyReference-promotiongroup-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAbstractPromotion'
        "404":
          description: Not Found
    delete:
      tags:
      - promotion-group-property-reference-controller
      description: delete-abstractpromotion-by-promotiongroup-Id
      operationId: deletePropertyReferenceId-promotiongroup-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /promotion-prices:
    get:
      tags:
      - promotion-price-row-entity-controller
      description: get-promotionpricerow
      operationId: getCollectionResource-promotionpricerow-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPromotionPriceRow'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPromotionPriceRow'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - promotion-price-row-entity-controller
      description: create-promotionpricerow
      operationId: postCollectionResource-promotionpricerow-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionPriceRowRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPromotionPriceRow'
  /promotion-prices/{id}:
    get:
      tags:
      - promotion-price-row-entity-controller
      description: get-promotionpricerow
      operationId: getItemResource-promotionpricerow-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPromotionPriceRow'
        "404":
          description: Not Found
    put:
      tags:
      - promotion-price-row-entity-controller
      description: update-promotionpricerow
      operationId: putItemResource-promotionpricerow-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionPriceRowRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPromotionPriceRow'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPromotionPriceRow'
        "204":
          description: No Content
    delete:
      tags:
      - promotion-price-row-entity-controller
      description: delete-promotionpricerow
      operationId: deleteItemResource-promotionpricerow-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /promotion-prices/{id}/currency:
    get:
      tags:
      - promotion-price-row-property-reference-controller
      description: get-currency-by-promotionpricerow-Id
      operationId: followPropertyReference-promotionpricerow-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - promotion-price-row-property-reference-controller
      description: update-currency-by-promotionpricerow-Id
      operationId: createPropertyReference-promotionpricerow-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - promotion-price-row-property-reference-controller
      description: delete-currency-by-promotionpricerow-Id
      operationId: deletePropertyReference-promotionpricerow-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /promotion-prices/{id}/currency/{propertyId}:
    get:
      tags:
      - promotion-price-row-property-reference-controller
      description: get-currency-by-promotionpricerow-Id
      operationId: followPropertyReference-promotionpricerow-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - promotion-price-row-property-reference-controller
      description: delete-currency-by-promotionpricerow-Id
      operationId: deletePropertyReferenceId-promotionpricerow-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /promotion-restrictions:
    get:
      tags:
      - abstract-promotion-restriction-entity-controller
      description: get-abstractpromotionrestriction
      operationId: getCollectionResource-abstractpromotionrestriction-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAbstractPromotionRestriction'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAbstractPromotionRestriction'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - abstract-promotion-restriction-entity-controller
      description: create-abstractpromotionrestriction
      operationId: postCollectionResource-abstractpromotionrestriction-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractPromotionRestrictionRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAbstractPromotionRestriction'
  /promotion-restrictions/{id}:
    get:
      tags:
      - abstract-promotion-restriction-entity-controller
      description: get-abstractpromotionrestriction
      operationId: getItemResource-abstractpromotionrestriction-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAbstractPromotionRestriction'
        "404":
          description: Not Found
    put:
      tags:
      - abstract-promotion-restriction-entity-controller
      description: update-abstractpromotionrestriction
      operationId: putItemResource-abstractpromotionrestriction-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractPromotionRestrictionRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAbstractPromotionRestriction'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAbstractPromotionRestriction'
        "204":
          description: No Content
    delete:
      tags:
      - abstract-promotion-restriction-entity-controller
      description: delete-abstractpromotionrestriction
      operationId: deleteItemResource-abstractpromotionrestriction-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /promotion-restrictions/{id}/promotion:
    get:
      tags:
      - abstract-promotion-restriction-property-reference-controller
      description: get-abstractpromotion-by-abstractpromotionrestriction-Id
      operationId: followPropertyReference-abstractpromotionrestriction-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAbstractPromotion'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - abstract-promotion-restriction-property-reference-controller
      description: update-abstractpromotion-by-abstractpromotionrestriction-Id
      operationId: createPropertyReference-abstractpromotionrestriction-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAbstractPromotion'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAbstractPromotion'
        "204":
          description: No Content
    delete:
      tags:
      - abstract-promotion-restriction-property-reference-controller
      description: delete-abstractpromotion-by-abstractpromotionrestriction-Id
      operationId: deletePropertyReference-abstractpromotionrestriction-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /promotion-restrictions/{id}/promotion/{propertyId}:
    get:
      tags:
      - abstract-promotion-restriction-property-reference-controller
      description: get-abstractpromotion-by-abstractpromotionrestriction-Id
      operationId: followPropertyReference-abstractpromotionrestriction-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAbstractPromotion'
        "404":
          description: Not Found
    delete:
      tags:
      - abstract-promotion-restriction-property-reference-controller
      description: delete-abstractpromotion-by-abstractpromotionrestriction-Id
      operationId: deletePropertyReferenceId-abstractpromotionrestriction-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /promotions:
    get:
      tags:
      - abstract-promotion-entity-controller
      description: get-abstractpromotion
      operationId: getCollectionResource-abstractpromotion-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAbstractPromotion'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAbstractPromotion'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - abstract-promotion-entity-controller
      description: create-abstractpromotion
      operationId: postCollectionResource-abstractpromotion-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractPromotionRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAbstractPromotion'
  /promotions/{id}:
    get:
      tags:
      - abstract-promotion-entity-controller
      description: get-abstractpromotion
      operationId: getItemResource-abstractpromotion-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAbstractPromotion'
        "404":
          description: Not Found
    put:
      tags:
      - abstract-promotion-entity-controller
      description: update-abstractpromotion
      operationId: putItemResource-abstractpromotion-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractPromotionRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAbstractPromotion'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAbstractPromotion'
        "204":
          description: No Content
    delete:
      tags:
      - abstract-promotion-entity-controller
      description: delete-abstractpromotion
      operationId: deleteItemResource-abstractpromotion-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /promotions/{id}/promotionGroup:
    get:
      tags:
      - abstract-promotion-property-reference-controller
      description: get-promotiongroup-by-abstractpromotion-Id
      operationId: followPropertyReference-abstractpromotion-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPromotionGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - abstract-promotion-property-reference-controller
      description: update-promotiongroup-by-abstractpromotion-Id
      operationId: createPropertyReference-abstractpromotion-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPromotionGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPromotionGroup'
        "204":
          description: No Content
    delete:
      tags:
      - abstract-promotion-property-reference-controller
      description: delete-promotiongroup-by-abstractpromotion-Id
      operationId: deletePropertyReference-abstractpromotion-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /promotions/{id}/promotionGroup/{propertyId}:
    get:
      tags:
      - abstract-promotion-property-reference-controller
      description: get-promotiongroup-by-abstractpromotion-Id
      operationId: followPropertyReference-abstractpromotion-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPromotionGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - abstract-promotion-property-reference-controller
      description: delete-promotiongroup-by-abstractpromotion-Id
      operationId: deletePropertyReferenceId-abstractpromotion-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /promotions/{id}/restrictions:
    get:
      tags:
      - abstract-promotion-property-reference-controller
      description: get-abstractpromotionrestriction-by-abstractpromotion-Id
      operationId: followPropertyReference-abstractpromotion-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAbstractPromotionRestriction'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - abstract-promotion-property-reference-controller
      description: update-abstractpromotionrestriction-by-abstractpromotion-Id
      operationId: createPropertyReference-abstractpromotion-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAbstractPromotionRestriction'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAbstractPromotionRestriction'
        "204":
          description: No Content
    delete:
      tags:
      - abstract-promotion-property-reference-controller
      description: delete-abstractpromotionrestriction-by-abstractpromotion-Id
      operationId: deletePropertyReference-abstractpromotion-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /promotions/{id}/restrictions/{propertyId}:
    get:
      tags:
      - abstract-promotion-property-reference-controller
      description: get-abstractpromotionrestriction-by-abstractpromotion-Id
      operationId: followPropertyReference-abstractpromotion-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAbstractPromotionRestriction'
        "404":
          description: Not Found
    delete:
      tags:
      - abstract-promotion-property-reference-controller
      description: delete-abstractpromotionrestriction-by-abstractpromotion-Id
      operationId: deletePropertyReferenceId-abstractpromotion-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quote-limits:
    get:
      tags:
      - b-2-b-quote-limit-entity-controller
      description: get-b2bquotelimit
      operationId: getCollectionResource-b2bquotelimit-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BQuoteLimit'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelB2BQuoteLimit'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - b-2-b-quote-limit-entity-controller
      description: create-b2bquotelimit
      operationId: postCollectionResource-b2bquotelimit-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BQuoteLimitRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BQuoteLimit'
  /quote-limits/{id}:
    get:
      tags:
      - b-2-b-quote-limit-entity-controller
      description: get-b2bquotelimit
      operationId: getItemResource-b2bquotelimit-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BQuoteLimit'
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-quote-limit-entity-controller
      description: update-b2bquotelimit
      operationId: putItemResource-b2bquotelimit-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BQuoteLimitRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BQuoteLimit'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelB2BQuoteLimit'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-quote-limit-entity-controller
      description: delete-b2bquotelimit
      operationId: deleteItemResource-b2bquotelimit-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quote-limits/{id}/currency:
    get:
      tags:
      - b-2-b-quote-limit-property-reference-controller
      description: get-currency-by-b2bquotelimit-Id
      operationId: followPropertyReference-b2bquotelimit-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - b-2-b-quote-limit-property-reference-controller
      description: update-currency-by-b2bquotelimit-Id
      operationId: createPropertyReference-b2bquotelimit-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - b-2-b-quote-limit-property-reference-controller
      description: delete-currency-by-b2bquotelimit-Id
      operationId: deletePropertyReference-b2bquotelimit-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quote-limits/{id}/currency/{propertyId}:
    get:
      tags:
      - b-2-b-quote-limit-property-reference-controller
      description: get-currency-by-b2bquotelimit-Id
      operationId: followPropertyReference-b2bquotelimit-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - b-2-b-quote-limit-property-reference-controller
      description: delete-currency-by-b2bquotelimit-Id
      operationId: deletePropertyReferenceId-b2bquotelimit-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes:
    get:
      tags:
      - cart-entity-controller
      description: get-cart
      operationId: getCollectionResource-cart-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCart'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCart'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - cart-entity-controller
      description: create-cart
      operationId: postCollectionResource-cart-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCart'
  /quotes/{id}:
    get:
      tags:
      - cart-entity-controller
      description: get-cart
      operationId: getItemResource-cart-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCart'
        "404":
          description: Not Found
    put:
      tags:
      - cart-entity-controller
      description: update-cart
      operationId: putItemResource-cart-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCart'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCart'
        "204":
          description: No Content
    delete:
      tags:
      - cart-entity-controller
      description: delete-cart
      operationId: deleteItemResource-cart-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/currency:
    get:
      tags:
      - cart-property-reference-controller
      description: get-currency-by-cart-Id
      operationId: followPropertyReference-cart-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cart-property-reference-controller
      description: update-currency-by-cart-Id
      operationId: createPropertyReference-cart-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-currency-by-cart-Id
      operationId: deletePropertyReference-cart-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/currency/{propertyId}:
    get:
      tags:
      - cart-property-reference-controller
      description: get-currency-by-cart-Id
      operationId: followPropertyReference-cart-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-currency-by-cart-Id
      operationId: deletePropertyReferenceId-cart-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/deliveryAddress:
    get:
      tags:
      - cart-property-reference-controller
      description: get-address-by-cart-Id
      operationId: followPropertyReference-cart-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cart-property-reference-controller
      description: update-address-by-cart-Id
      operationId: createPropertyReference-cart-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-address-by-cart-Id
      operationId: deletePropertyReference-cart-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/deliveryAddress/{propertyId}:
    get:
      tags:
      - cart-property-reference-controller
      description: get-address-by-cart-Id
      operationId: followPropertyReference-cart-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-address-by-cart-Id
      operationId: deletePropertyReferenceId-cart-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/discounts:
    get:
      tags:
      - cart-property-reference-controller
      description: get-discount-by-cart-Id
      operationId: followPropertyReference-cart-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelDiscount'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cart-property-reference-controller
      description: update-discount-by-cart-Id
      operationId: createPropertyReference-cart-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelDiscount'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelDiscount'
        "204":
          description: No Content
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-discount-by-cart-Id
      operationId: deletePropertyReference-cart-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/discounts/{propertyId}:
    get:
      tags:
      - cart-property-reference-controller
      description: get-discount-by-cart-Id
      operationId: followPropertyReference-cart-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelDiscount'
        "404":
          description: Not Found
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-discount-by-cart-Id
      operationId: deletePropertyReferenceId-cart-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/entries:
    get:
      tags:
      - cart-property-reference-controller
      description: get-cartentry-by-cart-Id
      operationId: followPropertyReference-cart-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartEntry'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cart-property-reference-controller
      description: update-cartentry-by-cart-Id
      operationId: createPropertyReference-cart-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartEntry'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartEntry'
        "204":
          description: No Content
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-cartentry-by-cart-Id
      operationId: deletePropertyReference-cart-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/entries/{propertyId}:
    get:
      tags:
      - cart-property-reference-controller
      description: get-cartentry-by-cart-Id
      operationId: followPropertyReference-cart-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartEntry'
        "404":
          description: Not Found
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-cartentry-by-cart-Id
      operationId: deletePropertyReferenceId-cart-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/paymentAddress:
    get:
      tags:
      - cart-property-reference-controller
      description: get-address-by-cart-Id
      operationId: followPropertyReference-cart-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cart-property-reference-controller
      description: update-address-by-cart-Id
      operationId: createPropertyReference-cart-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-address-by-cart-Id
      operationId: deletePropertyReference-cart-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/paymentAddress/{propertyId}:
    get:
      tags:
      - cart-property-reference-controller
      description: get-address-by-cart-Id
      operationId: followPropertyReference-cart-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-address-by-cart-Id
      operationId: deletePropertyReferenceId-cart-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/paymentInfo:
    get:
      tags:
      - cart-property-reference-controller
      description: get-paymentinfo-by-cart-Id
      operationId: followPropertyReference-cart-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cart-property-reference-controller
      description: update-paymentinfo-by-cart-Id
      operationId: createPropertyReference-cart-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-paymentinfo-by-cart-Id
      operationId: deletePropertyReference-cart-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/paymentInfo/{propertyId}:
    get:
      tags:
      - cart-property-reference-controller
      description: get-paymentinfo-by-cart-Id
      operationId: followPropertyReference-cart-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        "404":
          description: Not Found
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-paymentinfo-by-cart-Id
      operationId: deletePropertyReferenceId-cart-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/paymentTransactions:
    get:
      tags:
      - cart-property-reference-controller
      description: get-paymenttransaction-by-cart-Id
      operationId: followPropertyReference-cart-get_7_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentTransaction'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cart-property-reference-controller
      description: update-paymenttransaction-by-cart-Id
      operationId: createPropertyReference-cart-put_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentTransaction'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentTransaction'
        "204":
          description: No Content
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-paymenttransaction-by-cart-Id
      operationId: deletePropertyReference-cart-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/paymentTransactions/{propertyId}:
    get:
      tags:
      - cart-property-reference-controller
      description: get-paymenttransaction-by-cart-Id
      operationId: followPropertyReference-cart-get_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentTransaction'
        "404":
          description: Not Found
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-paymenttransaction-by-cart-Id
      operationId: deletePropertyReferenceId-cart-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/store:
    get:
      tags:
      - cart-property-reference-controller
      description: get-basestore-by-cart-Id
      operationId: followPropertyReference-cart-get_8_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cart-property-reference-controller
      description: update-basestore-by-cart-Id
      operationId: createPropertyReference-cart-put_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
        "204":
          description: No Content
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-basestore-by-cart-Id
      operationId: deletePropertyReference-cart-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/store/{propertyId}:
    get:
      tags:
      - cart-property-reference-controller
      description: get-basestore-by-cart-Id
      operationId: followPropertyReference-cart-get_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelBaseStore'
        "404":
          description: Not Found
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-basestore-by-cart-Id
      operationId: deletePropertyReferenceId-cart-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/user:
    get:
      tags:
      - cart-property-reference-controller
      description: get-user-by-cart-Id
      operationId: followPropertyReference-cart-get_9_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cart-property-reference-controller
      description: update-user-by-cart-Id
      operationId: createPropertyReference-cart-put_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-user-by-cart-Id
      operationId: deletePropertyReference-cart-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /quotes/{id}/user/{propertyId}:
    get:
      tags:
      - cart-property-reference-controller
      description: get-user-by-cart-Id
      operationId: followPropertyReference-cart-get_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    delete:
      tags:
      - cart-property-reference-controller
      description: delete-user-by-cart-Id
      operationId: deletePropertyReferenceId-cart-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /regions:
    get:
      tags:
      - region-entity-controller
      description: get-region
      operationId: getCollectionResource-region-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelRegion'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelRegion'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - region-entity-controller
      description: create-region
      operationId: postCollectionResource-region-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelRegion'
  /regions/search/findByCountry:
    get:
      tags:
      - region-search-controller
      operationId: executeSearch-region-get
      parameters:
      - name: country
        in: query
        schema:
          $ref: '#/components/schemas/Country'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelRegion'
        "404":
          description: Not Found
  /regions/search/findByIsocode:
    get:
      tags:
      - region-search-controller
      operationId: executeSearch-region-get_1
      parameters:
      - name: isocode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelRegion'
        "404":
          description: Not Found
  /regions/{id}:
    get:
      tags:
      - region-entity-controller
      description: get-region
      operationId: getItemResource-region-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelRegion'
        "404":
          description: Not Found
    put:
      tags:
      - region-entity-controller
      description: update-region
      operationId: putItemResource-region-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelRegion'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelRegion'
        "204":
          description: No Content
    delete:
      tags:
      - region-entity-controller
      description: delete-region
      operationId: deleteItemResource-region-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /regions/{id}/country:
    get:
      tags:
      - region-property-reference-controller
      description: get-country-by-region-Id
      operationId: followPropertyReference-region-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCountry'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - region-property-reference-controller
      description: update-country-by-region-Id
      operationId: createPropertyReference-region-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCountry'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCountry'
        "204":
          description: No Content
    delete:
      tags:
      - region-property-reference-controller
      description: delete-country-by-region-Id
      operationId: deletePropertyReference-region-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /regions/{id}/country/{propertyId}:
    get:
      tags:
      - region-property-reference-controller
      description: get-country-by-region-Id
      operationId: followPropertyReference-region-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCountry'
        "404":
          description: Not Found
    delete:
      tags:
      - region-property-reference-controller
      description: delete-country-by-region-Id
      operationId: deletePropertyReferenceId-region-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /stocks:
    get:
      tags:
      - stock-entity-controller
      description: get-stock
      operationId: getCollectionResource-stock-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelStock'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelStock'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - stock-entity-controller
      description: create-stock
      operationId: postCollectionResource-stock-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelStock'
  /stocks/search/findByProductCode:
    get:
      tags:
      - stock-search-controller
      operationId: executeSearch-stock-get
      parameters:
      - name: productCode
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelStock'
        "404":
          description: Not Found
  /stocks/{id}:
    get:
      tags:
      - stock-entity-controller
      description: get-stock
      operationId: getItemResource-stock-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelStock'
        "404":
          description: Not Found
    put:
      tags:
      - stock-entity-controller
      description: update-stock
      operationId: putItemResource-stock-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelStock'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelStock'
        "204":
          description: No Content
    delete:
      tags:
      - stock-entity-controller
      description: delete-stock
      operationId: deleteItemResource-stock-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /stocks/{id}/warehouse:
    get:
      tags:
      - stock-property-reference-controller
      description: get-warehouse-by-stock-Id
      operationId: followPropertyReference-stock-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelWarehouse'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - stock-property-reference-controller
      description: update-warehouse-by-stock-Id
      operationId: createPropertyReference-stock-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelWarehouse'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelWarehouse'
        "204":
          description: No Content
    delete:
      tags:
      - stock-property-reference-controller
      description: delete-warehouse-by-stock-Id
      operationId: deletePropertyReference-stock-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /stocks/{id}/warehouse/{propertyId}:
    get:
      tags:
      - stock-property-reference-controller
      description: get-warehouse-by-stock-Id
      operationId: followPropertyReference-stock-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelWarehouse'
        "404":
          description: Not Found
    delete:
      tags:
      - stock-property-reference-controller
      description: delete-warehouse-by-stock-Id
      operationId: deletePropertyReferenceId-stock-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /sync-logs:
    get:
      tags:
      - synchronization-log-entity-controller
      description: get-synchronizationlog
      operationId: getCollectionResource-synchronizationlog-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelSynchronizationLog'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelSynchronizationLog'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - synchronization-log-entity-controller
      description: create-synchronizationlog
      operationId: postCollectionResource-synchronizationlog-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynchronizationLogRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelSynchronizationLog'
  /sync-logs/search/findByActionType:
    get:
      tags:
      - synchronization-log-search-controller
      operationId: executeSearch-synchronizationlog-get
      parameters:
      - name: actionType
        in: query
        schema:
          type: string
          enum:
          - CREATE
          - UPDATE
          - DELETE
          - LINKED
          - UNLINKED
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelSynchronizationLog'
        "404":
          description: Not Found
  /sync-logs/search/removeByArchivedIsTrue:
    get:
      tags:
      - synchronization-log-search-controller
      operationId: executeSearch-synchronizationlog-get_1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
        "404":
          description: Not Found
  /sync-logs/{id}:
    get:
      tags:
      - synchronization-log-entity-controller
      description: get-synchronizationlog
      operationId: getItemResource-synchronizationlog-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelSynchronizationLog'
        "404":
          description: Not Found
    put:
      tags:
      - synchronization-log-entity-controller
      description: update-synchronizationlog
      operationId: putItemResource-synchronizationlog-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynchronizationLogRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelSynchronizationLog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelSynchronizationLog'
        "204":
          description: No Content
    delete:
      tags:
      - synchronization-log-entity-controller
      description: delete-synchronizationlog
      operationId: deleteItemResource-synchronizationlog-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /tax-rows:
    get:
      tags:
      - tax-row-entity-controller
      description: get-taxrow
      operationId: getCollectionResource-taxrow-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTaxRow'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTaxRow'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - tax-row-entity-controller
      description: create-taxrow
      operationId: postCollectionResource-taxrow-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRowRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTaxRow'
  /tax-rows/{id}:
    get:
      tags:
      - tax-row-entity-controller
      description: get-taxrow
      operationId: getItemResource-taxrow-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTaxRow'
        "404":
          description: Not Found
    put:
      tags:
      - tax-row-entity-controller
      description: update-taxrow
      operationId: putItemResource-taxrow-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRowRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTaxRow'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTaxRow'
        "204":
          description: No Content
    delete:
      tags:
      - tax-row-entity-controller
      description: delete-taxrow
      operationId: deleteItemResource-taxrow-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /tax-rows/{id}/catalog:
    get:
      tags:
      - tax-row-property-reference-controller
      description: get-catalog-by-taxrow-Id
      operationId: followPropertyReference-taxrow-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - tax-row-property-reference-controller
      description: update-catalog-by-taxrow-Id
      operationId: createPropertyReference-taxrow-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - tax-row-property-reference-controller
      description: delete-catalog-by-taxrow-Id
      operationId: deletePropertyReference-taxrow-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /tax-rows/{id}/catalog/{propertyId}:
    get:
      tags:
      - tax-row-property-reference-controller
      description: get-catalog-by-taxrow-Id
      operationId: followPropertyReference-taxrow-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCatalog'
        "404":
          description: Not Found
    delete:
      tags:
      - tax-row-property-reference-controller
      description: delete-catalog-by-taxrow-Id
      operationId: deletePropertyReferenceId-taxrow-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /tax-rows/{id}/currency:
    get:
      tags:
      - tax-row-property-reference-controller
      description: get-currency-by-taxrow-Id
      operationId: followPropertyReference-taxrow-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - tax-row-property-reference-controller
      description: update-currency-by-taxrow-Id
      operationId: createPropertyReference-taxrow-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - tax-row-property-reference-controller
      description: delete-currency-by-taxrow-Id
      operationId: deletePropertyReference-taxrow-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /tax-rows/{id}/currency/{propertyId}:
    get:
      tags:
      - tax-row-property-reference-controller
      description: get-currency-by-taxrow-Id
      operationId: followPropertyReference-taxrow-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - tax-row-property-reference-controller
      description: delete-currency-by-taxrow-Id
      operationId: deletePropertyReferenceId-taxrow-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /tax-rows/{id}/product:
    get:
      tags:
      - tax-row-property-reference-controller
      description: get-product-by-taxrow-Id
      operationId: followPropertyReference-taxrow-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - tax-row-property-reference-controller
      description: update-product-by-taxrow-Id
      operationId: createPropertyReference-taxrow-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "204":
          description: No Content
    delete:
      tags:
      - tax-row-property-reference-controller
      description: delete-product-by-taxrow-Id
      operationId: deletePropertyReference-taxrow-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /tax-rows/{id}/product/{propertyId}:
    get:
      tags:
      - tax-row-property-reference-controller
      description: get-product-by-taxrow-Id
      operationId: followPropertyReference-taxrow-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProduct'
        "404":
          description: Not Found
    delete:
      tags:
      - tax-row-property-reference-controller
      description: delete-product-by-taxrow-Id
      operationId: deletePropertyReferenceId-taxrow-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /tax-rows/{id}/productGroup:
    get:
      tags:
      - tax-row-property-reference-controller
      description: get-producttaxgroup-by-taxrow-Id
      operationId: followPropertyReference-taxrow-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductTaxGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - tax-row-property-reference-controller
      description: update-producttaxgroup-by-taxrow-Id
      operationId: createPropertyReference-taxrow-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductTaxGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductTaxGroup'
        "204":
          description: No Content
    delete:
      tags:
      - tax-row-property-reference-controller
      description: delete-producttaxgroup-by-taxrow-Id
      operationId: deletePropertyReference-taxrow-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /tax-rows/{id}/productGroup/{propertyId}:
    get:
      tags:
      - tax-row-property-reference-controller
      description: get-producttaxgroup-by-taxrow-Id
      operationId: followPropertyReference-taxrow-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelProductTaxGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - tax-row-property-reference-controller
      description: delete-producttaxgroup-by-taxrow-Id
      operationId: deletePropertyReferenceId-taxrow-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /tax-rows/{id}/tax:
    get:
      tags:
      - tax-row-property-reference-controller
      description: get-tax-by-taxrow-Id
      operationId: followPropertyReference-taxrow-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTax'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - tax-row-property-reference-controller
      description: update-tax-by-taxrow-Id
      operationId: createPropertyReference-taxrow-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTax'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTax'
        "204":
          description: No Content
    delete:
      tags:
      - tax-row-property-reference-controller
      description: delete-tax-by-taxrow-Id
      operationId: deletePropertyReference-taxrow-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /tax-rows/{id}/tax/{propertyId}:
    get:
      tags:
      - tax-row-property-reference-controller
      description: get-tax-by-taxrow-Id
      operationId: followPropertyReference-taxrow-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTax'
        "404":
          description: Not Found
    delete:
      tags:
      - tax-row-property-reference-controller
      description: delete-tax-by-taxrow-Id
      operationId: deletePropertyReferenceId-taxrow-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /tax-rows/{id}/userGroup:
    get:
      tags:
      - tax-row-property-reference-controller
      description: get-usertaxgroup-by-taxrow-Id
      operationId: followPropertyReference-taxrow-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - tax-row-property-reference-controller
      description: update-usertaxgroup-by-taxrow-Id
      operationId: createPropertyReference-taxrow-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "204":
          description: No Content
    delete:
      tags:
      - tax-row-property-reference-controller
      description: delete-usertaxgroup-by-taxrow-Id
      operationId: deletePropertyReference-taxrow-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /tax-rows/{id}/userGroup/{propertyId}:
    get:
      tags:
      - tax-row-property-reference-controller
      description: get-usertaxgroup-by-taxrow-Id
      operationId: followPropertyReference-taxrow-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - tax-row-property-reference-controller
      description: delete-usertaxgroup-by-taxrow-Id
      operationId: deletePropertyReferenceId-taxrow-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /taxes:
    get:
      tags:
      - tax-entity-controller
      description: get-tax
      operationId: getCollectionResource-tax-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTax'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTax'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - tax-entity-controller
      description: create-tax
      operationId: postCollectionResource-tax-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTax'
  /taxes/{id}:
    get:
      tags:
      - tax-entity-controller
      description: get-tax
      operationId: getItemResource-tax-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTax'
        "404":
          description: Not Found
    put:
      tags:
      - tax-entity-controller
      description: update-tax
      operationId: putItemResource-tax-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTax'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTax'
        "204":
          description: No Content
    delete:
      tags:
      - tax-entity-controller
      description: delete-tax
      operationId: deleteItemResource-tax-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /taxes/{id}/currency:
    get:
      tags:
      - tax-property-reference-controller
      description: get-currency-by-tax-Id
      operationId: followPropertyReference-tax-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - tax-property-reference-controller
      description: update-currency-by-tax-Id
      operationId: createPropertyReference-tax-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - tax-property-reference-controller
      description: delete-currency-by-tax-Id
      operationId: deletePropertyReference-tax-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /taxes/{id}/currency/{propertyId}:
    get:
      tags:
      - tax-property-reference-controller
      description: get-currency-by-tax-Id
      operationId: followPropertyReference-tax-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - tax-property-reference-controller
      description: delete-currency-by-tax-Id
      operationId: deletePropertyReferenceId-tax-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /titles:
    get:
      tags:
      - title-entity-controller
      description: get-title
      operationId: getCollectionResource-title-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTitle'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTitle'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - title-entity-controller
      description: create-title
      operationId: postCollectionResource-title-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TitleRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
  /titles/{id}:
    get:
      tags:
      - title-entity-controller
      description: get-title
      operationId: getItemResource-title-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
        "404":
          description: Not Found
    put:
      tags:
      - title-entity-controller
      description: update-title
      operationId: putItemResource-title-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TitleRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelTitle'
        "204":
          description: No Content
    delete:
      tags:
      - title-entity-controller
      description: delete-title
      operationId: deleteItemResource-title-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-discount-groups:
    get:
      tags:
      - user-discount-group-entity-controller
      description: get-userdiscountgroup
      operationId: getCollectionResource-userdiscountgroup-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUserDiscountGroup'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUserDiscountGroup'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - user-discount-group-entity-controller
      description: create-userdiscountgroup
      operationId: postCollectionResource-userdiscountgroup-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDiscountGroupRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
  /user-discount-groups/{id}:
    get:
      tags:
      - user-discount-group-entity-controller
      description: get-userdiscountgroup
      operationId: getItemResource-userdiscountgroup-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "404":
          description: Not Found
    put:
      tags:
      - user-discount-group-entity-controller
      description: update-userdiscountgroup
      operationId: putItemResource-userdiscountgroup-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDiscountGroupRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "204":
          description: No Content
    delete:
      tags:
      - user-discount-group-entity-controller
      description: delete-userdiscountgroup
      operationId: deleteItemResource-userdiscountgroup-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups:
    get:
      tags:
      - user-group-entity-controller
      description: get-usergroup
      operationId: getCollectionResource-usergroup-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUserGroup'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUserGroup'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - user-group-entity-controller
      description: create-usergroup
      operationId: postCollectionResource-usergroup-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserGroup'
  /user-groups/{id}:
    get:
      tags:
      - user-group-entity-controller
      description: get-usergroup
      operationId: getItemResource-usergroup-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserGroup'
        "404":
          description: Not Found
    put:
      tags:
      - user-group-entity-controller
      description: update-usergroup
      operationId: putItemResource-usergroup-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserGroup'
        "204":
          description: No Content
    delete:
      tags:
      - user-group-entity-controller
      description: delete-usergroup
      operationId: deleteItemResource-usergroup-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/accessibleCatalogs:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-catalog-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-group-property-reference-controller
      description: update-catalog-by-usergroup-Id
      operationId: createPropertyReference-usergroup-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-catalog-by-usergroup-Id
      operationId: deletePropertyReference-usergroup-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/accessibleCatalogs/{propertyId}:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-catalog-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "404":
          description: Not Found
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-catalog-by-usergroup-Id
      operationId: deletePropertyReferenceId-usergroup-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/accessibleCategories:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-category-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-group-property-reference-controller
      description: update-category-by-usergroup-Id
      operationId: createPropertyReference-usergroup-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "204":
          description: No Content
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-category-by-usergroup-Id
      operationId: deletePropertyReference-usergroup-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/accessibleCategories/{propertyId}:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-category-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "404":
          description: Not Found
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-category-by-usergroup-Id
      operationId: deletePropertyReferenceId-usergroup-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/addresses:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-address-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-group-property-reference-controller
      description: update-address-by-usergroup-Id
      operationId: createPropertyReference-usergroup-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-address-by-usergroup-Id
      operationId: deletePropertyReference-usergroup-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/addresses/{propertyId}:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-address-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-address-by-usergroup-Id
      operationId: deletePropertyReferenceId-usergroup-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/billingAddress:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-address-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-group-property-reference-controller
      description: update-address-by-usergroup-Id
      operationId: createPropertyReference-usergroup-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-address-by-usergroup-Id
      operationId: deletePropertyReference-usergroup-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/billingAddress/{propertyId}:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-address-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-address-by-usergroup-Id
      operationId: deletePropertyReferenceId-usergroup-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/groups:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-usergroup-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-group-property-reference-controller
      description: update-usergroup-by-usergroup-Id
      operationId: createPropertyReference-usergroup-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "204":
          description: No Content
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-usergroup-by-usergroup-Id
      operationId: deletePropertyReference-usergroup-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/groups/{propertyId}:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-usergroup-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-usergroup-by-usergroup-Id
      operationId: deletePropertyReferenceId-usergroup-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/members:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-principal-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-group-property-reference-controller
      description: update-principal-by-usergroup-Id
      operationId: createPropertyReference-usergroup-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
        "204":
          description: No Content
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-principal-by-usergroup-Id
      operationId: deletePropertyReference-usergroup-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/members/{propertyId}:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-principal-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPrincipal'
        "404":
          description: Not Found
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-principal-by-usergroup-Id
      operationId: deletePropertyReferenceId-usergroup-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/profilePicture:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-media-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_7_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-group-property-reference-controller
      description: update-media-by-usergroup-Id
      operationId: createPropertyReference-usergroup-put_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "204":
          description: No Content
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-media-by-usergroup-Id
      operationId: deletePropertyReference-usergroup-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/profilePicture/{propertyId}:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-media-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "404":
          description: Not Found
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-media-by-usergroup-Id
      operationId: deletePropertyReferenceId-usergroup-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/shippingAddress:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-address-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_8_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-group-property-reference-controller
      description: update-address-by-usergroup-Id
      operationId: createPropertyReference-usergroup-put_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-address-by-usergroup-Id
      operationId: deletePropertyReference-usergroup-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/shippingAddress/{propertyId}:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-address-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-address-by-usergroup-Id
      operationId: deletePropertyReferenceId-usergroup-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/userDiscountGroup:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-userdiscountgroup-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_9_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-group-property-reference-controller
      description: update-userdiscountgroup-by-usergroup-Id
      operationId: createPropertyReference-usergroup-put_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "204":
          description: No Content
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-userdiscountgroup-by-usergroup-Id
      operationId: deletePropertyReference-usergroup-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/userDiscountGroup/{propertyId}:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-userdiscountgroup-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-userdiscountgroup-by-usergroup-Id
      operationId: deletePropertyReferenceId-usergroup-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/userPriceGroup:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-userpricegroup-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_10_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-group-property-reference-controller
      description: update-userpricegroup-by-usergroup-Id
      operationId: createPropertyReference-usergroup-put_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "204":
          description: No Content
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-userpricegroup-by-usergroup-Id
      operationId: deletePropertyReference-usergroup-delete_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/userPriceGroup/{propertyId}:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-userpricegroup-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-userpricegroup-by-usergroup-Id
      operationId: deletePropertyReferenceId-usergroup-delete_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/userTaxGroup:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-usertaxgroup-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_11_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-group-property-reference-controller
      description: update-usertaxgroup-by-usergroup-Id
      operationId: createPropertyReference-usergroup-put_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "204":
          description: No Content
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-usertaxgroup-by-usergroup-Id
      operationId: deletePropertyReference-usergroup-delete_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-groups/{id}/userTaxGroup/{propertyId}:
    get:
      tags:
      - user-group-property-reference-controller
      description: get-usertaxgroup-by-usergroup-Id
      operationId: followPropertyReference-usergroup-get_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - user-group-property-reference-controller
      description: delete-usertaxgroup-by-usergroup-Id
      operationId: deletePropertyReferenceId-usergroup-delete_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-price-groups:
    get:
      tags:
      - user-price-group-entity-controller
      description: get-userpricegroup
      operationId: getCollectionResource-userpricegroup-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUserPriceGroup'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUserPriceGroup'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - user-price-group-entity-controller
      description: create-userpricegroup
      operationId: postCollectionResource-userpricegroup-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPriceGroupRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
  /user-price-groups/{id}:
    get:
      tags:
      - user-price-group-entity-controller
      description: get-userpricegroup
      operationId: getItemResource-userpricegroup-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "404":
          description: Not Found
    put:
      tags:
      - user-price-group-entity-controller
      description: update-userpricegroup
      operationId: putItemResource-userpricegroup-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPriceGroupRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "204":
          description: No Content
    delete:
      tags:
      - user-price-group-entity-controller
      description: delete-userpricegroup
      operationId: deleteItemResource-userpricegroup-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /user-tax-groups:
    get:
      tags:
      - user-tax-group-entity-controller
      description: get-usertaxgroup
      operationId: getCollectionResource-usertaxgroup-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUserTaxGroup'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUserTaxGroup'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - user-tax-group-entity-controller
      description: create-usertaxgroup
      operationId: postCollectionResource-usertaxgroup-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTaxGroupRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
  /user-tax-groups/{id}:
    get:
      tags:
      - user-tax-group-entity-controller
      description: get-usertaxgroup
      operationId: getItemResource-usertaxgroup-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "404":
          description: Not Found
    put:
      tags:
      - user-tax-group-entity-controller
      description: update-usertaxgroup
      operationId: putItemResource-usertaxgroup-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTaxGroupRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "204":
          description: No Content
    delete:
      tags:
      - user-tax-group-entity-controller
      description: delete-usertaxgroup
      operationId: deleteItemResource-usertaxgroup-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users:
    get:
      tags:
      - user-entity-controller
      description: get-user
      operationId: getCollectionResource-user-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUser'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUser'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - user-entity-controller
      description: create-user
      operationId: postCollectionResource-user-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
  /users/search/findByUid:
    get:
      tags:
      - user-search-controller
      operationId: executeSearch-user-get
      parameters:
      - name: uid
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
  /users/{id}:
    get:
      tags:
      - user-entity-controller
      description: get-user
      operationId: getItemResource-user-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    put:
      tags:
      - user-entity-controller
      description: update-user
      operationId: putItemResource-user-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
      - user-entity-controller
      description: delete-user
      operationId: deleteItemResource-user-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/accessibleCatalogs:
    get:
      tags:
      - user-property-reference-controller
      description: get-catalog-by-user-Id
      operationId: followPropertyReference-user-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-catalog-by-user-Id
      operationId: createPropertyReference-user-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-catalog-by-user-Id
      operationId: deletePropertyReference-user-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/accessibleCatalogs/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-catalog-by-user-Id
      operationId: followPropertyReference-user-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCatalog'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-catalog-by-user-Id
      operationId: deletePropertyReferenceId-user-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/accessibleCategories:
    get:
      tags:
      - user-property-reference-controller
      description: get-category-by-user-Id
      operationId: followPropertyReference-user-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-category-by-user-Id
      operationId: createPropertyReference-user-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-category-by-user-Id
      operationId: deletePropertyReference-user-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/accessibleCategories/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-category-by-user-Id
      operationId: followPropertyReference-user-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCategory'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-category-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/addresses:
    get:
      tags:
      - user-property-reference-controller
      description: get-address-by-user-Id
      operationId: followPropertyReference-user-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-address-by-user-Id
      operationId: createPropertyReference-user-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-address-by-user-Id
      operationId: deletePropertyReference-user-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/addresses/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-address-by-user-Id
      operationId: followPropertyReference-user-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-address-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/billingAddress:
    get:
      tags:
      - user-property-reference-controller
      description: get-address-by-user-Id
      operationId: followPropertyReference-user-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-address-by-user-Id
      operationId: createPropertyReference-user-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-address-by-user-Id
      operationId: deletePropertyReference-user-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/billingAddress/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-address-by-user-Id
      operationId: followPropertyReference-user-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-address-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/carts:
    get:
      tags:
      - user-property-reference-controller
      description: get-cart-by-user-Id
      operationId: followPropertyReference-user-get_5_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-cart-by-user-Id
      operationId: createPropertyReference-user-put_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-cart-by-user-Id
      operationId: deletePropertyReference-user-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/carts/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-cart-by-user-Id
      operationId: followPropertyReference-user-get_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelCart'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-cart-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/discountGroup:
    get:
      tags:
      - user-property-reference-controller
      description: get-userdiscountgroup-by-user-Id
      operationId: followPropertyReference-user-get_6_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-userdiscountgroup-by-user-Id
      operationId: createPropertyReference-user-put_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-userdiscountgroup-by-user-Id
      operationId: deletePropertyReference-user-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/discountGroup/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-userdiscountgroup-by-user-Id
      operationId: followPropertyReference-user-get_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-userdiscountgroup-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/groups:
    get:
      tags:
      - user-property-reference-controller
      description: get-usergroup-by-user-Id
      operationId: followPropertyReference-user-get_7_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-usergroup-by-user-Id
      operationId: createPropertyReference-user-put_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-usergroup-by-user-Id
      operationId: deletePropertyReference-user-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/groups/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-usergroup-by-user-Id
      operationId: followPropertyReference-user-get_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-usergroup-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/orders:
    get:
      tags:
      - user-property-reference-controller
      description: get-order-by-user-Id
      operationId: followPropertyReference-user-get_8_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-order-by-user-Id
      operationId: createPropertyReference-user-put_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-order-by-user-Id
      operationId: deletePropertyReference-user-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/orders/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-order-by-user-Id
      operationId: followPropertyReference-user-get_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOrder'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-order-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/paymentInfos:
    get:
      tags:
      - user-property-reference-controller
      description: get-paymentinfo-by-user-Id
      operationId: followPropertyReference-user-get_9_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-paymentinfo-by-user-Id
      operationId: createPropertyReference-user-put_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-paymentinfo-by-user-Id
      operationId: deletePropertyReference-user-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/paymentInfos/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-paymentinfo-by-user-Id
      operationId: followPropertyReference-user-get_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPaymentInfo'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-paymentinfo-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/priceGroup:
    get:
      tags:
      - user-property-reference-controller
      description: get-userpricegroup-by-user-Id
      operationId: followPropertyReference-user-get_10_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-userpricegroup-by-user-Id
      operationId: createPropertyReference-user-put_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-userpricegroup-by-user-Id
      operationId: deletePropertyReference-user-delete_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/priceGroup/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-userpricegroup-by-user-Id
      operationId: followPropertyReference-user-get_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-userpricegroup-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/profilePicture:
    get:
      tags:
      - user-property-reference-controller
      description: get-media-by-user-Id
      operationId: followPropertyReference-user-get_11_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-media-by-user-Id
      operationId: createPropertyReference-user-put_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-media-by-user-Id
      operationId: deletePropertyReference-user-delete_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/profilePicture/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-media-by-user-Id
      operationId: followPropertyReference-user-get_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelMedia'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-media-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/sessionCurrency:
    get:
      tags:
      - user-property-reference-controller
      description: get-currency-by-user-Id
      operationId: followPropertyReference-user-get_12_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-currency-by-user-Id
      operationId: createPropertyReference-user-put_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-currency-by-user-Id
      operationId: deletePropertyReference-user-delete_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/sessionCurrency/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-currency-by-user-Id
      operationId: followPropertyReference-user-get_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelCurrency'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-currency-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/sessionLanguage:
    get:
      tags:
      - user-property-reference-controller
      description: get-language-by-user-Id
      operationId: followPropertyReference-user-get_13_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-language-by-user-Id
      operationId: createPropertyReference-user-put_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-language-by-user-Id
      operationId: deletePropertyReference-user-delete_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/sessionLanguage/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-language-by-user-Id
      operationId: followPropertyReference-user-get_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-language-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/shippingAddress:
    get:
      tags:
      - user-property-reference-controller
      description: get-address-by-user-Id
      operationId: followPropertyReference-user-get_14_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-address-by-user-Id
      operationId: createPropertyReference-user-put_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-address-by-user-Id
      operationId: deletePropertyReference-user-delete_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/shippingAddress/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-address-by-user-Id
      operationId: followPropertyReference-user-get_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelAddress'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-address-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/taxGroup:
    get:
      tags:
      - user-property-reference-controller
      description: get-usertaxgroup-by-user-Id
      operationId: followPropertyReference-user-get_15_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - user-property-reference-controller
      description: update-usertaxgroup-by-user-Id
      operationId: createPropertyReference-user-put_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "204":
          description: No Content
    delete:
      tags:
      - user-property-reference-controller
      description: delete-usertaxgroup-by-user-Id
      operationId: deletePropertyReference-user-delete_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /users/{id}/taxGroup/{propertyId}:
    get:
      tags:
      - user-property-reference-controller
      description: get-usertaxgroup-by-user-Id
      operationId: followPropertyReference-user-get_15
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - user-property-reference-controller
      description: delete-usertaxgroup-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_14
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /variation-options:
    get:
      tags:
      - variation-option-entity-controller
      description: get-variationoption
      operationId: getCollectionResource-variationoption-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelVariationOption'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelVariationOption'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - variation-option-entity-controller
      description: create-variationoption
      operationId: postCollectionResource-variationoption-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariationOptionRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariationOption'
  /variation-options/search/findByCode:
    get:
      tags:
      - variation-option-search-controller
      operationId: executeSearch-variationoption-get
      parameters:
      - name: code
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariationOption'
        "404":
          description: Not Found
  /variation-options/search/findByExternalIds:
    get:
      tags:
      - variation-option-search-controller
      operationId: executeSearch-variationoption-get_1
      parameters:
      - name: externalIds
        in: query
        schema:
          type: array
          items:
            type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelVariationOption'
        "404":
          description: Not Found
  /variation-options/search/findByVariation:
    get:
      tags:
      - variation-option-search-controller
      operationId: executeSearch-variationoption-get_2
      parameters:
      - name: variation
        in: query
        schema:
          $ref: '#/components/schemas/Variation'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelVariationOption'
        "404":
          description: Not Found
  /variation-options/{id}:
    get:
      tags:
      - variation-option-entity-controller
      description: get-variationoption
      operationId: getItemResource-variationoption-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariationOption'
        "404":
          description: Not Found
    put:
      tags:
      - variation-option-entity-controller
      description: update-variationoption
      operationId: putItemResource-variationoption-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariationOptionRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariationOption'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariationOption'
        "204":
          description: No Content
    delete:
      tags:
      - variation-option-entity-controller
      description: delete-variationoption
      operationId: deleteItemResource-variationoption-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /variation-options/{id}/variantProducts:
    get:
      tags:
      - variation-option-property-reference-controller
      description: get-variantproduct-by-variationoption-Id
      operationId: followPropertyReference-variationoption-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariantProduct'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - variation-option-property-reference-controller
      description: update-variantproduct-by-variationoption-Id
      operationId: createPropertyReference-variationoption-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariantProduct'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariantProduct'
        "204":
          description: No Content
    delete:
      tags:
      - variation-option-property-reference-controller
      description: delete-variantproduct-by-variationoption-Id
      operationId: deletePropertyReference-variationoption-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /variation-options/{id}/variantProducts/{propertyId}:
    get:
      tags:
      - variation-option-property-reference-controller
      description: get-variantproduct-by-variationoption-Id
      operationId: followPropertyReference-variationoption-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariantProduct'
        "404":
          description: Not Found
    delete:
      tags:
      - variation-option-property-reference-controller
      description: delete-variantproduct-by-variationoption-Id
      operationId: deletePropertyReferenceId-variationoption-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /variation-options/{id}/variation:
    get:
      tags:
      - variation-option-property-reference-controller
      description: get-variation-by-variationoption-Id
      operationId: followPropertyReference-variationoption-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariation'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - variation-option-property-reference-controller
      description: update-variation-by-variationoption-Id
      operationId: createPropertyReference-variationoption-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariation'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariation'
        "204":
          description: No Content
    delete:
      tags:
      - variation-option-property-reference-controller
      description: delete-variation-by-variationoption-Id
      operationId: deletePropertyReference-variationoption-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /variation-options/{id}/variation/{propertyId}:
    get:
      tags:
      - variation-option-property-reference-controller
      description: get-variation-by-variationoption-Id
      operationId: followPropertyReference-variationoption-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariation'
        "404":
          description: Not Found
    delete:
      tags:
      - variation-option-property-reference-controller
      description: delete-variation-by-variationoption-Id
      operationId: deletePropertyReferenceId-variationoption-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /variations:
    get:
      tags:
      - variation-entity-controller
      description: get-variation
      operationId: getCollectionResource-variation-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelVariation'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelVariation'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - variation-entity-controller
      description: create-variation
      operationId: postCollectionResource-variation-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariationRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariation'
  /variations/search/findByCode:
    get:
      tags:
      - variation-search-controller
      operationId: executeSearch-variation-get
      parameters:
      - name: code
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariation'
        "404":
          description: Not Found
  /variations/search/findByExternalIds:
    get:
      tags:
      - variation-search-controller
      operationId: executeSearch-variation-get_1
      parameters:
      - name: externalIds
        in: query
        schema:
          type: array
          items:
            type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelVariation'
        "404":
          description: Not Found
  /variations/{id}:
    get:
      tags:
      - variation-entity-controller
      description: get-variation
      operationId: getItemResource-variation-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariation'
        "404":
          description: Not Found
    put:
      tags:
      - variation-entity-controller
      description: update-variation
      operationId: putItemResource-variation-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariationRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariation'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelVariation'
        "204":
          description: No Content
    delete:
      tags:
      - variation-entity-controller
      description: delete-variation
      operationId: deleteItemResource-variation-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /variations/{id}/options:
    get:
      tags:
      - variation-property-reference-controller
      description: get-variationoption-by-variation-Id
      operationId: followPropertyReference-variation-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariationOption'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - variation-property-reference-controller
      description: update-variationoption-by-variation-Id
      operationId: createPropertyReference-variation-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariationOption'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariationOption'
        "204":
          description: No Content
    delete:
      tags:
      - variation-property-reference-controller
      description: delete-variationoption-by-variation-Id
      operationId: deletePropertyReference-variation-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /variations/{id}/options/{propertyId}:
    get:
      tags:
      - variation-property-reference-controller
      description: get-variationoption-by-variation-Id
      operationId: followPropertyReference-variation-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelVariationOption'
        "404":
          description: Not Found
    delete:
      tags:
      - variation-property-reference-controller
      description: delete-variationoption-by-variation-Id
      operationId: deletePropertyReferenceId-variation-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /variations/{id}/products:
    get:
      tags:
      - variation-property-reference-controller
      description: get-product-by-variation-Id
      operationId: followPropertyReference-variation-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelProduct'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - variation-property-reference-controller
      description: update-product-by-variation-Id
      operationId: createPropertyReference-variation-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelProduct'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelProduct'
        "204":
          description: No Content
    delete:
      tags:
      - variation-property-reference-controller
      description: delete-product-by-variation-Id
      operationId: deletePropertyReference-variation-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /variations/{id}/products/{propertyId}:
    get:
      tags:
      - variation-property-reference-controller
      description: get-product-by-variation-Id
      operationId: followPropertyReference-variation-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelProduct'
        "404":
          description: Not Found
    delete:
      tags:
      - variation-property-reference-controller
      description: delete-product-by-variation-Id
      operationId: deletePropertyReferenceId-variation-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /warehouses:
    get:
      tags:
      - warehouse-entity-controller
      description: get-warehouse
      operationId: getCollectionResource-warehouse-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelWarehouse'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelWarehouse'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - warehouse-entity-controller
      description: create-warehouse
      operationId: postCollectionResource-warehouse-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WarehouseRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelWarehouse'
  /warehouses/{id}:
    get:
      tags:
      - warehouse-entity-controller
      description: get-warehouse
      operationId: getItemResource-warehouse-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelWarehouse'
        "404":
          description: Not Found
    put:
      tags:
      - warehouse-entity-controller
      description: update-warehouse
      operationId: putItemResource-warehouse-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WarehouseRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelWarehouse'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelWarehouse'
        "204":
          description: No Content
    delete:
      tags:
      - warehouse-entity-controller
      description: delete-warehouse
      operationId: deleteItemResource-warehouse-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /warehouses/{id}/baseStores:
    get:
      tags:
      - warehouse-property-reference-controller
      description: get-basestore-by-warehouse-Id
      operationId: followPropertyReference-warehouse-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelBaseStore'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - warehouse-property-reference-controller
      description: update-basestore-by-warehouse-Id
      operationId: createPropertyReference-warehouse-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelBaseStore'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelBaseStore'
        "204":
          description: No Content
    delete:
      tags:
      - warehouse-property-reference-controller
      description: delete-basestore-by-warehouse-Id
      operationId: deletePropertyReference-warehouse-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /warehouses/{id}/baseStores/{propertyId}:
    get:
      tags:
      - warehouse-property-reference-controller
      description: get-basestore-by-warehouse-Id
      operationId: followPropertyReference-warehouse-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelBaseStore'
        "404":
          description: Not Found
    delete:
      tags:
      - warehouse-property-reference-controller
      description: delete-basestore-by-warehouse-Id
      operationId: deletePropertyReferenceId-warehouse-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /warehouses/{id}/pointOfServices:
    get:
      tags:
      - warehouse-property-reference-controller
      description: get-pointofservice-by-warehouse-Id
      operationId: followPropertyReference-warehouse-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPointOfService'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - warehouse-property-reference-controller
      description: update-pointofservice-by-warehouse-Id
      operationId: createPropertyReference-warehouse-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPointOfService'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPointOfService'
        "204":
          description: No Content
    delete:
      tags:
      - warehouse-property-reference-controller
      description: delete-pointofservice-by-warehouse-Id
      operationId: deletePropertyReference-warehouse-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /warehouses/{id}/pointOfServices/{propertyId}:
    get:
      tags:
      - warehouse-property-reference-controller
      description: get-pointofservice-by-warehouse-Id
      operationId: followPropertyReference-warehouse-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelPointOfService'
        "404":
          description: Not Found
    delete:
      tags:
      - warehouse-property-reference-controller
      description: delete-pointofservice-by-warehouse-Id
      operationId: deletePropertyReferenceId-warehouse-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /warehouses/{id}/stocks:
    get:
      tags:
      - warehouse-property-reference-controller
      description: get-stock-by-warehouse-Id
      operationId: followPropertyReference-warehouse-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelStock'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - warehouse-property-reference-controller
      description: update-stock-by-warehouse-Id
      operationId: createPropertyReference-warehouse-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelStock'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelStock'
        "204":
          description: No Content
    delete:
      tags:
      - warehouse-property-reference-controller
      description: delete-stock-by-warehouse-Id
      operationId: deletePropertyReference-warehouse-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /warehouses/{id}/stocks/{propertyId}:
    get:
      tags:
      - warehouse-property-reference-controller
      description: get-stock-by-warehouse-Id
      operationId: followPropertyReference-warehouse-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelStock'
        "404":
          description: Not Found
    delete:
      tags:
      - warehouse-property-reference-controller
      description: delete-stock-by-warehouse-Id
      operationId: deletePropertyReferenceId-warehouse-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /cronjobs/{jobId}/stop:
    put:
      tags:
      - cron-job-controller
      operationId: stopJob
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractResponse'
  /cronjobs/{jobId}/start:
    put:
      tags:
      - cron-job-controller
      operationId: startJob
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractResponse'
  /cronjobs/{jobId}/resume:
    put:
      tags:
      - cron-job-controller
      operationId: resumeJob
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractResponse'
  /cronjobs/{jobId}/pause:
    put:
      tags:
      - cron-job-controller
      operationId: pauseJob
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractResponse'
  /health:
    get:
      tags:
      - health-check-controller
      operationId: checkHealth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    AbstractJsonSchemaPropertyObject:
      type: object
      properties:
        title:
          type: string
        readOnly:
          type: boolean
    Item:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
    JsonSchema:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Item'
        type:
          type: string
        $schema:
          type: string
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    RepresentationModelObject:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    AbstractOrder:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        calculated:
          type: boolean
        date:
          type: string
          format: date-time
        deliveryCost:
          type: number
          format: double
        deliveryStatus:
          type: string
          enum:
          - NOTSHIPPED
          - PARTSHIPPED
          - SHIPPED
        name:
          type: string
        description:
          type: string
        expirationTime:
          type: string
          format: date-time
        net:
          type: boolean
        paymentCost:
          type: number
          format: double
        paymentStatus:
          type: string
          enum:
          - NOTPAID
          - PARTPAID
          - PAID
        orderStatus:
          type: string
          enum:
          - CREATED
          - ON_VALIDATION
          - COMPLETED
          - CANCELLED
        totalPrice:
          type: number
          format: double
        totalDiscounts:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        subtotal:
          type: number
          format: double
        discountsIncludeDeliveryCost:
          type: boolean
        discountsIncludePaymentCost:
          type: boolean
        deliveryNote:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        deliveryAddress:
          $ref: '#/components/schemas/Address'
        paymentAddress:
          $ref: '#/components/schemas/Address'
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
        store:
          $ref: '#/components/schemas/BaseStore'
        discounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Discount'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/AbstractOrderEntry'
    AbstractOrderEntry:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        entryNumber:
          type: integer
          format: int32
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          format: int64
        basePrice:
          type: number
          format: double
        totalPrice:
          type: number
          format: double
        calculated:
          type: boolean
        costCenter:
          $ref: '#/components/schemas/B2BCostCenter'
        deliveryPointOfService:
          $ref: '#/components/schemas/PointOfService'
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        duplicate:
          type: boolean
        company:
          type: string
        building:
          type: string
        email:
          type: string
        fax:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
        phone1:
          type: string
        phone2:
          type: string
        pobox:
          type: string
        postalcode:
          type: string
        streetNumber:
          type: string
        streetName:
          type: string
        town:
          type: string
        district:
          type: string
        shippingAddress:
          type: boolean
        billingAddress:
          type: boolean
        contactAddress:
          type: boolean
        visibleInAddressBook:
          type: boolean
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        region:
          $ref: '#/components/schemas/Region'
        country:
          $ref: '#/components/schemas/Country'
        title:
          $ref: '#/components/schemas/Title'
        original:
          $ref: '#/components/schemas/Address'
    Attribute:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        type:
          type: string
          enum:
          - string
          - integer
          - float
          - double
          - date
        description:
          type: string
        required:
          type: boolean
        enabled:
          type: boolean
        templates:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AttributeTemplate'
        externalId:
          type: string
    AttributeTemplate:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        attributes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        categories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        externalId:
          type: string
    AttributeUnit:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        symbol:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AttributeUnit10NAugmentation'
        name:
          type: string
        externalId:
          type: string
    AttributeUnit10NAugmentation:
      type: object
      properties:
        localizedId:
          $ref: '#/components/schemas/LocalizedId'
        name:
          type: string
        entity:
          $ref: '#/components/schemas/AttributeUnit'
    B2BBudget:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        budget:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        active:
          type: boolean
        activeFrom:
          type: string
          format: date-time
        activeTo:
          type: string
          format: date-time
        costCenters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/B2BCostCenter'
    B2BCostCenter:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        active:
          type: boolean
        currency:
          $ref: '#/components/schemas/Currency'
        budgets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/B2BBudget'
    B2BCustomer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        firstName:
          type: string
        lastName:
          type: string
        encodedPassword:
          type: string
        loginDisabled:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        refreshTokens:
          type: array
          items:
            type: string
        sessionLanguage:
          $ref: '#/components/schemas/Language'
        sessionCurrency:
          $ref: '#/components/schemas/Currency'
        paymentInfos:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInfo'
        carts:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        priceGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        taxGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        discountGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        phoneNumber:
          type: string
        forgottenPasswordToken:
          type: string
        title:
          $ref: '#/components/schemas/Title'
        defaultPaymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
        email:
          type: string
        active:
          type: boolean
        defaultB2BUnit:
          $ref: '#/components/schemas/B2BUnit'
    B2BPermission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        active:
          type: boolean
        message:
          type: string
        unit:
          $ref: '#/components/schemas/B2BUnit'
    B2BQuoteLimit:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
    B2BUnit:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        userDiscountGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        userPriceGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        userTaxGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Principal'
        contactAddress:
          $ref: '#/components/schemas/Address'
        contact:
          $ref: '#/components/schemas/User'
        active:
          type: boolean
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        accountManager:
          $ref: '#/components/schemas/Employee'
        approvers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/B2BCustomer'
        costCenters:
          type: array
          items:
            $ref: '#/components/schemas/B2BCostCenter'
        quoteLimit:
          $ref: '#/components/schemas/B2BQuoteLimit'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/B2BPermission'
    BaseStore:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        expressCheckoutEnabled:
          type: boolean
        apiBaseUrl:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        paymentProvider:
          type: string
        distanceUnit:
          type: string
          enum:
          - miles
          - km
        defaultLanguage:
          $ref: '#/components/schemas/Language'
        defaultCurrency:
          $ref: '#/components/schemas/Currency'
        defaultDeliveryOrigin:
          $ref: '#/components/schemas/PointOfService'
        pointOfServices:
          type: array
          items:
            $ref: '#/components/schemas/PointOfService'
        currencies:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Currency'
        languages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Language'
        warehouses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Warehouse'
    Cart:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        calculated:
          type: boolean
        date:
          type: string
          format: date-time
        deliveryCost:
          type: number
          format: double
        deliveryStatus:
          type: string
          enum:
          - NOTSHIPPED
          - PARTSHIPPED
          - SHIPPED
        name:
          type: string
        description:
          type: string
        expirationTime:
          type: string
          format: date-time
        net:
          type: boolean
        paymentCost:
          type: number
          format: double
        paymentStatus:
          type: string
          enum:
          - NOTPAID
          - PARTPAID
          - PAID
        orderStatus:
          type: string
          enum:
          - CREATED
          - ON_VALIDATION
          - COMPLETED
          - CANCELLED
        totalPrice:
          type: number
          format: double
        totalDiscounts:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        subtotal:
          type: number
          format: double
        discountsIncludeDeliveryCost:
          type: boolean
        discountsIncludePaymentCost:
          type: boolean
        deliveryNote:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        deliveryAddress:
          $ref: '#/components/schemas/Address'
        paymentAddress:
          $ref: '#/components/schemas/Address'
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
        paymentTransactions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransaction'
        store:
          $ref: '#/components/schemas/BaseStore'
        discounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Discount'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CartEntry'
        user:
          $ref: '#/components/schemas/User'
    CartEntry:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        entryNumber:
          type: integer
          format: int32
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          format: int64
        basePrice:
          type: number
          format: double
        totalPrice:
          type: number
          format: double
        calculated:
          type: boolean
        costCenter:
          $ref: '#/components/schemas/B2BCostCenter'
        deliveryPointOfService:
          $ref: '#/components/schemas/PointOfService'
        order:
          $ref: '#/components/schemas/Cart'
    Catalog:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        version:
          type: string
          enum:
          - STAGED
          - ONLINE
        defaultCatalog:
          type: boolean
        active:
          type: boolean
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Catalog10NAugmentation'
        allowedPrincipals:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Principal'
        name:
          type: string
        externalId:
          type: string
    Catalog10NAugmentation:
      type: object
      properties:
        localizedId:
          $ref: '#/components/schemas/LocalizedId'
        name:
          type: string
        entity:
          $ref: '#/components/schemas/Catalog'
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        description:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Category10NAugmentation'
        mainImage:
          $ref: '#/components/schemas/Media'
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Product'
        subCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        superCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        catalog:
          $ref: '#/components/schemas/Catalog'
        allowedPrincipals:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Principal'
        attributeTemplates:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AttributeTemplate'
        externalId:
          type: string
    Category10NAugmentation:
      type: object
      properties:
        localizedId:
          $ref: '#/components/schemas/LocalizedId'
        name:
          type: string
        description:
          type: string
        entity:
          $ref: '#/components/schemas/Category'
    Country:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CountryL10NAugmentation'
        regions:
          type: array
          items:
            $ref: '#/components/schemas/Region'
    CountryL10NAugmentation:
      type: object
      properties:
        localizedId:
          $ref: '#/components/schemas/LocalizedId'
        name:
          type: string
        entity:
          $ref: '#/components/schemas/Country'
    Currency:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        base:
          type: boolean
        conversion:
          type: number
          format: double
        digits:
          type: integer
          format: int32
        symbol:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CurrencyL10NAugmentation'
        baseStores:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BaseStore'
    CurrencyL10NAugmentation:
      type: object
      properties:
        localizedId:
          $ref: '#/components/schemas/LocalizedId'
        name:
          type: string
        entity:
          $ref: '#/components/schemas/Currency'
    Discount:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        value:
          type: number
          format: double
        absolute:
          type: boolean
        currency:
          $ref: '#/components/schemas/Currency'
    DiscountRow:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/Currency'
        catalog:
          $ref: '#/components/schemas/Catalog'
        value:
          type: number
          format: double
        absolute:
          type: boolean
        asTargetPrice:
          type: boolean
        discount:
          $ref: '#/components/schemas/Discount'
        productGroup:
          $ref: '#/components/schemas/ProductDiscountGroup'
        userGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        product:
          $ref: '#/components/schemas/Product'
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        firstName:
          type: string
        lastName:
          type: string
        encodedPassword:
          type: string
        loginDisabled:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        refreshTokens:
          type: array
          items:
            type: string
        sessionLanguage:
          $ref: '#/components/schemas/Language'
        sessionCurrency:
          $ref: '#/components/schemas/Currency'
        paymentInfos:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInfo'
        carts:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        priceGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        taxGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        discountGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
    EnumEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
    EnumEntity10NAugmentation:
      type: object
      properties:
        localizedId:
          $ref: '#/components/schemas/LocalizedId'
        name:
          type: string
        entity:
          $ref: '#/components/schemas/EnumEntity'
    Language:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LanguageL10NAugmentation'
        baseStores:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BaseStore'
    LanguageL10NAugmentation:
      type: object
      properties:
        localizedId:
          $ref: '#/components/schemas/LocalizedId'
        name:
          type: string
        entity:
          $ref: '#/components/schemas/Language'
    LocalizedId:
      type: object
      properties:
        entityId:
          type: integer
          format: int64
        language:
          type: string
    Media:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        fileName:
          type: string
        altText:
          type: string
        description:
          type: string
        realFileName:
          type: string
        mimeType:
          type: string
        fileSizeInByte:
          type: integer
          format: int64
        mediaFolder:
          $ref: '#/components/schemas/MediaFolder'
        catalog:
          $ref: '#/components/schemas/Catalog'
        externalId:
          type: string
    MediaFolder:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        path:
          type: string
    OpeningSchedule:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        calculated:
          type: boolean
        date:
          type: string
          format: date-time
        deliveryCost:
          type: number
          format: double
        deliveryStatus:
          type: string
          enum:
          - NOTSHIPPED
          - PARTSHIPPED
          - SHIPPED
        name:
          type: string
        description:
          type: string
        expirationTime:
          type: string
          format: date-time
        net:
          type: boolean
        paymentCost:
          type: number
          format: double
        paymentStatus:
          type: string
          enum:
          - NOTPAID
          - PARTPAID
          - PAID
        orderStatus:
          type: string
          enum:
          - CREATED
          - ON_VALIDATION
          - COMPLETED
          - CANCELLED
        totalPrice:
          type: number
          format: double
        totalDiscounts:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        subtotal:
          type: number
          format: double
        discountsIncludeDeliveryCost:
          type: boolean
        discountsIncludePaymentCost:
          type: boolean
        deliveryNote:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        deliveryAddress:
          $ref: '#/components/schemas/Address'
        paymentAddress:
          $ref: '#/components/schemas/Address'
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
        paymentTransactions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransaction'
        store:
          $ref: '#/components/schemas/BaseStore'
        discounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Discount'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/OrderEntry'
        user:
          $ref: '#/components/schemas/User'
    OrderEntry:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        entryNumber:
          type: integer
          format: int32
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          format: int64
        basePrice:
          type: number
          format: double
        totalPrice:
          type: number
          format: double
        calculated:
          type: boolean
        costCenter:
          $ref: '#/components/schemas/B2BCostCenter'
        deliveryPointOfService:
          $ref: '#/components/schemas/PointOfService'
        order:
          $ref: '#/components/schemas/Order'
    PaymentInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        duplicate:
          type: boolean
        visibleInPaymentBook:
          type: boolean
        original:
          $ref: '#/components/schemas/PaymentInfo'
        user:
          $ref: '#/components/schemas/User'
        billingAddress:
          $ref: '#/components/schemas/Address'
    PaymentTransaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        requestId:
          type: string
        requestToken:
          type: string
        paymentProvider:
          type: string
        plannedAmount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        info:
          $ref: '#/components/schemas/PaymentInfo'
        order:
          $ref: '#/components/schemas/AbstractOrder'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransactionEntry'
    PaymentTransactionEntry:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        type:
          type: string
          enum:
          - AUTHORIZATION
          - CAPTURE
          - REFUND
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        time:
          type: string
          format: date-time
        transactionStatus:
          type: string
        transactionStatusDetails:
          type: string
        requestToken:
          type: string
        requestId:
          type: string
        subscriptionID:
          type: string
        paymentTransaction:
          $ref: '#/components/schemas/PaymentTransaction'
    PointOfService:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        openingSchedule:
          $ref: '#/components/schemas/OpeningSchedule'
        warehouses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Warehouse'
        baseStore:
          $ref: '#/components/schemas/BaseStore'
    PriceRow:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/Currency'
        catalog:
          $ref: '#/components/schemas/Catalog'
        minqtd:
          type: integer
          format: int64
        net:
          type: boolean
        price:
          type: number
          format: double
        giveAwayPrice:
          type: boolean
        productGroup:
          $ref: '#/components/schemas/ProductPriceGroup'
        userGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        product:
          $ref: '#/components/schemas/Product'
    Principal:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        status:
          type: string
          enum:
          - APPROVED
          - DRAFT
        maxOrderQuantity:
          type: integer
          format: int32
        minOrderQuantity:
          type: integer
          format: int32
        offlineDate:
          type: string
          format: date-time
        onlineDate:
          type: string
          format: date-time
        soldIndividually:
          type: boolean
        numberOfReviews:
          type: integer
          format: int32
        averageRating:
          type: integer
          format: int32
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductL10NAugmentation'
        mainImage:
          $ref: '#/components/schemas/Media'
        variations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Variation'
        variantProducts:
          type: array
          items:
            $ref: '#/components/schemas/VariantProduct'
        features:
          type: array
          items:
            $ref: '#/components/schemas/ProductFeature'
        categories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        priceRows:
          type: array
          items:
            $ref: '#/components/schemas/PriceRow'
        taxRows:
          type: array
          items:
            $ref: '#/components/schemas/TaxRow'
        discountRows:
          type: array
          items:
            $ref: '#/components/schemas/DiscountRow'
        catalog:
          $ref: '#/components/schemas/Catalog'
        name:
          type: string
        description:
          type: string
        summary:
          type: string
        externalId:
          type: string
    ProductDiscountGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnumEntity10NAugmentation'
    ProductFeature:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        description:
          type: string
        rawValue:
          type: string
        attribute:
          $ref: '#/components/schemas/Attribute'
        unit:
          $ref: '#/components/schemas/AttributeUnit'
        product:
          $ref: '#/components/schemas/Product'
        externalId:
          type: string
    ProductL10NAugmentation:
      type: object
      properties:
        localizedId:
          $ref: '#/components/schemas/LocalizedId'
        name:
          type: string
        description:
          type: string
        summary:
          type: string
        entity:
          $ref: '#/components/schemas/Product'
    ProductPriceGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnumEntity10NAugmentation'
    ProductTaxGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnumEntity10NAugmentation'
    Quote:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        calculated:
          type: boolean
        date:
          type: string
          format: date-time
        deliveryCost:
          type: number
          format: double
        deliveryStatus:
          type: string
          enum:
          - NOTSHIPPED
          - PARTSHIPPED
          - SHIPPED
        name:
          type: string
        description:
          type: string
        expirationTime:
          type: string
          format: date-time
        net:
          type: boolean
        paymentCost:
          type: number
          format: double
        paymentStatus:
          type: string
          enum:
          - NOTPAID
          - PARTPAID
          - PAID
        orderStatus:
          type: string
          enum:
          - CREATED
          - ON_VALIDATION
          - COMPLETED
          - CANCELLED
        totalPrice:
          type: number
          format: double
        totalDiscounts:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        subtotal:
          type: number
          format: double
        discountsIncludeDeliveryCost:
          type: boolean
        discountsIncludePaymentCost:
          type: boolean
        deliveryNote:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        deliveryAddress:
          $ref: '#/components/schemas/Address'
        paymentAddress:
          $ref: '#/components/schemas/Address'
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
        paymentTransactions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransaction'
        store:
          $ref: '#/components/schemas/BaseStore'
        discounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Discount'
        version:
          type: integer
          format: int32
        state:
          type: string
          enum:
          - CREATED
          - DRAFT
          - SUBMITTED
          - OFFER
          - ORDERED
          - CANCELLED
          - EXPIRED
        entries:
          type: array
          items:
            $ref: '#/components/schemas/QuoteEntry'
        user:
          $ref: '#/components/schemas/User'
    QuoteEntry:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        entryNumber:
          type: integer
          format: int32
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          format: int64
        basePrice:
          type: number
          format: double
        totalPrice:
          type: number
          format: double
        calculated:
          type: boolean
        costCenter:
          $ref: '#/components/schemas/B2BCostCenter'
        deliveryPointOfService:
          $ref: '#/components/schemas/PointOfService'
        order:
          $ref: '#/components/schemas/Quote'
    Region:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RegionL10NAugmentation'
        country:
          $ref: '#/components/schemas/Country'
    RegionL10NAugmentation:
      type: object
      properties:
        localizedId:
          $ref: '#/components/schemas/LocalizedId'
        name:
          type: string
        entity:
          $ref: '#/components/schemas/Region'
    Stock:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        available:
          type: integer
          format: int32
        productCode:
          type: string
        reserved:
          type: integer
          format: int32
        preOrder:
          type: integer
          format: int32
        maxPreOrder:
          type: integer
          format: int32
        inStockStatus:
          type: string
          enum:
          - FORCE_IN_STOCK
          - FORCE_OUT_OF_STOCK
        warehouse:
          $ref: '#/components/schemas/Warehouse'
        externalId:
          type: string
    Tax:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        value:
          type: number
          format: double
        absolute:
          type: boolean
        currency:
          $ref: '#/components/schemas/Currency'
    TaxRow:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/Currency'
        catalog:
          $ref: '#/components/schemas/Catalog'
        value:
          type: number
          format: double
        absolute:
          type: boolean
        tax:
          $ref: '#/components/schemas/Tax'
        productGroup:
          $ref: '#/components/schemas/ProductTaxGroup'
        userGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        product:
          $ref: '#/components/schemas/Product'
    Title:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        firstName:
          type: string
        lastName:
          type: string
        encodedPassword:
          type: string
        loginDisabled:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        refreshTokens:
          type: array
          items:
            type: string
        sessionLanguage:
          $ref: '#/components/schemas/Language'
        sessionCurrency:
          $ref: '#/components/schemas/Currency'
        paymentInfos:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInfo'
        carts:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        priceGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        taxGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        discountGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
    UserDiscountGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnumEntity10NAugmentation'
    UserGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        userDiscountGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        userPriceGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        userTaxGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Principal'
    UserPriceGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnumEntity10NAugmentation'
    UserTaxGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnumEntity10NAugmentation'
    VariantProduct:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        status:
          type: string
          enum:
          - APPROVED
          - DRAFT
        maxOrderQuantity:
          type: integer
          format: int32
        minOrderQuantity:
          type: integer
          format: int32
        offlineDate:
          type: string
          format: date-time
        onlineDate:
          type: string
          format: date-time
        soldIndividually:
          type: boolean
        numberOfReviews:
          type: integer
          format: int32
        averageRating:
          type: integer
          format: int32
        mainImage:
          $ref: '#/components/schemas/Media'
        variantProducts:
          type: array
          items:
            $ref: '#/components/schemas/VariantProduct'
        features:
          type: array
          items:
            $ref: '#/components/schemas/ProductFeature'
        categories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        priceRows:
          type: array
          items:
            $ref: '#/components/schemas/PriceRow'
        taxRows:
          type: array
          items:
            $ref: '#/components/schemas/TaxRow'
        discountRows:
          type: array
          items:
            $ref: '#/components/schemas/DiscountRow'
        catalog:
          $ref: '#/components/schemas/Catalog'
        baseProduct:
          $ref: '#/components/schemas/Product'
        options:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/VariationOption'
        name:
          type: string
        description:
          type: string
        summary:
          type: string
        externalId:
          type: string
    Variation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        description:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/VariationOption'
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Product'
        externalId:
          type: string
    VariationOption:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        description:
          type: string
        variation:
          $ref: '#/components/schemas/Variation'
        variantProducts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/VariantProduct'
        externalId:
          type: string
    Warehouse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        defaultWareHouse:
          type: boolean
        stocks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Stock'
        pointOfServices:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PointOfService'
        baseStores:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BaseStore'
    EntityModelB2BUnit:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        userDiscountGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        userPriceGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        userTaxGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Principal'
        contactAddress:
          $ref: '#/components/schemas/Address'
        contact:
          $ref: '#/components/schemas/User'
        active:
          type: boolean
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        accountManager:
          $ref: '#/components/schemas/Employee'
        approvers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/B2BCustomer'
        costCenters:
          type: array
          items:
            $ref: '#/components/schemas/B2BCostCenter'
        quoteLimit:
          $ref: '#/components/schemas/B2BQuoteLimit'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/B2BPermission'
        _links:
          $ref: '#/components/schemas/Links'
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelEntityModelB2BUnit:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelB2BUnit'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelB2BPermission:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/B2BPermissionResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelObject:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            objects:
              type: array
              items:
                type: object
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelB2BCustomer:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/B2BCustomerResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelUserGroup:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/UserGroupResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelEmployee:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        firstName:
          type: string
        lastName:
          type: string
        encodedPassword:
          type: string
        loginDisabled:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        refreshTokens:
          type: array
          items:
            type: string
        sessionLanguage:
          $ref: '#/components/schemas/Language'
        sessionCurrency:
          $ref: '#/components/schemas/Currency'
        paymentInfos:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInfo'
        carts:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        priceGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        taxGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        discountGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelB2BCostCenter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/B2BCostCenterResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelMedia:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        fileName:
          type: string
        altText:
          type: string
        description:
          type: string
        realFileName:
          type: string
        mimeType:
          type: string
        fileSizeInByte:
          type: integer
          format: int64
        mediaFolder:
          $ref: '#/components/schemas/MediaFolder'
        catalog:
          $ref: '#/components/schemas/Catalog'
        externalId:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelCatalog:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CatalogResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelAddress:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/AddressResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelUserTaxGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnumEntity10NAugmentation'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelCategory:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CategoryResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelUserDiscountGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnumEntity10NAugmentation'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelAddress:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        duplicate:
          type: boolean
        company:
          type: string
        building:
          type: string
        email:
          type: string
        fax:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
        phone1:
          type: string
        phone2:
          type: string
        pobox:
          type: string
        postalcode:
          type: string
        streetNumber:
          type: string
        streetName:
          type: string
        town:
          type: string
        district:
          type: string
        shippingAddress:
          type: boolean
        billingAddress:
          type: boolean
        contactAddress:
          type: boolean
        visibleInAddressBook:
          type: boolean
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        region:
          $ref: '#/components/schemas/Region'
        country:
          $ref: '#/components/schemas/Country'
        title:
          $ref: '#/components/schemas/Title'
        original:
          $ref: '#/components/schemas/Address'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelOrder:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/OrderResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelUserPriceGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnumEntity10NAugmentation'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        firstName:
          type: string
        lastName:
          type: string
        encodedPassword:
          type: string
        loginDisabled:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        refreshTokens:
          type: array
          items:
            type: string
        sessionLanguage:
          $ref: '#/components/schemas/Language'
        sessionCurrency:
          $ref: '#/components/schemas/Currency'
        paymentInfos:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInfo'
        carts:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        priceGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        taxGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        discountGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelPrincipal:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            principals:
              type: array
              items:
                $ref: '#/components/schemas/PrincipalResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelB2BQuoteLimit:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelVariation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        description:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/VariationOption'
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Product'
        externalId:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelVariation:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelVariation'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelProduct:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ProductResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelVariationOption:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/VariationOptionResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelVariation:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelVariation'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelCurrency:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        base:
          type: boolean
        conversion:
          type: number
          format: double
        digits:
          type: integer
          format: int32
        symbol:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CurrencyL10NAugmentation'
        baseStores:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BaseStore'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCurrency:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCurrency'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelBaseStore:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/BaseStoreResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelCatalog:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        version:
          type: string
          enum:
          - STAGED
          - ONLINE
        defaultCatalog:
          type: boolean
        active:
          type: boolean
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Catalog10NAugmentation'
        allowedPrincipals:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Principal'
        name:
          type: string
        externalId:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCatalog:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCatalog'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelUserGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        userDiscountGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        userPriceGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        userTaxGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Principal'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelUserGroup:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelUserGroup'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelEnumEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnumEntity10NAugmentation'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelEnumEntity:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelEnumEntity'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelB2BCostCenter:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        active:
          type: boolean
        currency:
          $ref: '#/components/schemas/Currency'
        budgets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/B2BBudget'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelB2BCostCenter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelB2BCostCenter'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelB2BBudget:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/B2BBudgetResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelB2BPermission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        active:
          type: boolean
        message:
          type: string
        unit:
          $ref: '#/components/schemas/B2BUnit'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelB2BPermission:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelB2BPermission'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    AbstractPromotion:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        enabled:
          type: boolean
        priority:
          type: integer
          format: int32
        promotionGroup:
          $ref: '#/components/schemas/PromotionGroup'
        restrictions:
          type: array
          items:
            $ref: '#/components/schemas/AbstractPromotionRestriction'
    AbstractPromotionRestriction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        promotion:
          $ref: '#/components/schemas/AbstractPromotion'
    PromotionGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        identifier:
          type: string
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/AbstractPromotion'
    EntityModelAbstractPromotionRestriction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        promotion:
          $ref: '#/components/schemas/AbstractPromotion'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelAbstractPromotionRestriction:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelAbstractPromotionRestriction'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelAbstractPromotion:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        enabled:
          type: boolean
        priority:
          type: integer
          format: int32
        promotionGroup:
          $ref: '#/components/schemas/PromotionGroup'
        restrictions:
          type: array
          items:
            $ref: '#/components/schemas/AbstractPromotionRestriction'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelPaymentTransaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        requestId:
          type: string
        requestToken:
          type: string
        paymentProvider:
          type: string
        plannedAmount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        info:
          $ref: '#/components/schemas/PaymentInfo'
        order:
          $ref: '#/components/schemas/AbstractOrder'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransactionEntry'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelPaymentTransaction:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelPaymentTransaction'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelPaymentInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        duplicate:
          type: boolean
        visibleInPaymentBook:
          type: boolean
        original:
          $ref: '#/components/schemas/PaymentInfo'
        user:
          $ref: '#/components/schemas/User'
        billingAddress:
          $ref: '#/components/schemas/Address'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelPaymentTransactionEntry:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PaymentTransactionEntryResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelProduct:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        status:
          type: string
          enum:
          - APPROVED
          - DRAFT
        maxOrderQuantity:
          type: integer
          format: int32
        minOrderQuantity:
          type: integer
          format: int32
        offlineDate:
          type: string
          format: date-time
        onlineDate:
          type: string
          format: date-time
        soldIndividually:
          type: boolean
        numberOfReviews:
          type: integer
          format: int32
        averageRating:
          type: integer
          format: int32
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductL10NAugmentation'
        mainImage:
          $ref: '#/components/schemas/Media'
        variations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Variation'
        variantProducts:
          type: array
          items:
            $ref: '#/components/schemas/VariantProduct'
        features:
          type: array
          items:
            $ref: '#/components/schemas/ProductFeature'
        categories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        priceRows:
          type: array
          items:
            $ref: '#/components/schemas/PriceRow'
        taxRows:
          type: array
          items:
            $ref: '#/components/schemas/TaxRow'
        discountRows:
          type: array
          items:
            $ref: '#/components/schemas/DiscountRow'
        catalog:
          $ref: '#/components/schemas/Catalog'
        name:
          type: string
        description:
          type: string
        summary:
          type: string
        externalId:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelProduct:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelProduct'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelVariantProduct:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/VariantProductResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelPriceRow:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PriceRowResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelTaxRow:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/TaxRowResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelVariation:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/VariationResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelDiscountRow:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/DiscountRowResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelProductFeature:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ProductFeatureResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelProduct:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelProduct'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelDocumentTemplate:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        content:
          type: string
        type:
          type: string
          enum:
          - velocity
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelDocumentTemplate:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelDocumentTemplate'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelAttributeUnit:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        symbol:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AttributeUnit10NAugmentation'
        name:
          type: string
        externalId:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelAttributeUnit:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelAttributeUnit'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelDiscountRow:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/Currency'
        catalog:
          $ref: '#/components/schemas/Catalog'
        value:
          type: number
          format: double
        absolute:
          type: boolean
        asTargetPrice:
          type: boolean
        discount:
          $ref: '#/components/schemas/Discount'
        productGroup:
          $ref: '#/components/schemas/ProductDiscountGroup'
        userGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        product:
          $ref: '#/components/schemas/Product'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelDiscountRow:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelDiscountRow'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelProductDiscountGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnumEntity10NAugmentation'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelDiscount:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        value:
          type: number
          format: double
        absolute:
          type: boolean
        currency:
          $ref: '#/components/schemas/Currency'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelPromotionPriceRow:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        price:
          type: number
          format: double
        currency:
          $ref: '#/components/schemas/Currency'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelPromotionPriceRow:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelPromotionPriceRow'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelPaymentInfo:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelPaymentInfo'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelVariationOption:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        description:
          type: string
        variation:
          $ref: '#/components/schemas/Variation'
        variantProducts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/VariantProduct'
        externalId:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelVariationOption:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelVariationOption'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelEntityModelVariationOption:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelVariationOption'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelPointOfService:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        openingSchedule:
          $ref: '#/components/schemas/OpeningSchedule'
        warehouses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Warehouse'
        baseStore:
          $ref: '#/components/schemas/BaseStore'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelPointOfService:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelPointOfService'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelOpeningSchedule:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelWarehouse:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/WarehouseResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelBaseStore:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        expressCheckoutEnabled:
          type: boolean
        apiBaseUrl:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        paymentProvider:
          type: string
        distanceUnit:
          type: string
          enum:
          - miles
          - km
        defaultLanguage:
          $ref: '#/components/schemas/Language'
        defaultCurrency:
          $ref: '#/components/schemas/Currency'
        defaultDeliveryOrigin:
          $ref: '#/components/schemas/PointOfService'
        pointOfServices:
          type: array
          items:
            $ref: '#/components/schemas/PointOfService'
        currencies:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Currency'
        languages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Language'
        warehouses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Warehouse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelCartEntry:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        entryNumber:
          type: integer
          format: int32
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          format: int64
        basePrice:
          type: number
          format: double
        totalPrice:
          type: number
          format: double
        calculated:
          type: boolean
        costCenter:
          $ref: '#/components/schemas/B2BCostCenter'
        deliveryPointOfService:
          $ref: '#/components/schemas/PointOfService'
        order:
          $ref: '#/components/schemas/Cart'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCartEntry:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCartEntry'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelCart:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        calculated:
          type: boolean
        date:
          type: string
          format: date-time
        deliveryCost:
          type: number
          format: double
        deliveryStatus:
          type: string
          enum:
          - NOTSHIPPED
          - PARTSHIPPED
          - SHIPPED
        name:
          type: string
        description:
          type: string
        expirationTime:
          type: string
          format: date-time
        net:
          type: boolean
        paymentCost:
          type: number
          format: double
        paymentStatus:
          type: string
          enum:
          - NOTPAID
          - PARTPAID
          - PAID
        orderStatus:
          type: string
          enum:
          - CREATED
          - ON_VALIDATION
          - COMPLETED
          - CANCELLED
        totalPrice:
          type: number
          format: double
        totalDiscounts:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        subtotal:
          type: number
          format: double
        discountsIncludeDeliveryCost:
          type: boolean
        discountsIncludePaymentCost:
          type: boolean
        deliveryNote:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        deliveryAddress:
          $ref: '#/components/schemas/Address'
        paymentAddress:
          $ref: '#/components/schemas/Address'
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
        paymentTransactions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransaction'
        store:
          $ref: '#/components/schemas/BaseStore'
        discounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Discount'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CartEntry'
        user:
          $ref: '#/components/schemas/User'
        _links:
          $ref: '#/components/schemas/Links'
    EmailAddress:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        emailAddress:
          type: string
        displayName:
          type: string
        toMessages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailMessage'
        ccMessages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailMessage'
        bccMessages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailMessage'
        messagesSent:
          type: array
          items:
            $ref: '#/components/schemas/EmailMessage'
    EmailAttachment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        fileName:
          type: string
        altText:
          type: string
        description:
          type: string
        realFileName:
          type: string
        mimeType:
          type: string
        fileSizeInByte:
          type: integer
          format: int64
        mediaFolder:
          $ref: '#/components/schemas/MediaFolder'
        catalog:
          $ref: '#/components/schemas/Catalog'
        message:
          $ref: '#/components/schemas/EmailMessage'
        externalId:
          type: string
    EmailMessage:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        subject:
          type: string
        body:
          type: string
        sentDate:
          type: string
          format: date-time
        sent:
          type: boolean
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/EmailAttachment'
        toAddresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        ccAddresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        bccAddresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        fromAddress:
          $ref: '#/components/schemas/EmailAddress'
    EntityModelEmailMessage:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        subject:
          type: string
        body:
          type: string
        sentDate:
          type: string
          format: date-time
        sent:
          type: boolean
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/EmailAttachment'
        toAddresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        ccAddresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        bccAddresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        fromAddress:
          $ref: '#/components/schemas/EmailAddress'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelEmailMessage:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelEmailMessage'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelEmailAttachment:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EmailAttachmentResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelEmailAddress:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        emailAddress:
          type: string
        displayName:
          type: string
        toMessages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailMessage'
        ccMessages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailMessage'
        bccMessages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailMessage'
        messagesSent:
          type: array
          items:
            $ref: '#/components/schemas/EmailMessage'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEmailAddress:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EmailAddressResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelTitle:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelTitle:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTitle'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelMedia:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelMedia'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelEntityModelMedia:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelMedia'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelStock:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        available:
          type: integer
          format: int32
        productCode:
          type: string
        reserved:
          type: integer
          format: int32
        preOrder:
          type: integer
          format: int32
        maxPreOrder:
          type: integer
          format: int32
        inStockStatus:
          type: string
          enum:
          - FORCE_IN_STOCK
          - FORCE_OUT_OF_STOCK
        warehouse:
          $ref: '#/components/schemas/Warehouse'
        externalId:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelStock:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelStock'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelWarehouse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        defaultWareHouse:
          type: boolean
        stocks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Stock'
        pointOfServices:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PointOfService'
        baseStores:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BaseStore'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelStock:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelStock'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelUserPriceGroup:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelUserPriceGroup'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelCountry:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CountryL10NAugmentation'
        regions:
          type: array
          items:
            $ref: '#/components/schemas/Region'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCountry:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCountry'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelRegion:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/RegionResponse'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelBaseStore:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelBaseStore'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelLanguage:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LanguageL10NAugmentation'
        baseStores:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BaseStore'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelPointOfService:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PointOfServiceResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelCurrency:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CurrencyResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelLanguage:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/LanguageResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelRegion:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RegionL10NAugmentation'
        country:
          $ref: '#/components/schemas/Country'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelRegion:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelRegion'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelEntityModelRegion:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelRegion'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelUser:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            users:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelUser'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelPaymentInfo:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PaymentInfoResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelCart:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CartResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelB2BBudget:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        budget:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        active:
          type: boolean
        activeFrom:
          type: string
          format: date-time
        activeTo:
          type: string
          format: date-time
        costCenters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/B2BCostCenter'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelB2BBudget:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelB2BBudget'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelAddress:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelAddress'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelSynchronizationLog:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        typeClass:
          type: string
        entityId:
          type: integer
          format: int64
        externalId:
          type: string
        linkedClass:
          type: string
        linkedId:
          type: integer
          format: int64
        linkedExternalId:
          type: string
        actionType:
          type: string
          enum:
          - CREATE
          - UPDATE
          - DELETE
          - LINKED
          - UNLINKED
        status:
          type: string
          enum:
          - SUCCESSFUL
          - FAILED
        retries:
          type: integer
          format: int32
        failedMessage:
          type: string
        archived:
          type: boolean
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelSynchronizationLog:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelSynchronizationLog'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelEntityModelSynchronizationLog:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelSynchronizationLog'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelUserTaxGroup:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelUserTaxGroup'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelB2BOrderThresholdPermission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        active:
          type: boolean
        message:
          type: string
        unit:
          $ref: '#/components/schemas/B2BUnit'
        threshold:
          type: number
          format: double
        currency:
          $ref: '#/components/schemas/Currency'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelB2BOrderThresholdPermission:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelB2BOrderThresholdPermission'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelOpeningSchedule:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelOpeningSchedule'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelCart:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCart'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelDiscount:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/DiscountResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelCartEntry:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CartEntryResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelPaymentTransaction:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PaymentTransactionResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelAttributeTemplate:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        attributes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        categories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        externalId:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelAttributeTemplate:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelAttributeTemplate'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelAttribute:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/AttributeResponse'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelWarehouse:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelWarehouse'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelStock:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/StockResponse'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelAbstractPromotion:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelAbstractPromotion'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelPromotionGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        identifier:
          type: string
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/AbstractPromotion'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelAbstractPromotionRestriction:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/AbstractPromotionRestrictionResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelPriceRow:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/Currency'
        catalog:
          $ref: '#/components/schemas/Catalog'
        minqtd:
          type: integer
          format: int64
        net:
          type: boolean
        price:
          type: number
          format: double
        giveAwayPrice:
          type: boolean
        productGroup:
          $ref: '#/components/schemas/ProductPriceGroup'
        userGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        product:
          $ref: '#/components/schemas/Product'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelPriceRow:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelPriceRow'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelProductPriceGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnumEntity10NAugmentation'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelDiscount:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelDiscount'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelLanguage:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelLanguage'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelPrincipal:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelPrincipal:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            principals:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelPrincipal'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelCronJob:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        jobName:
          type: string
        jobStatus:
          type: string
          enum:
          - RUNNING
          - PAUSED
          - COMPLETE
          - SCHEDULED
        cronExpression:
          type: string
        description:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCronJob:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCronJob'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelEntityModelCronJob:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCronJob'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelCategory:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        description:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Category10NAugmentation'
        mainImage:
          $ref: '#/components/schemas/Media'
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Product'
        subCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        superCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        catalog:
          $ref: '#/components/schemas/Catalog'
        allowedPrincipals:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Principal'
        attributeTemplates:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AttributeTemplate'
        externalId:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCategory:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCategory'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelAttributeTemplate:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/AttributeTemplateResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelCategory:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCategory'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelDebitCardPaymentInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        duplicate:
          type: boolean
        visibleInPaymentBook:
          type: boolean
        original:
          $ref: '#/components/schemas/PaymentInfo'
        user:
          $ref: '#/components/schemas/User'
        billingAddress:
          $ref: '#/components/schemas/Address'
        bankIDNumber:
          type: string
        bank:
          type: string
        accountNumber:
          type: string
        baOwner:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelDebitCardPaymentInfo:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelDebitCardPaymentInfo'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelEmailAddress:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelEmailAddress'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelEmailMessage:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EmailMessageResponse'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelB2BQuoteLimit:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelB2BQuoteLimit'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelOrder:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        calculated:
          type: boolean
        date:
          type: string
          format: date-time
        deliveryCost:
          type: number
          format: double
        deliveryStatus:
          type: string
          enum:
          - NOTSHIPPED
          - PARTSHIPPED
          - SHIPPED
        name:
          type: string
        description:
          type: string
        expirationTime:
          type: string
          format: date-time
        net:
          type: boolean
        paymentCost:
          type: number
          format: double
        paymentStatus:
          type: string
          enum:
          - NOTPAID
          - PARTPAID
          - PAID
        orderStatus:
          type: string
          enum:
          - CREATED
          - ON_VALIDATION
          - COMPLETED
          - CANCELLED
        totalPrice:
          type: number
          format: double
        totalDiscounts:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        subtotal:
          type: number
          format: double
        discountsIncludeDeliveryCost:
          type: boolean
        discountsIncludePaymentCost:
          type: boolean
        deliveryNote:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        deliveryAddress:
          $ref: '#/components/schemas/Address'
        paymentAddress:
          $ref: '#/components/schemas/Address'
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
        paymentTransactions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransaction'
        store:
          $ref: '#/components/schemas/BaseStore'
        discounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Discount'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/OrderEntry'
        user:
          $ref: '#/components/schemas/User'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelOrder:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelOrder'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelProductFeature:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        description:
          type: string
        rawValue:
          type: string
        attribute:
          $ref: '#/components/schemas/Attribute'
        unit:
          $ref: '#/components/schemas/AttributeUnit'
        product:
          $ref: '#/components/schemas/Product'
        externalId:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelProductFeature:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelProductFeature'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelAttribute:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        type:
          type: string
          enum:
          - string
          - integer
          - float
          - double
          - date
        description:
          type: string
        required:
          type: boolean
        enabled:
          type: boolean
        templates:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AttributeTemplate'
        externalId:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelProductFeature:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelProductFeature'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelB2BCustomer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        firstName:
          type: string
        lastName:
          type: string
        encodedPassword:
          type: string
        loginDisabled:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        refreshTokens:
          type: array
          items:
            type: string
        sessionLanguage:
          $ref: '#/components/schemas/Language'
        sessionCurrency:
          $ref: '#/components/schemas/Currency'
        paymentInfos:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInfo'
        carts:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        priceGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        taxGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        discountGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        phoneNumber:
          type: string
        forgottenPasswordToken:
          type: string
        title:
          $ref: '#/components/schemas/Title'
        defaultPaymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
        email:
          type: string
        active:
          type: boolean
        defaultB2BUnit:
          $ref: '#/components/schemas/B2BUnit'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelB2BCustomer:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelB2BCustomer'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelUserDiscountGroup:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelUserDiscountGroup'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelEmployee:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelEmployee'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelTaxRow:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/Currency'
        catalog:
          $ref: '#/components/schemas/Catalog'
        value:
          type: number
          format: double
        absolute:
          type: boolean
        tax:
          $ref: '#/components/schemas/Tax'
        productGroup:
          $ref: '#/components/schemas/ProductTaxGroup'
        userGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        product:
          $ref: '#/components/schemas/Product'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelTaxRow:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTaxRow'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelTax:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        value:
          type: number
          format: double
        absolute:
          type: boolean
        currency:
          $ref: '#/components/schemas/Currency'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelProductTaxGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnumEntity10NAugmentation'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelCustomer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        firstName:
          type: string
        lastName:
          type: string
        encodedPassword:
          type: string
        loginDisabled:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        refreshTokens:
          type: array
          items:
            type: string
        sessionLanguage:
          $ref: '#/components/schemas/Language'
        sessionCurrency:
          $ref: '#/components/schemas/Currency'
        paymentInfos:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInfo'
        carts:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        priceGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        taxGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        discountGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        phoneNumber:
          type: string
        forgottenPasswordToken:
          type: string
        title:
          $ref: '#/components/schemas/Title'
        defaultPaymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCustomer:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCustomer'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelPaymentTransactionEntry:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        type:
          type: string
          enum:
          - AUTHORIZATION
          - CAPTURE
          - REFUND
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        time:
          type: string
          format: date-time
        transactionStatus:
          type: string
        transactionStatusDetails:
          type: string
        requestToken:
          type: string
        requestId:
          type: string
        subscriptionID:
          type: string
        paymentTransaction:
          $ref: '#/components/schemas/PaymentTransaction'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelPaymentTransactionEntry:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelPaymentTransactionEntry'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelPromotionGroup:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelPromotionGroup'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelAbstractPromotion:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/AbstractPromotionResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelCreditCardPaymentInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        duplicate:
          type: boolean
        visibleInPaymentBook:
          type: boolean
        original:
          $ref: '#/components/schemas/PaymentInfo'
        user:
          $ref: '#/components/schemas/User'
        billingAddress:
          $ref: '#/components/schemas/Address'
        ccOwner:
          type: string
        number:
          type: string
        type:
          type: string
          enum:
          - AMEX
          - VISA
          - MASTER
        validToMonth:
          type: string
        validToYear:
          type: string
        validFromMonth:
          type: string
        validFromYear:
          type: string
        subscriptionId:
          type: string
        subscriptionValidated:
          type: boolean
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCreditCardPaymentInfo:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCreditCardPaymentInfo'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelAttribute:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelAttribute'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelTax:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTax'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    AddressRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        duplicate:
          type: boolean
        company:
          type: string
        building:
          type: string
        email:
          type: string
        fax:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
        phone1:
          type: string
        phone2:
          type: string
        pobox:
          type: string
        postalcode:
          type: string
        streetNumber:
          type: string
        streetName:
          type: string
        town:
          type: string
        district:
          type: string
        shippingAddress:
          type: boolean
        billingAddress:
          type: boolean
        contactAddress:
          type: boolean
        visibleInAddressBook:
          type: boolean
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        region:
          type: string
        country:
          type: string
        title:
          type: string
        original:
          type: string
    CountryRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        translations:
          type: string
        regions:
          type: array
          items:
            type: string
    RegionRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        translations:
          type: string
        country:
          type: string
    TitleRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
    AttributeRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        type:
          type: string
          enum:
          - string
          - integer
          - float
          - double
          - date
        description:
          type: string
        required:
          type: boolean
        enabled:
          type: boolean
        templates:
          type: array
          items:
            type: string
        externalId:
          type: string
    AttributeTemplateRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        attributes:
          type: array
          items:
            type: string
        categories:
          type: array
          items:
            type: string
        externalId:
          type: string
    AttributeUnitRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        symbol:
          type: string
        translations:
          type: string
        name:
          type: string
        externalId:
          type: string
    BaseStoreRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        expressCheckoutEnabled:
          type: boolean
        apiBaseUrl:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        paymentProvider:
          type: string
        distanceUnit:
          type: string
          enum:
          - miles
          - km
        defaultLanguage:
          type: string
        defaultCurrency:
          type: string
        defaultDeliveryOrigin:
          type: string
        pointOfServices:
          type: array
          items:
            type: string
        currencies:
          type: array
          items:
            type: string
        languages:
          type: array
          items:
            type: string
        warehouses:
          type: array
          items:
            type: string
    CatalogRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        version:
          type: string
          enum:
          - STAGED
          - ONLINE
        defaultCatalog:
          type: boolean
        active:
          type: boolean
        translations:
          type: string
        allowedPrincipals:
          type: array
          items:
            type: string
        name:
          type: string
        externalId:
          type: string
    CategoryRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        description:
          type: string
        translations:
          type: string
        mainImage:
          type: string
        products:
          type: array
          items:
            type: string
        subCategories:
          type: array
          items:
            type: string
        superCategories:
          type: array
          items:
            type: string
        catalog:
          type: string
        allowedPrincipals:
          type: array
          items:
            type: string
        attributeTemplates:
          type: array
          items:
            type: string
        externalId:
          type: string
    CurrencyRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        base:
          type: boolean
        conversion:
          type: number
          format: double
        digits:
          type: integer
          format: int32
        symbol:
          type: string
        translations:
          type: string
        baseStores:
          type: array
          items:
            type: string
    DiscountRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        value:
          type: number
          format: double
        absolute:
          type: boolean
        currency:
          type: string
    DiscountRowRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        currency:
          type: string
        catalog:
          type: string
        value:
          type: number
          format: double
        absolute:
          type: boolean
        asTargetPrice:
          type: boolean
        discount:
          type: string
        productGroup:
          type: string
        userGroup:
          type: string
        product:
          type: string
    EnumEntityRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
    LanguageRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        translations:
          type: string
        baseStores:
          type: array
          items:
            type: string
    MediaRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        fileName:
          type: string
        altText:
          type: string
        description:
          type: string
        realFileName:
          type: string
        mimeType:
          type: string
        fileSizeInByte:
          type: integer
          format: int64
        mediaFolder:
          type: string
        catalog:
          type: string
        externalId:
          type: string
    OpeningScheduleRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
    PointOfServiceRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        address:
          type: string
        openingSchedule:
          type: string
        warehouses:
          type: array
          items:
            type: string
        baseStore:
          type: string
    PriceRowRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        currency:
          type: string
        catalog:
          type: string
        minqtd:
          type: integer
          format: int64
        net:
          type: boolean
        price:
          type: number
          format: double
        giveAwayPrice:
          type: boolean
        productGroup:
          type: string
        userGroup:
          type: string
        product:
          type: string
    PrincipalRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          type: string
        shippingAddress:
          type: string
        billingAddress:
          type: string
        addresses:
          type: array
          items:
            type: string
        groups:
          type: array
          items:
            type: string
        accessibleCategories:
          type: array
          items:
            type: string
        accessibleCatalogs:
          type: array
          items:
            type: string
    ProductRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        status:
          type: string
          enum:
          - APPROVED
          - DRAFT
        maxOrderQuantity:
          type: integer
          format: int32
        minOrderQuantity:
          type: integer
          format: int32
        offlineDate:
          type: string
          format: date-time
        onlineDate:
          type: string
          format: date-time
        soldIndividually:
          type: boolean
        numberOfReviews:
          type: integer
          format: int32
        averageRating:
          type: integer
          format: int32
        translations:
          type: string
        mainImage:
          type: string
        variations:
          type: array
          items:
            type: string
        variantProducts:
          type: array
          items:
            type: string
        features:
          type: array
          items:
            type: string
        categories:
          type: array
          items:
            type: string
        priceRows:
          type: array
          items:
            type: string
        taxRows:
          type: array
          items:
            type: string
        discountRows:
          type: array
          items:
            type: string
        catalog:
          type: string
        name:
          type: string
        description:
          type: string
        summary:
          type: string
        externalId:
          type: string
    ProductFeatureRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        description:
          type: string
        rawValue:
          type: string
        attribute:
          type: string
        unit:
          type: string
        product:
          type: string
        externalId:
          type: string
    StockRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        available:
          type: integer
          format: int32
        productCode:
          type: string
        reserved:
          type: integer
          format: int32
        preOrder:
          type: integer
          format: int32
        maxPreOrder:
          type: integer
          format: int32
        inStockStatus:
          type: string
          enum:
          - FORCE_IN_STOCK
          - FORCE_OUT_OF_STOCK
        warehouse:
          type: string
        externalId:
          type: string
    TaxRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        value:
          type: number
          format: double
        absolute:
          type: boolean
        currency:
          type: string
    TaxRowRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        currency:
          type: string
        catalog:
          type: string
        value:
          type: number
          format: double
        absolute:
          type: boolean
        tax:
          type: string
        productGroup:
          type: string
        userGroup:
          type: string
        product:
          type: string
    UserDiscountGroupRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: string
    UserGroupRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          type: string
        shippingAddress:
          type: string
        billingAddress:
          type: string
        addresses:
          type: array
          items:
            type: string
        accessibleCategories:
          type: array
          items:
            type: string
        accessibleCatalogs:
          type: array
          items:
            type: string
        userDiscountGroup:
          type: string
        userPriceGroup:
          type: string
        userTaxGroup:
          type: string
        members:
          type: array
          items:
            type: string
    UserPriceGroupRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: string
    UserTaxGroupRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        translations:
          type: string
    VariationRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        description:
          type: string
        options:
          type: array
          items:
            type: string
        products:
          type: array
          items:
            type: string
        externalId:
          type: string
    VariationOptionRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        description:
          type: string
        variation:
          type: string
        variantProducts:
          type: array
          items:
            type: string
        externalId:
          type: string
    WarehouseRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        defaultWareHouse:
          type: boolean
        stocks:
          type: array
          items:
            type: string
        pointOfServices:
          type: array
          items:
            type: string
        baseStores:
          type: array
          items:
            type: string
    AddressResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        duplicate:
          type: boolean
        company:
          type: string
        building:
          type: string
        email:
          type: string
        fax:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
        phone1:
          type: string
        phone2:
          type: string
        pobox:
          type: string
        postalcode:
          type: string
        streetNumber:
          type: string
        streetName:
          type: string
        town:
          type: string
        district:
          type: string
        shippingAddress:
          type: boolean
        billingAddress:
          type: boolean
        contactAddress:
          type: boolean
        visibleInAddressBook:
          type: boolean
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        region:
          $ref: '#/components/schemas/Region'
        country:
          $ref: '#/components/schemas/Country'
        title:
          $ref: '#/components/schemas/Title'
        original:
          $ref: '#/components/schemas/Address'
    AttributeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        type:
          type: string
          enum:
          - string
          - integer
          - float
          - double
          - date
        description:
          type: string
        required:
          type: boolean
        enabled:
          type: boolean
        templates:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AttributeTemplate'
        externalId:
          type: string
    AttributeTemplateResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        attributes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        categories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        externalId:
          type: string
    BaseStoreResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        expressCheckoutEnabled:
          type: boolean
        apiBaseUrl:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        paymentProvider:
          type: string
        distanceUnit:
          type: string
          enum:
          - miles
          - km
        defaultLanguage:
          $ref: '#/components/schemas/Language'
        defaultCurrency:
          $ref: '#/components/schemas/Currency'
        defaultDeliveryOrigin:
          $ref: '#/components/schemas/PointOfService'
        pointOfServices:
          type: array
          items:
            $ref: '#/components/schemas/PointOfService'
        currencies:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Currency'
        languages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Language'
        warehouses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Warehouse'
    CatalogResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        version:
          type: string
          enum:
          - STAGED
          - ONLINE
        defaultCatalog:
          type: boolean
        active:
          type: boolean
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Catalog10NAugmentation'
        allowedPrincipals:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Principal'
        name:
          type: string
        externalId:
          type: string
    CategoryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        description:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Category10NAugmentation'
        mainImage:
          $ref: '#/components/schemas/Media'
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Product'
        subCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        superCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        catalog:
          $ref: '#/components/schemas/Catalog'
        allowedPrincipals:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Principal'
        attributeTemplates:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AttributeTemplate'
        externalId:
          type: string
    CurrencyResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        base:
          type: boolean
        conversion:
          type: number
          format: double
        digits:
          type: integer
          format: int32
        symbol:
          type: string
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CurrencyL10NAugmentation'
        baseStores:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BaseStore'
    DiscountResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        value:
          type: number
          format: double
        absolute:
          type: boolean
        currency:
          $ref: '#/components/schemas/Currency'
    DiscountRowResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/Currency'
        catalog:
          $ref: '#/components/schemas/Catalog'
        value:
          type: number
          format: double
        absolute:
          type: boolean
        asTargetPrice:
          type: boolean
        discount:
          $ref: '#/components/schemas/Discount'
        productGroup:
          $ref: '#/components/schemas/ProductDiscountGroup'
        userGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        product:
          $ref: '#/components/schemas/Product'
    LanguageResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LanguageL10NAugmentation'
        baseStores:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BaseStore'
    PointOfServiceResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        openingSchedule:
          $ref: '#/components/schemas/OpeningSchedule'
        warehouses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Warehouse'
        baseStore:
          $ref: '#/components/schemas/BaseStore'
    PriceRowResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/Currency'
        catalog:
          $ref: '#/components/schemas/Catalog'
        minqtd:
          type: integer
          format: int64
        net:
          type: boolean
        price:
          type: number
          format: double
        giveAwayPrice:
          type: boolean
        productGroup:
          $ref: '#/components/schemas/ProductPriceGroup'
        userGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        product:
          $ref: '#/components/schemas/Product'
    PrincipalResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        status:
          type: string
          enum:
          - APPROVED
          - DRAFT
        maxOrderQuantity:
          type: integer
          format: int32
        minOrderQuantity:
          type: integer
          format: int32
        offlineDate:
          type: string
          format: date-time
        onlineDate:
          type: string
          format: date-time
        soldIndividually:
          type: boolean
        numberOfReviews:
          type: integer
          format: int32
        averageRating:
          type: integer
          format: int32
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductL10NAugmentation'
        mainImage:
          $ref: '#/components/schemas/Media'
        variations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Variation'
        variantProducts:
          type: array
          items:
            $ref: '#/components/schemas/VariantProduct'
        features:
          type: array
          items:
            $ref: '#/components/schemas/ProductFeature'
        categories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        priceRows:
          type: array
          items:
            $ref: '#/components/schemas/PriceRow'
        taxRows:
          type: array
          items:
            $ref: '#/components/schemas/TaxRow'
        discountRows:
          type: array
          items:
            $ref: '#/components/schemas/DiscountRow'
        catalog:
          $ref: '#/components/schemas/Catalog'
        name:
          type: string
        description:
          type: string
        summary:
          type: string
        externalId:
          type: string
    ProductFeatureResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        description:
          type: string
        rawValue:
          type: string
        attribute:
          $ref: '#/components/schemas/Attribute'
        unit:
          $ref: '#/components/schemas/AttributeUnit'
        product:
          $ref: '#/components/schemas/Product'
        externalId:
          type: string
    RegionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        isocode:
          type: string
        active:
          type: boolean
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RegionL10NAugmentation'
        country:
          $ref: '#/components/schemas/Country'
    StockResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        available:
          type: integer
          format: int32
        productCode:
          type: string
        reserved:
          type: integer
          format: int32
        preOrder:
          type: integer
          format: int32
        maxPreOrder:
          type: integer
          format: int32
        inStockStatus:
          type: string
          enum:
          - FORCE_IN_STOCK
          - FORCE_OUT_OF_STOCK
        warehouse:
          $ref: '#/components/schemas/Warehouse'
        externalId:
          type: string
    TaxRowResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/Currency'
        catalog:
          $ref: '#/components/schemas/Catalog'
        value:
          type: number
          format: double
        absolute:
          type: boolean
        tax:
          $ref: '#/components/schemas/Tax'
        productGroup:
          $ref: '#/components/schemas/ProductTaxGroup'
        userGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        product:
          $ref: '#/components/schemas/Product'
    UserGroupResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        userDiscountGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        userPriceGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        userTaxGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Principal'
    VariantProductResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        status:
          type: string
          enum:
          - APPROVED
          - DRAFT
        maxOrderQuantity:
          type: integer
          format: int32
        minOrderQuantity:
          type: integer
          format: int32
        offlineDate:
          type: string
          format: date-time
        onlineDate:
          type: string
          format: date-time
        soldIndividually:
          type: boolean
        numberOfReviews:
          type: integer
          format: int32
        averageRating:
          type: integer
          format: int32
        translations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductL10NAugmentation'
        mainImage:
          $ref: '#/components/schemas/Media'
        variations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Variation'
        variantProducts:
          type: array
          items:
            $ref: '#/components/schemas/VariantProduct'
        features:
          type: array
          items:
            $ref: '#/components/schemas/ProductFeature'
        categories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        priceRows:
          type: array
          items:
            $ref: '#/components/schemas/PriceRow'
        taxRows:
          type: array
          items:
            $ref: '#/components/schemas/TaxRow'
        discountRows:
          type: array
          items:
            $ref: '#/components/schemas/DiscountRow'
        catalog:
          $ref: '#/components/schemas/Catalog'
        baseProduct:
          $ref: '#/components/schemas/Product'
        options:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/VariationOption'
        name:
          type: string
        description:
          type: string
        summary:
          type: string
        externalId:
          type: string
    VariationResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        description:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/VariationOption'
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Product'
        externalId:
          type: string
    VariationOptionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        description:
          type: string
        variation:
          $ref: '#/components/schemas/Variation'
        variantProducts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/VariantProduct'
        externalId:
          type: string
    WarehouseResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        defaultWareHouse:
          type: boolean
        stocks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Stock'
        pointOfServices:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PointOfService'
        baseStores:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BaseStore'
    B2BBudgetRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        budget:
          type: number
        currency:
          type: string
        active:
          type: boolean
        activeFrom:
          type: string
          format: date-time
        activeTo:
          type: string
          format: date-time
        costCenters:
          type: array
          items:
            type: string
    B2BCostCenterRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        active:
          type: boolean
        currency:
          type: string
        budgets:
          type: array
          items:
            type: string
    B2BCustomerRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          type: string
        shippingAddress:
          type: string
        billingAddress:
          type: string
        addresses:
          type: array
          items:
            type: string
        groups:
          type: array
          items:
            type: string
        accessibleCategories:
          type: array
          items:
            type: string
        accessibleCatalogs:
          type: array
          items:
            type: string
        firstName:
          type: string
        lastName:
          type: string
        encodedPassword:
          type: string
        loginDisabled:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        refreshTokens:
          type: array
          items:
            type: string
        sessionLanguage:
          type: string
        sessionCurrency:
          type: string
        paymentInfos:
          type: array
          items:
            type: string
        carts:
          type: array
          items:
            type: string
        quotes:
          type: array
          items:
            type: string
        orders:
          type: array
          items:
            type: string
        priceGroup:
          type: string
        taxGroup:
          type: string
        discountGroup:
          type: string
        phoneNumber:
          type: string
        forgottenPasswordToken:
          type: string
        title:
          type: string
        defaultPaymentInfo:
          type: string
        email:
          type: string
        active:
          type: boolean
        defaultB2BUnit:
          type: string
    B2BPermissionRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        active:
          type: boolean
        message:
          type: string
        unit:
          type: string
    B2BQuoteLimitRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        amount:
          type: number
        currency:
          type: string
    B2BUnitRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          type: string
        shippingAddress:
          type: string
        billingAddress:
          type: string
        addresses:
          type: array
          items:
            type: string
        groups:
          type: array
          items:
            type: string
        accessibleCategories:
          type: array
          items:
            type: string
        accessibleCatalogs:
          type: array
          items:
            type: string
        userDiscountGroup:
          type: string
        userPriceGroup:
          type: string
        userTaxGroup:
          type: string
        members:
          type: array
          items:
            type: string
        contactAddress:
          type: string
        contact:
          type: string
        active:
          type: boolean
        quotes:
          type: array
          items:
            type: string
        orders:
          type: array
          items:
            type: string
        accountManager:
          type: string
        approvers:
          type: array
          items:
            type: string
        costCenters:
          type: array
          items:
            type: string
        quoteLimit:
          type: string
        permissions:
          type: array
          items:
            type: string
    CartRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        calculated:
          type: boolean
        date:
          type: string
          format: date-time
        deliveryCost:
          type: number
          format: double
        deliveryStatus:
          type: string
          enum:
          - NOTSHIPPED
          - PARTSHIPPED
          - SHIPPED
        name:
          type: string
        description:
          type: string
        expirationTime:
          type: string
          format: date-time
        net:
          type: boolean
        paymentCost:
          type: number
          format: double
        paymentStatus:
          type: string
          enum:
          - NOTPAID
          - PARTPAID
          - PAID
        orderStatus:
          type: string
          enum:
          - CREATED
          - ON_VALIDATION
          - COMPLETED
          - CANCELLED
        totalPrice:
          type: number
          format: double
        totalDiscounts:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        subtotal:
          type: number
          format: double
        discountsIncludeDeliveryCost:
          type: boolean
        discountsIncludePaymentCost:
          type: boolean
        deliveryNote:
          type: string
        currency:
          type: string
        deliveryAddress:
          type: string
        paymentAddress:
          type: string
        paymentInfo:
          type: string
        paymentTransactions:
          type: array
          items:
            type: string
        store:
          type: string
        discounts:
          type: array
          items:
            type: string
        entries:
          type: array
          items:
            type: string
        user:
          type: string
    CartEntryRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        entryNumber:
          type: integer
          format: int32
        product:
          type: string
        quantity:
          type: integer
          format: int64
        basePrice:
          type: number
          format: double
        totalPrice:
          type: number
          format: double
        calculated:
          type: boolean
        costCenter:
          type: string
        deliveryPointOfService:
          type: string
        order:
          type: string
    EmployeeRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          type: string
        shippingAddress:
          type: string
        billingAddress:
          type: string
        addresses:
          type: array
          items:
            type: string
        groups:
          type: array
          items:
            type: string
        accessibleCategories:
          type: array
          items:
            type: string
        accessibleCatalogs:
          type: array
          items:
            type: string
        firstName:
          type: string
        lastName:
          type: string
        encodedPassword:
          type: string
        loginDisabled:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        refreshTokens:
          type: array
          items:
            type: string
        sessionLanguage:
          type: string
        sessionCurrency:
          type: string
        paymentInfos:
          type: array
          items:
            type: string
        carts:
          type: array
          items:
            type: string
        quotes:
          type: array
          items:
            type: string
        orders:
          type: array
          items:
            type: string
        priceGroup:
          type: string
        taxGroup:
          type: string
        discountGroup:
          type: string
    OrderRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        calculated:
          type: boolean
        date:
          type: string
          format: date-time
        deliveryCost:
          type: number
          format: double
        deliveryStatus:
          type: string
          enum:
          - NOTSHIPPED
          - PARTSHIPPED
          - SHIPPED
        name:
          type: string
        description:
          type: string
        expirationTime:
          type: string
          format: date-time
        net:
          type: boolean
        paymentCost:
          type: number
          format: double
        paymentStatus:
          type: string
          enum:
          - NOTPAID
          - PARTPAID
          - PAID
        orderStatus:
          type: string
          enum:
          - CREATED
          - ON_VALIDATION
          - COMPLETED
          - CANCELLED
        totalPrice:
          type: number
          format: double
        totalDiscounts:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        subtotal:
          type: number
          format: double
        discountsIncludeDeliveryCost:
          type: boolean
        discountsIncludePaymentCost:
          type: boolean
        deliveryNote:
          type: string
        currency:
          type: string
        deliveryAddress:
          type: string
        paymentAddress:
          type: string
        paymentInfo:
          type: string
        paymentTransactions:
          type: array
          items:
            type: string
        store:
          type: string
        discounts:
          type: array
          items:
            type: string
        entries:
          type: array
          items:
            type: string
        user:
          type: string
    PaymentInfoRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        duplicate:
          type: boolean
        visibleInPaymentBook:
          type: boolean
        original:
          type: string
        user:
          type: string
        billingAddress:
          type: string
    PaymentTransactionRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        requestId:
          type: string
        requestToken:
          type: string
        paymentProvider:
          type: string
        plannedAmount:
          type: number
        currency:
          type: string
        info:
          type: string
        order:
          type: string
        entries:
          type: array
          items:
            type: string
    PaymentTransactionEntryRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        type:
          type: string
          enum:
          - AUTHORIZATION
          - CAPTURE
          - REFUND
        amount:
          type: number
        currency:
          type: string
        time:
          type: string
          format: date-time
        transactionStatus:
          type: string
        transactionStatusDetails:
          type: string
        requestToken:
          type: string
        requestId:
          type: string
        subscriptionID:
          type: string
        paymentTransaction:
          type: string
    UserRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          type: string
        shippingAddress:
          type: string
        billingAddress:
          type: string
        addresses:
          type: array
          items:
            type: string
        groups:
          type: array
          items:
            type: string
        accessibleCategories:
          type: array
          items:
            type: string
        accessibleCatalogs:
          type: array
          items:
            type: string
        firstName:
          type: string
        lastName:
          type: string
        encodedPassword:
          type: string
        loginDisabled:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        refreshTokens:
          type: array
          items:
            type: string
        sessionLanguage:
          type: string
        sessionCurrency:
          type: string
        paymentInfos:
          type: array
          items:
            type: string
        carts:
          type: array
          items:
            type: string
        quotes:
          type: array
          items:
            type: string
        orders:
          type: array
          items:
            type: string
        priceGroup:
          type: string
        taxGroup:
          type: string
        discountGroup:
          type: string
    B2BBudgetResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        budget:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        active:
          type: boolean
        activeFrom:
          type: string
          format: date-time
        activeTo:
          type: string
          format: date-time
        costCenters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/B2BCostCenter'
    B2BCostCenterResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        active:
          type: boolean
        currency:
          $ref: '#/components/schemas/Currency'
        budgets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/B2BBudget'
    CartResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        calculated:
          type: boolean
        date:
          type: string
          format: date-time
        deliveryCost:
          type: number
          format: double
        deliveryStatus:
          type: string
          enum:
          - NOTSHIPPED
          - PARTSHIPPED
          - SHIPPED
        name:
          type: string
        description:
          type: string
        expirationTime:
          type: string
          format: date-time
        net:
          type: boolean
        paymentCost:
          type: number
          format: double
        paymentStatus:
          type: string
          enum:
          - NOTPAID
          - PARTPAID
          - PAID
        orderStatus:
          type: string
          enum:
          - CREATED
          - ON_VALIDATION
          - COMPLETED
          - CANCELLED
        totalPrice:
          type: number
          format: double
        totalDiscounts:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        subtotal:
          type: number
          format: double
        discountsIncludeDeliveryCost:
          type: boolean
        discountsIncludePaymentCost:
          type: boolean
        deliveryNote:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        deliveryAddress:
          $ref: '#/components/schemas/Address'
        paymentAddress:
          $ref: '#/components/schemas/Address'
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
        paymentTransactions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransaction'
        store:
          $ref: '#/components/schemas/BaseStore'
        discounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Discount'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CartEntry'
        user:
          $ref: '#/components/schemas/User'
    CartEntryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        entryNumber:
          type: integer
          format: int32
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          format: int64
        basePrice:
          type: number
          format: double
        totalPrice:
          type: number
          format: double
        calculated:
          type: boolean
        costCenter:
          $ref: '#/components/schemas/B2BCostCenter'
        deliveryPointOfService:
          $ref: '#/components/schemas/PointOfService'
        order:
          $ref: '#/components/schemas/Cart'
    OrderResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        calculated:
          type: boolean
        date:
          type: string
          format: date-time
        deliveryCost:
          type: number
          format: double
        deliveryStatus:
          type: string
          enum:
          - NOTSHIPPED
          - PARTSHIPPED
          - SHIPPED
        name:
          type: string
        description:
          type: string
        expirationTime:
          type: string
          format: date-time
        net:
          type: boolean
        paymentCost:
          type: number
          format: double
        paymentStatus:
          type: string
          enum:
          - NOTPAID
          - PARTPAID
          - PAID
        orderStatus:
          type: string
          enum:
          - CREATED
          - ON_VALIDATION
          - COMPLETED
          - CANCELLED
        totalPrice:
          type: number
          format: double
        totalDiscounts:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        subtotal:
          type: number
          format: double
        discountsIncludeDeliveryCost:
          type: boolean
        discountsIncludePaymentCost:
          type: boolean
        deliveryNote:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        deliveryAddress:
          $ref: '#/components/schemas/Address'
        paymentAddress:
          $ref: '#/components/schemas/Address'
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
        paymentTransactions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransaction'
        store:
          $ref: '#/components/schemas/BaseStore'
        discounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Discount'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/OrderEntry'
        user:
          $ref: '#/components/schemas/User'
    PaymentInfoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        duplicate:
          type: boolean
        visibleInPaymentBook:
          type: boolean
        original:
          $ref: '#/components/schemas/PaymentInfo'
        user:
          $ref: '#/components/schemas/User'
        billingAddress:
          $ref: '#/components/schemas/Address'
    PaymentTransactionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        requestId:
          type: string
        requestToken:
          type: string
        paymentProvider:
          type: string
        plannedAmount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        info:
          $ref: '#/components/schemas/PaymentInfo'
        order:
          $ref: '#/components/schemas/AbstractOrder'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransactionEntry'
    PaymentTransactionEntryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        type:
          type: string
          enum:
          - AUTHORIZATION
          - CAPTURE
          - REFUND
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        time:
          type: string
          format: date-time
        transactionStatus:
          type: string
        transactionStatusDetails:
          type: string
        requestToken:
          type: string
        requestId:
          type: string
        subscriptionID:
          type: string
        paymentTransaction:
          $ref: '#/components/schemas/PaymentTransaction'
    B2BCustomerResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          $ref: '#/components/schemas/Media'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
        accessibleCategories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accessibleCatalogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        firstName:
          type: string
        lastName:
          type: string
        encodedPassword:
          type: string
        loginDisabled:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        refreshTokens:
          type: array
          items:
            type: string
        sessionLanguage:
          $ref: '#/components/schemas/Language'
        sessionCurrency:
          $ref: '#/components/schemas/Currency'
        paymentInfos:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInfo'
        carts:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        priceGroup:
          $ref: '#/components/schemas/UserPriceGroup'
        taxGroup:
          $ref: '#/components/schemas/UserTaxGroup'
        discountGroup:
          $ref: '#/components/schemas/UserDiscountGroup'
        phoneNumber:
          type: string
        forgottenPasswordToken:
          type: string
        title:
          $ref: '#/components/schemas/Title'
        defaultPaymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
        email:
          type: string
        active:
          type: boolean
        defaultB2BUnit:
          $ref: '#/components/schemas/B2BUnit'
    B2BPermissionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        active:
          type: boolean
        message:
          type: string
        unit:
          $ref: '#/components/schemas/B2BUnit'
    CronJobRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        jobName:
          type: string
        jobStatus:
          type: string
          enum:
          - RUNNING
          - PAUSED
          - COMPLETE
          - SCHEDULED
        cronExpression:
          type: string
        description:
          type: string
    CustomerRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        profilePicture:
          type: string
        shippingAddress:
          type: string
        billingAddress:
          type: string
        addresses:
          type: array
          items:
            type: string
        groups:
          type: array
          items:
            type: string
        accessibleCategories:
          type: array
          items:
            type: string
        accessibleCatalogs:
          type: array
          items:
            type: string
        firstName:
          type: string
        lastName:
          type: string
        encodedPassword:
          type: string
        loginDisabled:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        refreshTokens:
          type: array
          items:
            type: string
        sessionLanguage:
          type: string
        sessionCurrency:
          type: string
        paymentInfos:
          type: array
          items:
            type: string
        carts:
          type: array
          items:
            type: string
        quotes:
          type: array
          items:
            type: string
        orders:
          type: array
          items:
            type: string
        priceGroup:
          type: string
        taxGroup:
          type: string
        discountGroup:
          type: string
        phoneNumber:
          type: string
        forgottenPasswordToken:
          type: string
        title:
          type: string
        defaultPaymentInfo:
          type: string
    DebitCardPaymentInfoRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        duplicate:
          type: boolean
        visibleInPaymentBook:
          type: boolean
        original:
          type: string
        user:
          type: string
        billingAddress:
          type: string
        bankIDNumber:
          type: string
        bank:
          type: string
        accountNumber:
          type: string
        baOwner:
          type: string
    DocumentTemplateRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        uid:
          type: string
        name:
          type: string
        description:
          type: string
        content:
          type: string
        type:
          type: string
          enum:
          - velocity
    EmailAddressRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        emailAddress:
          type: string
        displayName:
          type: string
        toMessages:
          type: array
          items:
            type: string
        ccMessages:
          type: array
          items:
            type: string
        bccMessages:
          type: array
          items:
            type: string
        messagesSent:
          type: array
          items:
            type: string
    EmailMessageRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        subject:
          type: string
        body:
          type: string
        sentDate:
          type: string
          format: date-time
        sent:
          type: boolean
        attachments:
          type: array
          items:
            type: string
        toAddresses:
          type: array
          items:
            type: string
        ccAddresses:
          type: array
          items:
            type: string
        bccAddresses:
          type: array
          items:
            type: string
        fromAddress:
          type: string
    EmailAddressResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        emailAddress:
          type: string
        displayName:
          type: string
        toMessages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailMessage'
        ccMessages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailMessage'
        bccMessages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailMessage'
        messagesSent:
          type: array
          items:
            $ref: '#/components/schemas/EmailMessage'
    EmailAttachmentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        fileName:
          type: string
        altText:
          type: string
        description:
          type: string
        realFileName:
          type: string
        mimeType:
          type: string
        fileSizeInByte:
          type: integer
          format: int64
        mediaFolder:
          $ref: '#/components/schemas/MediaFolder'
        catalog:
          $ref: '#/components/schemas/Catalog'
        message:
          $ref: '#/components/schemas/EmailMessage'
        externalId:
          type: string
    EmailMessageResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        subject:
          type: string
        body:
          type: string
        sentDate:
          type: string
          format: date-time
        sent:
          type: boolean
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/EmailAttachment'
        toAddresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        ccAddresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        bccAddresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        fromAddress:
          $ref: '#/components/schemas/EmailAddress'
    CreditCardPaymentInfoRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        duplicate:
          type: boolean
        visibleInPaymentBook:
          type: boolean
        original:
          type: string
        user:
          type: string
        billingAddress:
          type: string
        ccOwner:
          type: string
        number:
          type: string
        type:
          type: string
          enum:
          - AMEX
          - VISA
          - MASTER
        validToMonth:
          type: string
        validToYear:
          type: string
        validFromMonth:
          type: string
        validFromYear:
          type: string
        subscriptionId:
          type: string
        subscriptionValidated:
          type: boolean
    B2BOrderThresholdPermissionRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        active:
          type: boolean
        message:
          type: string
        unit:
          type: string
        threshold:
          type: number
          format: double
        currency:
          type: string
    AbstractPromotionRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        enabled:
          type: boolean
        priority:
          type: integer
          format: int32
        promotionGroup:
          type: string
        restrictions:
          type: array
          items:
            type: string
    AbstractPromotionRestrictionRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        promotion:
          type: string
    PromotionGroupRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        identifier:
          type: string
        promotions:
          type: array
          items:
            type: string
    AbstractPromotionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        enabled:
          type: boolean
        priority:
          type: integer
          format: int32
        promotionGroup:
          $ref: '#/components/schemas/PromotionGroup'
        restrictions:
          type: array
          items:
            $ref: '#/components/schemas/AbstractPromotionRestriction'
    AbstractPromotionRestrictionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        promotion:
          $ref: '#/components/schemas/AbstractPromotion'
    PromotionPriceRowRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        price:
          type: number
          format: double
        currency:
          type: string
    SynchronizationLogRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        typeClass:
          type: string
        entityId:
          type: integer
          format: int64
        externalId:
          type: string
        linkedClass:
          type: string
        linkedId:
          type: integer
          format: int64
        linkedExternalId:
          type: string
        actionType:
          type: string
          enum:
          - CREATE
          - UPDATE
          - DELETE
          - LINKED
          - UNLINKED
        status:
          type: string
          enum:
          - SUCCESSFUL
          - FAILED
        retries:
          type: integer
          format: int32
        failedMessage:
          type: string
        archived:
          type: boolean
    AbstractResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        errors:
          type: array
          items:
            type: string
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
