2022-10-16 12:37:39,586 INFO  [QuartzScheduler_schedulerFactoryBean-LAPTOP-F3OP9A9T1665807415104_MisfireHandler] org.quartz.impl.jdbcjobstore.JobStoreSupport: Handling 1 trigger(s) that missed their scheduled fire-time.
2022-10-16 12:37:44,535 WARN  [B2B_DS housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper: B2B_DS - Thread starvation or clock leap detected (housekeeper delta=14h51m23s754ms65µs300ns).
2022-10-16 12:45:57,358 ERROR [http-nio-8082-exec-10] org.apache.juli.logging.DirectJDKLog: Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed; nested exception is org.springframework.web.client.RestClientException: Error while extracting response for type [class [Ldigi.ecomm.datatransferobject.product.response.B2bProduct;] and content type [application/json]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `java.util.ArrayList` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('0019a5d7-5d3e-4e98-9694-68507dc9a61e'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.ArrayList` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('0019a5d7-5d3e-4e98-9694-68507dc9a61e')
 at [Source: (PushbackInputStream); line: 1, column: 148] (through reference chain: java.lang.Object[][0]->digi.ecomm.datatransferobject.product.response.B2bProduct["categoryNames"])] with root cause
com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.ArrayList` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('0019a5d7-5d3e-4e98-9694-68507dc9a61e')
 at [Source: (PushbackInputStream); line: 1, column: 148] (through reference chain: java.lang.Object[][0]->digi.ecomm.datatransferobject.product.response.B2bProduct["categoryNames"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1728)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1353)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromString(StdDeserializer.java:311)
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.handleNonArray(StringCollectionDeserializer.java:284)
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:192)
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:182)
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:25)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:391)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:184)
	at com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer.deserialize(ObjectArrayDeserializer.java:214)
	at com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer.deserialize(ObjectArrayDeserializer.java:24)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:322)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:378)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:342)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:105)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:778)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:334)
	at digi.ecomm.commercesearch.provider.impl.ExternalIndexedProductProviderImpl.get(ExternalIndexedProductProviderImpl.java:27)
	at digi.ecomm.commercesearch.index.service.impl.IndexServiceImpl.fullIndexing(IndexServiceImpl.java:93)
	at digi.ecomm.searchstandardapi.facade.impl.ProductIndexFacadeImpl.fullIndexing(ProductIndexFacadeImpl.java:30)
	at digi.ecomm.searchstandardapi.controller.ProductIndexController.fullIndex(ProductIndexController.java:22)
	at digi.ecomm.searchstandardapi.controller.ProductIndexController$$FastClassBySpringCGLIB$$e93bec34.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at digi.ecomm.searchstandardapi.aspect.LoggingAspect.profileApiMethods(LoggingAspect.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at digi.ecomm.searchstandardapi.controller.ProductIndexController$$EnhancerBySpringCGLIB$$e753a908.fullIndex(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-10-16 13:03:37,969 WARN  [I/O dispatcher 41] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:03:38,004 WARN  [http-nio-8082-exec-1] org.elasticsearch.client.RequestLogger: request [HEAD http://localhost:9200/enterprise_product?ignore_throttled=false&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=false] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:03:38,219 WARN  [http-nio-8082-exec-1] org.elasticsearch.client.RequestLogger: request [DELETE http://localhost:9200/enterprise_product?master_timeout=30s&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=true&ignore_throttled=false&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:03:38,497 WARN  [http-nio-8082-exec-1] org.elasticsearch.client.RequestLogger: request [PUT http://localhost:9200/enterprise_product?master_timeout=30s&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:03:38,532 WARN  [I/O dispatcher 41] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:04:35,192 WARN  [I/O dispatcher 49] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:04:35,230 WARN  [http-nio-8082-exec-2] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/enterprise_product/_search?typed_keys=true&max_concurrent_shard_requests=5&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:08:29,932 WARN  [I/O dispatcher 57] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:08:29,938 WARN  [http-nio-8082-exec-4] org.elasticsearch.client.RequestLogger: request [HEAD http://localhost:9200/enterprise_product?ignore_throttled=false&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=false] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:08:30,039 WARN  [http-nio-8082-exec-4] org.elasticsearch.client.RequestLogger: request [DELETE http://localhost:9200/enterprise_product?master_timeout=30s&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=true&ignore_throttled=false&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:08:30,239 WARN  [http-nio-8082-exec-4] org.elasticsearch.client.RequestLogger: request [PUT http://localhost:9200/enterprise_product?master_timeout=30s&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:08:30,261 WARN  [I/O dispatcher 57] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:09:38,597 WARN  [I/O dispatcher 65] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:09:38,626 WARN  [http-nio-8082-exec-6] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/enterprise_product/_search?typed_keys=true&max_concurrent_shard_requests=5&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:10:07,723 ERROR [http-nio-8082-exec-7] org.apache.juli.logging.DirectJDKLog: Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed; nested exception is java.lang.ArrayIndexOutOfBoundsException: 3] with root cause
java.lang.ArrayIndexOutOfBoundsException: 3
	at digi.ecomm.searchstandardapi.strategy.SearchQueryCodecImpl.decodeQuery(SearchQueryCodecImpl.java:37)
	at digi.ecomm.searchstandardapi.strategy.SearchQueryCodecImpl.decodeQuery(SearchQueryCodecImpl.java:12)
	at digi.ecomm.searchstandardapi.facade.impl.ProductSearchFacadeImpl.searchProducts(ProductSearchFacadeImpl.java:49)
	at digi.ecomm.searchstandardapi.controller.ProductSearchController.getProducts(ProductSearchController.java:40)
	at digi.ecomm.searchstandardapi.controller.ProductSearchController$$FastClassBySpringCGLIB$$d73a15fe.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at digi.ecomm.searchstandardapi.aspect.LoggingAspect.profileApiMethods(LoggingAspect.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at digi.ecomm.searchstandardapi.controller.ProductSearchController$$EnhancerBySpringCGLIB$$c1a994a6.getProducts(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-10-16 13:11:22,166 ERROR [http-nio-8082-exec-8] org.apache.juli.logging.DirectJDKLog: Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed; nested exception is java.lang.ArrayIndexOutOfBoundsException: 3] with root cause
java.lang.ArrayIndexOutOfBoundsException: 3
	at digi.ecomm.searchstandardapi.strategy.SearchQueryCodecImpl.decodeQuery(SearchQueryCodecImpl.java:37)
	at digi.ecomm.searchstandardapi.strategy.SearchQueryCodecImpl.decodeQuery(SearchQueryCodecImpl.java:12)
	at digi.ecomm.searchstandardapi.facade.impl.ProductSearchFacadeImpl.searchProducts(ProductSearchFacadeImpl.java:49)
	at digi.ecomm.searchstandardapi.controller.ProductSearchController.getProducts(ProductSearchController.java:40)
	at digi.ecomm.searchstandardapi.controller.ProductSearchController$$FastClassBySpringCGLIB$$d73a15fe.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at digi.ecomm.searchstandardapi.aspect.LoggingAspect.profileApiMethods(LoggingAspect.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at digi.ecomm.searchstandardapi.controller.ProductSearchController$$EnhancerBySpringCGLIB$$c1a994a6.getProducts(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-10-16 13:12:06,768 WARN  [I/O dispatcher 73] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:12:06,801 WARN  [http-nio-8082-exec-9] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/enterprise_product/_search?typed_keys=true&max_concurrent_shard_requests=5&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:12:42,108 WARN  [I/O dispatcher 81] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 13:12:42,136 WARN  [http-nio-8082-exec-10] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/enterprise_product/_search?typed_keys=true&max_concurrent_shard_requests=5&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:01:36,413 INFO  [SpringApplicationShutdownHook] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665807415104 paused.
2022-10-16 14:01:37,365 INFO  [SpringApplicationShutdownHook] org.springframework.scheduling.quartz.SchedulerFactoryBean: Shutting down Quartz Scheduler
2022-10-16 14:01:37,366 INFO  [SpringApplicationShutdownHook] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665807415104 shutting down.
2022-10-16 14:01:37,368 INFO  [SpringApplicationShutdownHook] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665807415104 paused.
2022-10-16 14:01:37,372 INFO  [SpringApplicationShutdownHook] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665807415104 shutdown complete.
2022-10-16 14:01:37,375 INFO  [SpringApplicationShutdownHook] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2022-10-16 14:01:37,399 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: B2B_DS - Shutdown initiated...
2022-10-16 14:01:37,425 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: B2B_DS - Shutdown completed.
2022-10-16 14:03:24,047 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 6.2.0.Final
2022-10-16 14:03:24,066 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting SearchCustomApiApplication using Java 1.8.0_181 on LAPTOP-F3OP9A9T with PID 18956 (C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\searchcustomapi\target\classes started by DiGi-2 in C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\searchcustomapi)
2022-10-16 14:03:24,067 INFO  [main] org.springframework.boot.SpringApplication: The following profiles are active: local
2022-10-16 14:03:24,881 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-10-16 14:03:25,039 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 149 ms. Found 26 JPA repository interfaces.
2022-10-16 14:03:25,462 INFO  [main] org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor: @Bean method RepositoryRestSupportConfiguration.persistentEntityResourceBeanPostProcessor is non-static and returns an object assignable to Spring's BeanFactoryPostProcessor interface. This will result in a failure to process annotations such as @Autowired, @Resource and @PostConstruct within the method's declaring @Configuration class. Add the 'static' modifier to this method to avoid these container lifecycle issues; see @Bean javadoc for complete details.
2022-10-16 14:03:25,708 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'platformProperties' of type [digi.ecomm.platformservice.PlatformProperties$$EnhancerBySpringCGLIB$$6e1e7c40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-16 14:03:25,711 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'initialDataConfiguration' of type [digi.ecomm.platformservice.initialdata.InitialDataConfiguration$$EnhancerBySpringCGLIB$$a802a402] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-16 14:03:25,718 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'persistentConfiguration' of type [digi.ecomm.platformservice.persistent.PersistentConfiguration$$EnhancerBySpringCGLIB$$7332e982] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-16 14:03:26,380 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8082 (http)
2022-10-16 14:03:26,390 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8082"]
2022-10-16 14:03:26,391 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2022-10-16 14:03:26,392 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/9.0.56]
2022-10-16 14:03:26,508 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2022-10-16 14:03:26,509 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 2406 ms
2022-10-16 14:03:26,740 WARN  [main] com.zaxxer.hikari.HikariConfig: B2B_DS - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2022-10-16 14:03:26,741 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Starting...
2022-10-16 14:03:27,308 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Start completed.
2022-10-16 14:03:27,505 INFO  [main] org.hibernate.jpa.internal.util.LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2022-10-16 14:03:27,546 INFO  [main] org.hibernate.Version: HHH000412: Hibernate ORM core version 5.6.3.Final
2022-10-16 14:03:27,661 INFO  [main] org.hibernate.annotations.common.reflection.java.JavaReflectionManager: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-10-16 14:03:27,757 INFO  [main] org.hibernate.dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-10-16 14:03:28,392 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,394 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,394 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,395 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,395 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,396 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,396 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,397 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,401 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,401 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,402 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,402 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,403 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,409 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,409 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,409 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,410 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,410 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,411 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,411 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,412 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,412 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,412 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,413 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,413 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.User
2022-10-16 14:03:28,583 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,583 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,585 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,585 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,585 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,585 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,586 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,586 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,587 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,587 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,592 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,593 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,593 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,594 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,594 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,595 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,608 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,609 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,609 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,610 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsServerConfig
2022-10-16 14:03:28,626 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,627 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,629 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,629 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,630 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,638 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,639 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,640 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,641 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,642 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,653 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,653 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,654 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,655 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,656 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,657 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,657 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,658 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,658 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,659 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,664 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,664 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,665 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,665 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,691 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,692 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,694 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,695 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,695 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,696 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,697 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,697 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,698 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,698 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,699 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,699 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,701 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,701 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,716 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,717 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,717 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,718 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,735 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,735 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,736 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,742 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,750 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,751 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Language
2022-10-16 14:03:28,783 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,783 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,784 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,795 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,796 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,797 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,797 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,798 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,798 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,807 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,807 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,808 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.EnumEntity
2022-10-16 14:03:28,818 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,819 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,820 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,828 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,828 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,829 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserTaxGroup
2022-10-16 14:03:28,839 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,840 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,841 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,849 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,851 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,852 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,853 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,853 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,854 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,854 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,855 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,855 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,855 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,856 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,872 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,872 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,873 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,873 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,874 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,874 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,883 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.email.EmailAddress
2022-10-16 14:03:28,892 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,892 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,893 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,898 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,900 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,900 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,901 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,901 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,902 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,903 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,903 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,904 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,904 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,905 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,905 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,906 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,906 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,907 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsFacetSearchConfig
2022-10-16 14:03:28,915 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,918 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,919 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,919 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,920 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,920 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,921 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,921 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,922 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,923 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,923 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,924 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsValueRangeSet
2022-10-16 14:03:28,931 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,932 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,933 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,933 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,934 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,940 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,940 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,941 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,942 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,946 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,953 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,954 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,956 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,957 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,957 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,964 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,965 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,965 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,966 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,966 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,967 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsSort
2022-10-16 14:03:28,974 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,977 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,978 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,979 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,979 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,980 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,980 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,981 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,981 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,981 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,982 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,982 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.Principal
2022-10-16 14:03:28,994 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,995 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,996 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,996 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,996 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,997 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,997 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,998 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,998 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,999 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,999 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:28,999 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,000 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,000 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,001 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserDiscountGroup
2022-10-16 14:03:29,010 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Country
2022-10-16 14:03:29,024 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,024 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,024 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,025 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Region
2022-10-16 14:03:29,034 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,049 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,056 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,056 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,057 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,066 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,069 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,069 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,070 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,071 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,071 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig
2022-10-16 14:03:29,077 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,078 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,079 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,079 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,080 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,086 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,087 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,088 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Currency
2022-10-16 14:03:29,099 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,099 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,100 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,100 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,101 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,101 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,101 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,102 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,103 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,103 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,104 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,104 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,105 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,105 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,106 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,106 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,107 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,107 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,108 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,108 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,108 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,109 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,109 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,110 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,110 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.Employee
2022-10-16 14:03:29,123 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,123 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,124 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,124 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,124 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,125 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,125 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,126 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,126 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,126 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,127 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,127 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,128 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,134 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,134 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,135 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,135 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,136 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,136 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,142 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,142 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,143 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserPriceGroup
2022-10-16 14:03:29,165 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,166 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,167 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,175 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,176 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,179 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,180 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,180 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,181 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.email.EmailMessage
2022-10-16 14:03:29,189 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,190 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,191 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,195 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,196 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,196 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,197 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,197 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,198 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,198 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,199 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,199 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,200 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,200 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,200 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,201 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,201 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,201 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,202 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,202 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,203 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserGroup
2022-10-16 14:03:29,212 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,214 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,214 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,215 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,215 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,215 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,216 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,216 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,217 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,218 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,219 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,219 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,220 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,221 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,221 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,232 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,232 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,233 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,233 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,234 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,234 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsIndex
2022-10-16 14:03:29,243 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,244 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,245 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,245 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,245 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,249 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,250 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:03:29,250 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.catalog.Catalog
2022-10-16 14:03:33,623 INFO  [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-10-16 14:03:33,632 INFO  [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-10-16 14:03:34,179 INFO  [main] org.quartz.impl.StdSchedulerFactory: Using default implementation for ThreadExecutor
2022-10-16 14:03:34,191 INFO  [main] org.quartz.core.SchedulerSignalerImpl: Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-10-16 14:03:34,192 INFO  [main] org.quartz.core.QuartzScheduler: Quartz Scheduler v.2.3.2 created.
2022-10-16 14:03:34,195 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: Using db table-based data access locking (synchronization).
2022-10-16 14:03:34,197 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreCMT: JobStoreCMT initialized.
2022-10-16 14:03:34,198 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler meta-data: Quartz Scheduler (v2.3.2) 'schedulerFactoryBean' with instanceId 'LAPTOP-F3OP9A9T1665903814180'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 25 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-10-16 14:03:34,198 INFO  [main] org.quartz.impl.StdSchedulerFactory: Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2022-10-16 14:03:34,199 INFO  [main] org.quartz.impl.StdSchedulerFactory: Quartz scheduler version: 2.3.2
2022-10-16 14:03:34,203 INFO  [main] org.quartz.core.QuartzScheduler: JobFactory set to: digi.ecomm.platformservice.cronjob.job.CronJobFactory@4010f232
2022-10-16 14:03:37,046 INFO  [main] org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration: 

Using generated security password: ab9375e7-66d3-4cf5-aa6d-38e66557b98d

2022-10-16 14:03:37,194 INFO  [main] org.springframework.security.web.DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a9ba6c2, org.springframework.security.web.context.SecurityContextPersistenceFilter@e9fa0ea, org.springframework.security.web.header.HeaderWriterFilter@3aafa1c1, org.springframework.web.filter.CorsFilter@2e940dd0, org.springframework.security.web.authentication.logout.LogoutFilter@f55ecec, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c5c53e5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34d08905, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24a4e9c0, org.springframework.security.web.session.SessionManagementFilter@5ed4c87, org.springframework.security.web.access.ExceptionTranslationFilter@434c179e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4c2b8df7]
2022-10-16 14:03:37,908 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8082"]
2022-10-16 14:03:37,918 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port(s): 8082 (http) with context path '/api'
2022-10-16 14:03:37,919 INFO  [main] org.springframework.scheduling.quartz.SchedulerFactoryBean: Starting Quartz Scheduler now
2022-10-16 14:03:37,936 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: ClusterManager: detected 1 failed or restarted instances.
2022-10-16 14:03:37,937 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: ClusterManager: Scanning for instance "LAPTOP-F3OP9A9T1665807415104"'s failed in-progress jobs.
2022-10-16 14:03:37,962 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665903814180 started.
2022-10-16 14:03:37,973 INFO  [main] org.springframework.boot.StartupInfoLogger: Started SearchCustomApiApplication in 14.403 seconds (JVM running for 14.877)
2022-10-16 14:03:38,535 INFO  [main] org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl: HHH000010: On release of batch it still contained JDBC statements
2022-10-16 14:03:38,536 ERROR [main] org.hibernate.engine.jdbc.batch.internal.BatchingBatch: HHH000315: Exception executing batch [java.sql.BatchUpdateException: Duplicate entry 'categoryNames-1002' for key 'UKsm9eyd77gao32k0pf8x73l6sk'], SQL: insert into es_indexed_property (created_by, created_date, last_modified_by, last_modified_date, persistent_version, display_name, facet, facet_display_name_provider, facet_type, field_name_provider, field_value_provider, format, fts_fuzzy_query, fts_fuzzy_query_fuzziness, fts_query, fts_query_boost, include_in_facets, include_in_response, index_id, indexed, multi_fields_type, name, outer_property_id, priority, type, use_for_auto_completion, use_for_highlighting, value_range_set_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-10-16 14:03:38,538 WARN  [main] org.hibernate.engine.jdbc.spi.SqlExceptionHelper: SQL Error: 1062, SQLState: 23000
2022-10-16 14:03:38,540 ERROR [main] org.hibernate.engine.jdbc.spi.SqlExceptionHelper: Duplicate entry 'categoryNames-1002' for key 'UKsm9eyd77gao32k0pf8x73l6sk'
2022-10-16 14:03:38,587 ERROR [main] org.springframework.boot.SpringApplication: Application run failed
org.springframework.dao.DataIntegrityViolationException: could not execute batch; SQL [insert into es_indexed_property (created_by, created_date, last_modified_by, last_modified_date, persistent_version, display_name, facet, facet_display_name_provider, facet_type, field_name_provider, field_value_provider, format, fts_fuzzy_query, fts_fuzzy_query_fuzziness, fts_query, fts_query_boost, include_in_facets, include_in_response, index_id, indexed, multi_fields_type, name, outer_property_id, priority, type, use_for_auto_completion, use_for_highlighting, value_range_set_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]; constraint [UKsm9eyd77gao32k0pf8x73l6sk]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute batch
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy210.save(Unknown Source)
	at digi.ecomm.commercesearch.SearchSampleData.createIndexedProperties(SearchSampleData.java:795)
	at digi.ecomm.commercesearch.SearchSampleData.createData(SearchSampleData.java:86)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at digi.ecomm.platformservice.initialdata.setup.InitialDataSetup.handleApplicationReadyEvent(InitialDataSetup.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:344)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:229)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:114)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:82)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:120)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:114)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:82)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1301)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1290)
	at digi.ecomm.searchcustomapi.SearchCustomApiApplication.main(SearchCustomApiApplication.java:16)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute batch
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.batch.internal.BatchingBatch.performExecution(BatchingBatch.java:131)
	at org.hibernate.engine.jdbc.batch.internal.BatchingBatch.doExecuteBatch(BatchingBatch.java:106)
	at org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl.execute(AbstractBatchImpl.java:148)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:198)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:633)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1402)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:493)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3285)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2420)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 40 common frames omitted
Caused by: java.sql.BatchUpdateException: Duplicate entry 'categoryNames-1002' for key 'UKsm9eyd77gao32k0pf8x73l6sk'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.util.Util.handleNewInstance(Util.java:192)
	at com.mysql.cj.util.Util.getInstance(Util.java:167)
	at com.mysql.cj.util.Util.getInstance(Util.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLError.createBatchUpdateException(SQLError.java:224)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchSerially(ClientPreparedStatement.java:853)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchInternal(ClientPreparedStatement.java:435)
	at com.mysql.cj.jdbc.StatementImpl.executeBatch(StatementImpl.java:800)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at net.ttddyy.dsproxy.proxy.StatementProxyLogic.performQueryExecutionListener(StatementProxyLogic.java:316)
	at net.ttddyy.dsproxy.proxy.StatementProxyLogic.access$700(StatementProxyLogic.java:37)
	at net.ttddyy.dsproxy.proxy.StatementProxyLogic$1.execute(StatementProxyLogic.java:123)
	at net.ttddyy.dsproxy.listener.MethodExecutionListenerUtils.invoke(MethodExecutionListenerUtils.java:42)
	at net.ttddyy.dsproxy.proxy.StatementProxyLogic.invoke(StatementProxyLogic.java:120)
	at net.ttddyy.dsproxy.proxy.jdk.PreparedStatementInvocationHandler.invoke(PreparedStatementInvocationHandler.java:37)
	at com.sun.proxy.$Proxy166.executeBatch(Unknown Source)
	at org.hibernate.engine.jdbc.batch.internal.BatchingBatch.performExecution(BatchingBatch.java:121)
	... 60 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'categoryNames-1002' for key 'UKsm9eyd77gao32k0pf8x73l6sk'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchSerially(ClientPreparedStatement.java:832)
	... 76 common frames omitted
2022-10-16 14:03:38,593 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665903814180 paused.
2022-10-16 14:03:38,905 INFO  [main] org.springframework.scheduling.quartz.SchedulerFactoryBean: Shutting down Quartz Scheduler
2022-10-16 14:03:38,905 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665903814180 shutting down.
2022-10-16 14:03:38,906 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665903814180 paused.
2022-10-16 14:03:38,907 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665903814180 shutdown complete.
2022-10-16 14:03:38,908 INFO  [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2022-10-16 14:03:38,909 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Shutdown initiated...
2022-10-16 14:03:38,917 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Shutdown completed.
2022-10-16 14:06:33,323 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 6.2.0.Final
2022-10-16 14:06:33,348 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting SearchCustomApiApplication using Java 1.8.0_181 on LAPTOP-F3OP9A9T with PID 17232 (C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\searchcustomapi\target\classes started by DiGi-2 in C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\searchcustomapi)
2022-10-16 14:06:33,349 INFO  [main] org.springframework.boot.SpringApplication: The following profiles are active: local
2022-10-16 14:06:34,195 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-10-16 14:06:34,350 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 146 ms. Found 26 JPA repository interfaces.
2022-10-16 14:06:34,778 INFO  [main] org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor: @Bean method RepositoryRestSupportConfiguration.persistentEntityResourceBeanPostProcessor is non-static and returns an object assignable to Spring's BeanFactoryPostProcessor interface. This will result in a failure to process annotations such as @Autowired, @Resource and @PostConstruct within the method's declaring @Configuration class. Add the 'static' modifier to this method to avoid these container lifecycle issues; see @Bean javadoc for complete details.
2022-10-16 14:06:35,035 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'platformProperties' of type [digi.ecomm.platformservice.PlatformProperties$$EnhancerBySpringCGLIB$$2e6270f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-16 14:06:35,038 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'initialDataConfiguration' of type [digi.ecomm.platformservice.initialdata.InitialDataConfiguration$$EnhancerBySpringCGLIB$$684698b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-16 14:06:35,046 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'persistentConfiguration' of type [digi.ecomm.platformservice.persistent.PersistentConfiguration$$EnhancerBySpringCGLIB$$3376de32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-16 14:06:35,702 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8082 (http)
2022-10-16 14:06:35,712 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8082"]
2022-10-16 14:06:35,713 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2022-10-16 14:06:35,714 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/9.0.56]
2022-10-16 14:06:35,836 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2022-10-16 14:06:35,836 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 2434 ms
2022-10-16 14:06:36,071 WARN  [main] com.zaxxer.hikari.HikariConfig: B2B_DS - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2022-10-16 14:06:36,072 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Starting...
2022-10-16 14:06:36,694 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Start completed.
2022-10-16 14:06:36,919 INFO  [main] org.hibernate.jpa.internal.util.LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2022-10-16 14:06:36,960 INFO  [main] org.hibernate.Version: HHH000412: Hibernate ORM core version 5.6.3.Final
2022-10-16 14:06:37,074 INFO  [main] org.hibernate.annotations.common.reflection.java.JavaReflectionManager: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-10-16 14:06:37,170 INFO  [main] org.hibernate.dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-10-16 14:06:37,768 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,769 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,771 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,771 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,772 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,773 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,773 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,774 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,779 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,779 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,780 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,780 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,781 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,781 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,782 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,782 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,783 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,783 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,784 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,784 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,785 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,785 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,786 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,786 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,786 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.User
2022-10-16 14:06:37,952 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,953 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,954 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,954 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,955 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,955 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,956 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,956 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,957 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,957 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,958 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,958 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,959 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,960 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,960 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,961 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,966 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,967 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,968 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,969 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsServerConfig
2022-10-16 14:06:37,986 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,986 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,987 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,988 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,988 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:37,999 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,000 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,001 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,002 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,002 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,013 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,014 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,014 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,015 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,015 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,016 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,016 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,017 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,017 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,017 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,018 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,018 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,018 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,022 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,065 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,066 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,067 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,068 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,068 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,069 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,070 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,070 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,072 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,072 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,073 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,073 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,075 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,076 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,089 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,095 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,095 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,096 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,114 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,114 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,114 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,120 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,129 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,131 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Language
2022-10-16 14:06:38,147 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,148 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,148 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,159 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,160 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,161 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,162 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,162 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,163 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,170 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,171 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,172 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.EnumEntity
2022-10-16 14:06:38,182 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,183 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,186 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,193 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,194 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,195 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserTaxGroup
2022-10-16 14:06:38,204 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,205 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,206 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,213 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,214 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,215 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,218 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,218 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,219 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,219 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,219 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,220 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,220 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,221 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,236 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,237 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,238 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,238 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,239 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,239 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,248 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.email.EmailAddress
2022-10-16 14:06:38,258 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,259 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,259 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,265 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,265 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,266 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,267 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,267 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,268 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,268 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,269 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,269 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,270 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,270 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,271 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,271 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,271 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,272 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsFacetSearchConfig
2022-10-16 14:06:38,281 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,285 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,286 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,286 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,287 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,287 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,287 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,288 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,289 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,289 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,290 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,291 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsValueRangeSet
2022-10-16 14:06:38,298 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,300 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,301 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,302 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,302 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,308 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,309 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,309 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,310 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,311 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,321 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,322 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,323 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,324 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,324 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,331 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,332 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,332 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,333 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,333 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,337 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsSort
2022-10-16 14:06:38,345 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,346 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,347 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,347 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,348 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,348 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,349 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,349 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,350 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,350 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,350 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,351 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.Principal
2022-10-16 14:06:38,359 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,363 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,363 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,363 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,364 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,365 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,366 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,366 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,367 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,367 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,368 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,368 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,368 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,369 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,370 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserDiscountGroup
2022-10-16 14:06:38,379 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Country
2022-10-16 14:06:38,389 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,391 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,391 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,392 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Region
2022-10-16 14:06:38,402 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,402 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,410 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,417 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,418 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,426 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,427 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,428 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,428 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,429 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,429 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig
2022-10-16 14:06:38,435 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,436 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,436 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,442 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,443 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,446 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,447 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,448 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Currency
2022-10-16 14:06:38,458 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,461 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,462 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,462 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,463 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,463 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,463 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,464 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,464 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,464 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,465 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,465 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,466 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,466 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,467 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,467 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,468 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,468 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,468 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,469 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,469 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,469 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,470 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,470 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,470 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.Employee
2022-10-16 14:06:38,481 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,481 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,482 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,482 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,483 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,483 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,484 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,484 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,484 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,485 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,492 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,492 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,493 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,493 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,493 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,494 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,494 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,495 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,495 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,501 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,506 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,507 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserPriceGroup
2022-10-16 14:06:38,528 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,528 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,529 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,537 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,537 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,538 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,539 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,539 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,539 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.email.EmailMessage
2022-10-16 14:06:38,547 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,548 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,548 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,553 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,553 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,553 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,554 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,554 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,555 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,555 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,556 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,556 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,557 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,557 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,558 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,558 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,559 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,560 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,560 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,560 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,561 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserGroup
2022-10-16 14:06:38,569 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,572 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,572 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,573 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,573 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,574 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,574 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,575 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,575 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,576 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,576 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,576 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,577 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,577 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,578 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,583 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,588 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,588 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,589 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,590 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,591 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsIndex
2022-10-16 14:06:38,596 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,597 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,601 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,601 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,601 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,605 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,606 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:06:38,607 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.catalog.Catalog
2022-10-16 14:06:42,254 INFO  [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-10-16 14:06:42,262 INFO  [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-10-16 14:06:42,808 INFO  [main] org.quartz.impl.StdSchedulerFactory: Using default implementation for ThreadExecutor
2022-10-16 14:06:42,820 INFO  [main] org.quartz.core.SchedulerSignalerImpl: Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-10-16 14:06:42,820 INFO  [main] org.quartz.core.QuartzScheduler: Quartz Scheduler v.2.3.2 created.
2022-10-16 14:06:42,825 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: Using db table-based data access locking (synchronization).
2022-10-16 14:06:42,827 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreCMT: JobStoreCMT initialized.
2022-10-16 14:06:42,828 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler meta-data: Quartz Scheduler (v2.3.2) 'schedulerFactoryBean' with instanceId 'LAPTOP-F3OP9A9T1665904002810'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 25 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-10-16 14:06:42,829 INFO  [main] org.quartz.impl.StdSchedulerFactory: Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2022-10-16 14:06:42,830 INFO  [main] org.quartz.impl.StdSchedulerFactory: Quartz scheduler version: 2.3.2
2022-10-16 14:06:42,830 INFO  [main] org.quartz.core.QuartzScheduler: JobFactory set to: digi.ecomm.platformservice.cronjob.job.CronJobFactory@dffcf1
2022-10-16 14:06:45,643 INFO  [main] org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration: 

Using generated security password: 406747c7-7903-4629-bc5d-0362d413df5a

2022-10-16 14:06:45,799 INFO  [main] org.springframework.security.web.DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@72f86029, org.springframework.security.web.context.SecurityContextPersistenceFilter@12dab9a8, org.springframework.security.web.header.HeaderWriterFilter@85446a, org.springframework.web.filter.CorsFilter@740ef827, org.springframework.security.web.authentication.logout.LogoutFilter@27a57c66, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b204439, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f1b0ead, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@198eeb36, org.springframework.security.web.session.SessionManagementFilter@23182d4d, org.springframework.security.web.access.ExceptionTranslationFilter@2a0a178f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2aabd5a0]
2022-10-16 14:06:46,508 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8082"]
2022-10-16 14:06:46,518 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port(s): 8082 (http) with context path '/api'
2022-10-16 14:06:46,519 INFO  [main] org.springframework.scheduling.quartz.SchedulerFactoryBean: Starting Quartz Scheduler now
2022-10-16 14:06:46,539 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: ClusterManager: detected 1 failed or restarted instances.
2022-10-16 14:06:46,539 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: ClusterManager: Scanning for instance "LAPTOP-F3OP9A9T1665903814180"'s failed in-progress jobs.
2022-10-16 14:06:46,614 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665904002810 started.
2022-10-16 14:06:46,626 INFO  [main] org.springframework.boot.StartupInfoLogger: Started SearchCustomApiApplication in 13.783 seconds (JVM running for 14.258)
2022-10-16 14:06:47,170 INFO  [main] org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl: HHH000010: On release of batch it still contained JDBC statements
2022-10-16 14:06:47,171 ERROR [main] org.hibernate.engine.jdbc.batch.internal.BatchingBatch: HHH000315: Exception executing batch [java.sql.BatchUpdateException: Duplicate entry 'categoryNames-1002' for key 'UKsm9eyd77gao32k0pf8x73l6sk'], SQL: insert into es_indexed_property (created_by, created_date, last_modified_by, last_modified_date, persistent_version, display_name, facet, facet_display_name_provider, facet_type, field_name_provider, field_value_provider, format, fts_fuzzy_query, fts_fuzzy_query_fuzziness, fts_query, fts_query_boost, include_in_facets, include_in_response, index_id, indexed, multi_fields_type, name, outer_property_id, priority, type, use_for_auto_completion, use_for_highlighting, value_range_set_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-10-16 14:06:47,174 WARN  [main] org.hibernate.engine.jdbc.spi.SqlExceptionHelper: SQL Error: 1062, SQLState: 23000
2022-10-16 14:06:47,176 ERROR [main] org.hibernate.engine.jdbc.spi.SqlExceptionHelper: Duplicate entry 'categoryNames-1002' for key 'UKsm9eyd77gao32k0pf8x73l6sk'
2022-10-16 14:06:47,223 ERROR [main] org.springframework.boot.SpringApplication: Application run failed
org.springframework.dao.DataIntegrityViolationException: could not execute batch; SQL [insert into es_indexed_property (created_by, created_date, last_modified_by, last_modified_date, persistent_version, display_name, facet, facet_display_name_provider, facet_type, field_name_provider, field_value_provider, format, fts_fuzzy_query, fts_fuzzy_query_fuzziness, fts_query, fts_query_boost, include_in_facets, include_in_response, index_id, indexed, multi_fields_type, name, outer_property_id, priority, type, use_for_auto_completion, use_for_highlighting, value_range_set_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]; constraint [UKsm9eyd77gao32k0pf8x73l6sk]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute batch
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy197.save(Unknown Source)
	at digi.ecomm.commercesearch.SearchSampleData.createIndexedProperties(SearchSampleData.java:795)
	at digi.ecomm.commercesearch.SearchSampleData.createData(SearchSampleData.java:86)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at digi.ecomm.platformservice.initialdata.setup.InitialDataSetup.handleApplicationReadyEvent(InitialDataSetup.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:344)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:229)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.boot.context.event.EventPublishingRunListener.ready(EventPublishingRunListener.java:114)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$ready$6(SpringApplicationRunListeners.java:82)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:120)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:114)
	at org.springframework.boot.SpringApplicationRunListeners.ready(SpringApplicationRunListeners.java:82)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1301)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1290)
	at digi.ecomm.searchcustomapi.SearchCustomApiApplication.main(SearchCustomApiApplication.java:16)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute batch
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.batch.internal.BatchingBatch.performExecution(BatchingBatch.java:131)
	at org.hibernate.engine.jdbc.batch.internal.BatchingBatch.doExecuteBatch(BatchingBatch.java:106)
	at org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl.execute(AbstractBatchImpl.java:148)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:198)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:633)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1402)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:493)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3285)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2420)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 40 common frames omitted
Caused by: java.sql.BatchUpdateException: Duplicate entry 'categoryNames-1002' for key 'UKsm9eyd77gao32k0pf8x73l6sk'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.util.Util.handleNewInstance(Util.java:192)
	at com.mysql.cj.util.Util.getInstance(Util.java:167)
	at com.mysql.cj.util.Util.getInstance(Util.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLError.createBatchUpdateException(SQLError.java:224)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchSerially(ClientPreparedStatement.java:853)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchInternal(ClientPreparedStatement.java:435)
	at com.mysql.cj.jdbc.StatementImpl.executeBatch(StatementImpl.java:800)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at net.ttddyy.dsproxy.proxy.StatementProxyLogic.performQueryExecutionListener(StatementProxyLogic.java:316)
	at net.ttddyy.dsproxy.proxy.StatementProxyLogic.access$700(StatementProxyLogic.java:37)
	at net.ttddyy.dsproxy.proxy.StatementProxyLogic$1.execute(StatementProxyLogic.java:123)
	at net.ttddyy.dsproxy.listener.MethodExecutionListenerUtils.invoke(MethodExecutionListenerUtils.java:42)
	at net.ttddyy.dsproxy.proxy.StatementProxyLogic.invoke(StatementProxyLogic.java:120)
	at net.ttddyy.dsproxy.proxy.jdk.PreparedStatementInvocationHandler.invoke(PreparedStatementInvocationHandler.java:37)
	at com.sun.proxy.$Proxy166.executeBatch(Unknown Source)
	at org.hibernate.engine.jdbc.batch.internal.BatchingBatch.performExecution(BatchingBatch.java:121)
	... 60 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'categoryNames-1002' for key 'UKsm9eyd77gao32k0pf8x73l6sk'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchSerially(ClientPreparedStatement.java:832)
	... 76 common frames omitted
2022-10-16 14:06:47,229 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665904002810 paused.
2022-10-16 14:06:47,542 INFO  [main] org.springframework.scheduling.quartz.SchedulerFactoryBean: Shutting down Quartz Scheduler
2022-10-16 14:06:47,543 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665904002810 shutting down.
2022-10-16 14:06:47,544 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665904002810 paused.
2022-10-16 14:06:47,550 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665904002810 shutdown complete.
2022-10-16 14:06:47,551 INFO  [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2022-10-16 14:06:47,553 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Shutdown initiated...
2022-10-16 14:06:47,562 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Shutdown completed.
2022-10-16 14:08:17,477 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 6.2.0.Final
2022-10-16 14:08:17,498 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting SearchCustomApiApplication using Java 1.8.0_181 on LAPTOP-F3OP9A9T with PID 25896 (C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\searchcustomapi\target\classes started by DiGi-2 in C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\searchcustomapi)
2022-10-16 14:08:17,499 INFO  [main] org.springframework.boot.SpringApplication: The following profiles are active: local
2022-10-16 14:08:18,248 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-10-16 14:08:18,405 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 148 ms. Found 26 JPA repository interfaces.
2022-10-16 14:08:18,832 INFO  [main] org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor: @Bean method RepositoryRestSupportConfiguration.persistentEntityResourceBeanPostProcessor is non-static and returns an object assignable to Spring's BeanFactoryPostProcessor interface. This will result in a failure to process annotations such as @Autowired, @Resource and @PostConstruct within the method's declaring @Configuration class. Add the 'static' modifier to this method to avoid these container lifecycle issues; see @Bean javadoc for complete details.
2022-10-16 14:08:19,082 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'platformProperties' of type [digi.ecomm.platformservice.PlatformProperties$$EnhancerBySpringCGLIB$$6e1e7c40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-16 14:08:19,085 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'initialDataConfiguration' of type [digi.ecomm.platformservice.initialdata.InitialDataConfiguration$$EnhancerBySpringCGLIB$$a802a402] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-16 14:08:19,092 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'persistentConfiguration' of type [digi.ecomm.platformservice.persistent.PersistentConfiguration$$EnhancerBySpringCGLIB$$7332e982] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-16 14:08:19,752 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8082 (http)
2022-10-16 14:08:19,762 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8082"]
2022-10-16 14:08:19,763 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2022-10-16 14:08:19,764 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/9.0.56]
2022-10-16 14:08:19,879 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2022-10-16 14:08:19,879 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 2346 ms
2022-10-16 14:08:20,116 WARN  [main] com.zaxxer.hikari.HikariConfig: B2B_DS - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2022-10-16 14:08:20,117 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Starting...
2022-10-16 14:08:20,671 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Start completed.
2022-10-16 14:08:20,860 INFO  [main] org.hibernate.jpa.internal.util.LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2022-10-16 14:08:20,903 INFO  [main] org.hibernate.Version: HHH000412: Hibernate ORM core version 5.6.3.Final
2022-10-16 14:08:21,018 INFO  [main] org.hibernate.annotations.common.reflection.java.JavaReflectionManager: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-10-16 14:08:21,113 INFO  [main] org.hibernate.dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-10-16 14:08:21,719 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,721 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,728 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,728 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,729 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,730 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,730 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,731 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,735 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,736 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,736 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,737 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,738 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,739 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,739 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,740 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,741 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,741 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,742 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,742 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,743 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,743 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,744 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,751 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,752 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.User
2022-10-16 14:08:21,927 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,928 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,929 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,930 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,930 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,931 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,931 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,932 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,932 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,933 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,933 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,934 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,934 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,935 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,935 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,936 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,941 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,943 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,943 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,944 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsServerConfig
2022-10-16 14:08:21,961 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,961 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,962 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,963 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,963 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,973 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,978 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,980 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,980 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,981 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,991 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,992 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,992 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,993 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,993 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,994 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,994 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,994 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,995 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,995 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,996 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,996 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,996 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:21,997 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,021 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,022 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,023 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,023 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,024 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,024 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,025 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,025 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,026 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,026 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,027 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,027 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,029 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,029 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,048 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,049 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,050 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,050 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,066 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,067 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,067 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,075 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,075 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,079 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Language
2022-10-16 14:08:22,096 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,097 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,097 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,126 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,127 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,129 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,130 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,130 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,131 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,139 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,150 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,151 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.EnumEntity
2022-10-16 14:08:22,161 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,162 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,162 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,169 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,171 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,172 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserTaxGroup
2022-10-16 14:08:22,181 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,182 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,182 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,190 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,191 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,192 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,193 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,193 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,194 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,195 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,195 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,196 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,196 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,197 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,211 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,212 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,213 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,213 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,214 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,214 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,224 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.email.EmailAddress
2022-10-16 14:08:22,232 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,232 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,233 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,237 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,239 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,240 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,241 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,241 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,242 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,242 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,243 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,243 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,243 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,244 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,244 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,245 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,245 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,246 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsFacetSearchConfig
2022-10-16 14:08:22,261 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,261 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,264 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,264 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,265 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,265 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,266 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,266 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,267 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,268 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,268 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,269 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsValueRangeSet
2022-10-16 14:08:22,276 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,276 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,277 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,277 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,278 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,290 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,291 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,292 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,292 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,293 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,300 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,301 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,301 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,302 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,302 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,309 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,313 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,313 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,314 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,314 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,315 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsSort
2022-10-16 14:08:22,321 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,322 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,323 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,323 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,324 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,324 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,325 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,331 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,331 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,332 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,332 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,332 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.Principal
2022-10-16 14:08:22,340 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,341 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,344 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,346 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,346 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,346 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,347 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,347 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,348 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,348 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,349 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,349 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,349 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,350 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,351 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserDiscountGroup
2022-10-16 14:08:22,359 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Country
2022-10-16 14:08:22,372 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,374 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,375 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,375 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Region
2022-10-16 14:08:22,384 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,385 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,395 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,400 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,401 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,410 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,410 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,411 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,411 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,412 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,412 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig
2022-10-16 14:08:22,418 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,419 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,420 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,420 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,421 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,431 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,432 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,433 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Currency
2022-10-16 14:08:22,444 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,445 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,445 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,445 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,446 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,446 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,447 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,447 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,448 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,448 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,448 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,449 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,449 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,449 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,450 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,450 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,451 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,451 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,451 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,452 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,452 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,453 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,461 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,461 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,462 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.Employee
2022-10-16 14:08:22,474 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,479 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,480 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,480 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,480 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,481 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,481 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,481 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,482 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,482 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,483 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,483 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,483 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,484 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,484 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,485 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,485 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,486 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,486 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,492 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,492 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,493 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserPriceGroup
2022-10-16 14:08:22,519 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,520 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,520 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,527 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,528 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,529 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,529 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,530 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,530 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.email.EmailMessage
2022-10-16 14:08:22,539 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,539 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,540 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,540 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,541 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,541 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,542 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,542 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,543 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,543 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,544 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,544 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,544 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,545 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,545 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,545 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,546 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,546 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,547 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,547 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,547 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserGroup
2022-10-16 14:08:22,556 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,557 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,558 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,558 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,558 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,559 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,559 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,559 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,560 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,560 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,561 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,561 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,562 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,562 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,562 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,566 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,567 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,567 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,568 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,568 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,569 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsIndex
2022-10-16 14:08:22,575 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,575 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,576 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,576 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,577 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,581 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,587 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:08:22,588 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.catalog.Catalog
2022-10-16 14:08:26,239 INFO  [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-10-16 14:08:26,248 INFO  [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-10-16 14:08:26,797 INFO  [main] org.quartz.impl.StdSchedulerFactory: Using default implementation for ThreadExecutor
2022-10-16 14:08:26,809 INFO  [main] org.quartz.core.SchedulerSignalerImpl: Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-10-16 14:08:26,809 INFO  [main] org.quartz.core.QuartzScheduler: Quartz Scheduler v.2.3.2 created.
2022-10-16 14:08:26,814 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: Using db table-based data access locking (synchronization).
2022-10-16 14:08:26,817 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreCMT: JobStoreCMT initialized.
2022-10-16 14:08:26,817 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler meta-data: Quartz Scheduler (v2.3.2) 'schedulerFactoryBean' with instanceId 'LAPTOP-F3OP9A9T1665904106799'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 25 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-10-16 14:08:26,818 INFO  [main] org.quartz.impl.StdSchedulerFactory: Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2022-10-16 14:08:26,818 INFO  [main] org.quartz.impl.StdSchedulerFactory: Quartz scheduler version: 2.3.2
2022-10-16 14:08:26,819 INFO  [main] org.quartz.core.QuartzScheduler: JobFactory set to: digi.ecomm.platformservice.cronjob.job.CronJobFactory@24be6e34
2022-10-16 14:08:29,627 INFO  [main] org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration: 

Using generated security password: d8c5c999-0d67-4272-b82c-f3478810ca90

2022-10-16 14:08:29,781 INFO  [main] org.springframework.security.web.DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5843ab8, org.springframework.security.web.context.SecurityContextPersistenceFilter@230383a7, org.springframework.security.web.header.HeaderWriterFilter@1264dbc9, org.springframework.web.filter.CorsFilter@3f679ce, org.springframework.security.web.authentication.logout.LogoutFilter@572d1f18, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@423325e0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a262e93, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@77393f2e, org.springframework.security.web.session.SessionManagementFilter@340ef431, org.springframework.security.web.access.ExceptionTranslationFilter@7c943143, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@76b9056d]
2022-10-16 14:08:30,544 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8082"]
2022-10-16 14:08:30,553 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port(s): 8082 (http) with context path '/api'
2022-10-16 14:08:30,556 INFO  [main] org.springframework.scheduling.quartz.SchedulerFactoryBean: Starting Quartz Scheduler now
2022-10-16 14:08:30,572 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: ClusterManager: detected 1 failed or restarted instances.
2022-10-16 14:08:30,572 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: ClusterManager: Scanning for instance "LAPTOP-F3OP9A9T1665904002810"'s failed in-progress jobs.
2022-10-16 14:08:30,645 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665904106799 started.
2022-10-16 14:08:30,680 INFO  [main] org.springframework.boot.StartupInfoLogger: Started SearchCustomApiApplication in 13.675 seconds (JVM running for 14.185)
2022-10-16 14:10:00,116 INFO  [http-nio-8082-exec-1] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-10-16 14:10:07,443 INFO  [http-nio-8082-exec-1] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2022-10-16 14:10:07,451 INFO  [http-nio-8082-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 4 ms
2022-10-16 14:10:07,753 WARN  [I/O dispatcher 9] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:10:07,767 WARN  [http-nio-8082-exec-1] org.elasticsearch.client.RequestLogger: request [HEAD http://localhost:9200/enterprise_product?ignore_throttled=false&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=false] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:10:07,871 WARN  [http-nio-8082-exec-1] org.elasticsearch.client.RequestLogger: request [DELETE http://localhost:9200/enterprise_product?master_timeout=30s&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=true&ignore_throttled=false&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:10:08,269 WARN  [http-nio-8082-exec-1] org.elasticsearch.client.RequestLogger: request [PUT http://localhost:9200/enterprise_product?master_timeout=30s&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:10:08,635 WARN  [I/O dispatcher 9] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:11:28,267 WARN  [I/O dispatcher 17] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:11:28,286 WARN  [http-nio-8082-exec-3] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/enterprise_product/_search?typed_keys=true&max_concurrent_shard_requests=5&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:12:08,013 WARN  [I/O dispatcher 25] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:12:08,032 WARN  [http-nio-8082-exec-4] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/enterprise_product/_search?typed_keys=true&max_concurrent_shard_requests=5&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:12:27,135 WARN  [I/O dispatcher 33] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:12:27,150 WARN  [http-nio-8082-exec-5] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/enterprise_product/_search?typed_keys=true&max_concurrent_shard_requests=5&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:12:45,698 WARN  [I/O dispatcher 41] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:12:45,715 WARN  [http-nio-8082-exec-6] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/enterprise_product/_search?typed_keys=true&max_concurrent_shard_requests=5&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:16:57,984 INFO  [SpringApplicationShutdownHook] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665904106799 paused.
2022-10-16 14:16:58,300 INFO  [SpringApplicationShutdownHook] org.springframework.scheduling.quartz.SchedulerFactoryBean: Shutting down Quartz Scheduler
2022-10-16 14:16:58,300 INFO  [SpringApplicationShutdownHook] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665904106799 shutting down.
2022-10-16 14:16:58,302 INFO  [SpringApplicationShutdownHook] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665904106799 paused.
2022-10-16 14:16:58,304 INFO  [SpringApplicationShutdownHook] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665904106799 shutdown complete.
2022-10-16 14:16:58,305 INFO  [SpringApplicationShutdownHook] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2022-10-16 14:16:58,307 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: B2B_DS - Shutdown initiated...
2022-10-16 14:16:58,316 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: B2B_DS - Shutdown completed.
2022-10-16 14:20:15,209 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 6.2.0.Final
2022-10-16 14:20:15,232 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting SearchCustomApiApplication using Java 1.8.0_181 on LAPTOP-F3OP9A9T with PID 13508 (C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\searchcustomapi\target\classes started by DiGi-2 in C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\searchcustomapi)
2022-10-16 14:20:15,233 INFO  [main] org.springframework.boot.SpringApplication: The following profiles are active: local
2022-10-16 14:20:16,069 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-10-16 14:20:16,238 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 161 ms. Found 26 JPA repository interfaces.
2022-10-16 14:20:16,783 INFO  [main] org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor: @Bean method RepositoryRestSupportConfiguration.persistentEntityResourceBeanPostProcessor is non-static and returns an object assignable to Spring's BeanFactoryPostProcessor interface. This will result in a failure to process annotations such as @Autowired, @Resource and @PostConstruct within the method's declaring @Configuration class. Add the 'static' modifier to this method to avoid these container lifecycle issues; see @Bean javadoc for complete details.
2022-10-16 14:20:17,062 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'platformProperties' of type [digi.ecomm.platformservice.PlatformProperties$$EnhancerBySpringCGLIB$$6e1e7c40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-16 14:20:17,066 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'initialDataConfiguration' of type [digi.ecomm.platformservice.initialdata.InitialDataConfiguration$$EnhancerBySpringCGLIB$$a802a402] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-16 14:20:17,074 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'persistentConfiguration' of type [digi.ecomm.platformservice.persistent.PersistentConfiguration$$EnhancerBySpringCGLIB$$7332e982] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-10-16 14:20:17,745 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8082 (http)
2022-10-16 14:20:17,755 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8082"]
2022-10-16 14:20:17,756 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2022-10-16 14:20:17,756 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/9.0.56]
2022-10-16 14:20:17,875 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2022-10-16 14:20:17,876 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 2604 ms
2022-10-16 14:20:18,119 WARN  [main] com.zaxxer.hikari.HikariConfig: B2B_DS - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2022-10-16 14:20:18,120 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Starting...
2022-10-16 14:20:18,715 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Start completed.
2022-10-16 14:20:18,970 INFO  [main] org.hibernate.jpa.internal.util.LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2022-10-16 14:20:19,014 INFO  [main] org.hibernate.Version: HHH000412: Hibernate ORM core version 5.6.3.Final
2022-10-16 14:20:19,144 INFO  [main] org.hibernate.annotations.common.reflection.java.JavaReflectionManager: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-10-16 14:20:19,260 INFO  [main] org.hibernate.dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-10-16 14:20:19,879 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,880 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,881 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,882 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,882 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,883 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,884 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,884 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,888 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,889 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,890 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,890 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,890 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,891 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,891 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,892 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,898 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,899 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,899 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,900 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,900 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,900 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,901 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,901 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:19,902 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.User
2022-10-16 14:20:20,072 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,073 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,074 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,075 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,075 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,076 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,076 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,077 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,078 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,079 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,079 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,080 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,080 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,081 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,082 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,082 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,088 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,089 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,089 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,090 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsServerConfig
2022-10-16 14:20:20,107 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,108 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,109 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,109 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,110 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,120 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,120 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,122 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,122 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,122 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,135 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,136 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,137 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,137 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,138 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,138 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,139 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,140 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,140 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,141 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,141 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,142 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,142 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,142 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,168 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,169 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,169 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,170 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,174 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,177 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,178 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,178 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,179 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,180 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,181 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,181 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,183 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,183 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,197 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,198 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,198 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,199 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,216 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,216 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,217 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,222 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,224 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,225 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Language
2022-10-16 14:20:20,242 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,242 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,243 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,257 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,258 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,258 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,259 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,260 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,260 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,287 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,287 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,288 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.EnumEntity
2022-10-16 14:20:20,297 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,298 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,299 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,306 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,307 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,308 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserTaxGroup
2022-10-16 14:20:20,320 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,320 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,320 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,327 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,328 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,329 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,330 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,330 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,331 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,331 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,332 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,337 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,338 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,338 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,353 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,354 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,354 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,355 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,355 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,356 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,366 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.email.EmailAddress
2022-10-16 14:20:20,375 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,376 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,376 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,382 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,382 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,383 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,383 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,384 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,384 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,384 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,385 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,385 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,386 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,386 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,386 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,387 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,387 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,388 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsFacetSearchConfig
2022-10-16 14:20:20,397 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,402 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,402 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,402 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,403 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,403 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,404 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,404 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,405 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,405 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,406 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,406 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsValueRangeSet
2022-10-16 14:20:20,413 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,416 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,417 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,417 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,418 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,423 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,424 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,424 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,425 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,425 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,433 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,434 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,434 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,435 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,435 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,442 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,446 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,447 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,448 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,449 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,449 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsSort
2022-10-16 14:20:20,456 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,457 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,457 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,458 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,463 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,464 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,465 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,465 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,465 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,466 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,466 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,467 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.Principal
2022-10-16 14:20:20,474 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,477 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,478 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,479 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,480 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,480 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,481 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,481 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,482 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,482 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,482 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,483 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,483 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,484 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,485 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserDiscountGroup
2022-10-16 14:20:20,497 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Country
2022-10-16 14:20:20,507 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,508 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,509 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,509 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Region
2022-10-16 14:20:20,520 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,520 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,533 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,533 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,534 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,543 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,544 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,545 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,546 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,546 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,547 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig
2022-10-16 14:20:20,555 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,557 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,558 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,559 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,559 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,564 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,564 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,566 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Currency
2022-10-16 14:20:20,583 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,583 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,584 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,584 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,585 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,587 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,588 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,588 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,589 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,589 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,590 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,590 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,590 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,591 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,591 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,592 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,592 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,593 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,593 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,594 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,595 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,595 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,596 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,596 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,597 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.Employee
2022-10-16 14:20:20,618 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,619 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,620 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,621 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,621 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,621 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,622 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,622 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,623 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,624 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,624 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,625 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,625 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,625 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,626 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,626 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,627 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,627 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,628 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,635 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,641 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,642 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserPriceGroup
2022-10-16 14:20:20,666 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,667 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,668 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,676 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,676 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,677 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,678 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,679 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,680 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.email.EmailMessage
2022-10-16 14:20:20,692 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,693 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,694 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,694 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,694 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,699 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,700 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,701 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,701 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,702 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,702 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,703 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,703 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,704 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,704 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,704 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,705 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,705 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,706 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,706 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,706 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserGroup
2022-10-16 14:20:20,718 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,720 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,721 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,721 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,721 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,722 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,722 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,723 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,723 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,723 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,724 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,724 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,725 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,726 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,726 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,732 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,732 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,733 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,733 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,734 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,734 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsIndex
2022-10-16 14:20:20,741 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,741 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,742 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,742 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,743 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,756 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,757 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-10-16 14:20:20,758 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.catalog.Catalog
2022-10-16 14:20:24,567 INFO  [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-10-16 14:20:24,576 INFO  [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-10-16 14:20:25,151 INFO  [main] org.quartz.impl.StdSchedulerFactory: Using default implementation for ThreadExecutor
2022-10-16 14:20:25,165 INFO  [main] org.quartz.core.SchedulerSignalerImpl: Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-10-16 14:20:25,166 INFO  [main] org.quartz.core.QuartzScheduler: Quartz Scheduler v.2.3.2 created.
2022-10-16 14:20:25,169 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: Using db table-based data access locking (synchronization).
2022-10-16 14:20:25,173 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreCMT: JobStoreCMT initialized.
2022-10-16 14:20:25,174 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler meta-data: Quartz Scheduler (v2.3.2) 'schedulerFactoryBean' with instanceId 'LAPTOP-F3OP9A9T1665904825153'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 25 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-10-16 14:20:25,174 INFO  [main] org.quartz.impl.StdSchedulerFactory: Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2022-10-16 14:20:25,175 INFO  [main] org.quartz.impl.StdSchedulerFactory: Quartz scheduler version: 2.3.2
2022-10-16 14:20:25,175 INFO  [main] org.quartz.core.QuartzScheduler: JobFactory set to: digi.ecomm.platformservice.cronjob.job.CronJobFactory@4010f232
2022-10-16 14:20:28,277 INFO  [main] org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration: 

Using generated security password: 276ebb65-d6cc-4826-9633-b1d02646e898

2022-10-16 14:20:28,432 INFO  [main] org.springframework.security.web.DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4690cb47, org.springframework.security.web.context.SecurityContextPersistenceFilter@4228a2f6, org.springframework.security.web.header.HeaderWriterFilter@5563a63f, org.springframework.web.filter.CorsFilter@77d80294, org.springframework.security.web.authentication.logout.LogoutFilter@744d0cfb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46199519, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3aafa1c1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74940388, org.springframework.security.web.session.SessionManagementFilter@45cd5c56, org.springframework.security.web.access.ExceptionTranslationFilter@12db2921, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4001a5a1]
2022-10-16 14:20:29,131 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8082"]
2022-10-16 14:20:29,140 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port(s): 8082 (http) with context path '/api'
2022-10-16 14:20:29,143 INFO  [main] org.springframework.scheduling.quartz.SchedulerFactoryBean: Starting Quartz Scheduler now
2022-10-16 14:20:29,158 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: ClusterManager: detected 1 failed or restarted instances.
2022-10-16 14:20:29,159 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: ClusterManager: Scanning for instance "LAPTOP-F3OP9A9T1665904106799"'s failed in-progress jobs.
2022-10-16 14:20:29,202 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1665904825153 started.
2022-10-16 14:20:29,216 INFO  [main] org.springframework.boot.StartupInfoLogger: Started SearchCustomApiApplication in 14.508 seconds (JVM running for 14.981)
2022-10-16 14:23:40,633 INFO  [http-nio-8082-exec-1] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-10-16 14:23:40,634 INFO  [http-nio-8082-exec-1] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2022-10-16 14:23:40,638 INFO  [http-nio-8082-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 2 ms
2022-10-16 14:23:41,082 WARN  [I/O dispatcher 9] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:23:41,123 WARN  [http-nio-8082-exec-1] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/enterprise_product/_search?typed_keys=true&max_concurrent_shard_requests=5&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:23:45,153 WARN  [I/O dispatcher 17] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:23:45,159 WARN  [http-nio-8082-exec-2] org.elasticsearch.client.RequestLogger: request [HEAD http://localhost:9200/enterprise_product?ignore_throttled=false&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=false] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:23:45,257 WARN  [http-nio-8082-exec-2] org.elasticsearch.client.RequestLogger: request [DELETE http://localhost:9200/enterprise_product?master_timeout=30s&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=true&ignore_throttled=false&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:23:45,487 WARN  [http-nio-8082-exec-2] org.elasticsearch.client.RequestLogger: request [PUT http://localhost:9200/enterprise_product?master_timeout=30s&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:23:45,846 WARN  [I/O dispatcher 17] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:23:52,576 WARN  [I/O dispatcher 25] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:23:52,599 WARN  [http-nio-8082-exec-3] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/enterprise_product/_search?typed_keys=true&max_concurrent_shard_requests=5&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:25:40,549 WARN  [I/O dispatcher 33] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:25:40,566 WARN  [http-nio-8082-exec-5] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/enterprise_product/_search?typed_keys=true&max_concurrent_shard_requests=5&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:27:22,779 WARN  [I/O dispatcher 41] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:27:22,784 WARN  [http-nio-8082-exec-7] org.elasticsearch.client.RequestLogger: request [HEAD http://localhost:9200/enterprise_product?ignore_throttled=false&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=false] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:27:22,866 WARN  [http-nio-8082-exec-7] org.elasticsearch.client.RequestLogger: request [DELETE http://localhost:9200/enterprise_product?master_timeout=30s&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=true&ignore_throttled=false&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:27:23,049 WARN  [http-nio-8082-exec-7] org.elasticsearch.client.RequestLogger: request [PUT http://localhost:9200/enterprise_product?master_timeout=30s&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:27:23,074 WARN  [I/O dispatcher 41] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:27:25,860 WARN  [I/O dispatcher 49] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-10-16 14:27:25,873 WARN  [http-nio-8082-exec-8] org.elasticsearch.client.RequestLogger: request [POST http://localhost:9200/enterprise_product/_search?typed_keys=true&max_concurrent_shard_requests=5&ignore_unavailable=false&expand_wildcards=open&allow_no_indices=true&ignore_throttled=true&search_type=query_then_fetch&batched_reduce_size=512] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
