2022-09-29 16:14:47,489 INFO  [background-preinit] org.hibernate.validator.internal.util.Version: HV000001: Hibernate Validator 6.2.0.Final
2022-09-29 16:14:47,525 INFO  [main] org.springframework.boot.StartupInfoLogger: Starting SearchCustomApiApplication using Java 1.8.0_181 on LAPTOP-F3OP9A9T with PID 11800 (C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\searchcustomapi\target\classes started by DiGi-2 in C:\Project\b2b\dmsi-search-new-nhan\restructure\b2bcore\searchcustomapi)
2022-09-29 16:14:47,526 INFO  [main] org.springframework.boot.SpringApplication: The following profiles are active: local
2022-09-29 16:14:48,738 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-29 16:14:49,022 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 272 ms. Found 26 JPA repository interfaces.
2022-09-29 16:14:50,302 INFO  [main] org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor: @Bean method RepositoryRestSupportConfiguration.persistentEntityResourceBeanPostProcessor is non-static and returns an object assignable to Spring's BeanFactoryPostProcessor interface. This will result in a failure to process annotations such as @Autowired, @Resource and @PostConstruct within the method's declaring @Configuration class. Add the 'static' modifier to this method to avoid these container lifecycle issues; see @Bean javadoc for complete details.
2022-09-29 16:14:51,057 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'platformProperties' of type [digi.ecomm.platformservice.PlatformProperties$$EnhancerBySpringCGLIB$$c9d63d9e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-09-29 16:14:51,061 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'initialDataConfiguration' of type [digi.ecomm.platformservice.initialdata.InitialDataConfiguration$$EnhancerBySpringCGLIB$$3ba6560] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-09-29 16:14:51,073 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'persistentConfiguration' of type [digi.ecomm.platformservice.persistent.PersistentConfiguration$$EnhancerBySpringCGLIB$$ceeaaae0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-09-29 16:14:51,972 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port(s): 8082 (http)
2022-09-29 16:14:51,984 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8082"]
2022-09-29 16:14:51,985 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2022-09-29 16:14:51,985 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/9.0.56]
2022-09-29 16:14:52,214 INFO  [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2022-09-29 16:14:52,215 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 4641 ms
2022-09-29 16:14:52,570 WARN  [main] com.zaxxer.hikari.HikariConfig: B2B_DS - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
2022-09-29 16:14:52,570 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Starting...
2022-09-29 16:14:53,254 INFO  [main] com.zaxxer.hikari.HikariDataSource: B2B_DS - Start completed.
2022-09-29 16:14:53,537 INFO  [main] org.hibernate.jpa.internal.util.LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-29 16:14:53,612 INFO  [main] org.hibernate.Version: HHH000412: Hibernate ORM core version 5.6.3.Final
2022-09-29 16:14:53,807 INFO  [main] org.hibernate.annotations.common.reflection.java.JavaReflectionManager: HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-29 16:14:53,981 INFO  [main] org.hibernate.dialect.Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-29 16:14:54,971 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:54,973 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:54,974 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:54,981 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:54,982 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:54,983 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:54,983 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:54,984 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:54,992 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:54,994 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,000 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,001 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,002 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,003 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,004 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,005 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,006 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,006 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,007 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,018 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,018 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,019 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,021 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,021 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,022 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.User
2022-09-29 16:14:55,271 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,272 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,274 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,281 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,282 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,282 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,283 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,284 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,284 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,285 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,285 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,286 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,287 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,288 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,289 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,294 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,306 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,307 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,308 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,314 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsServerConfig
2022-09-29 16:14:55,333 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,334 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServerConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,335 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,337 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,338 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,354 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,355 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CountryL10NAugmentation#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,357 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,362 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,363 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,398 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,399 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSynonymConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,401 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,402 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,408 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,409 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,410 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,411 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,412 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,421 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,421 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,422 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,423 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,423 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,453 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,454 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,455 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,455 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,456 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,456 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#original` was mapped with explicit lazy-group (`original`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,457 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,458 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Address#title` was mapped with explicit lazy-group (`title`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,468 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,468 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,469 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,470 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,477 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,478 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,499 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,499 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,504 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,507 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,526 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,526 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,527 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,541 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,541 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.catalog.Catalog10NAugmentation#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,543 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Language
2022-09-29 16:14:55,568 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,569 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,571 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,585 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,585 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,586 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailAttachment#message` was mapped with explicit lazy-group (`message`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,595 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,595 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,596 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,606 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,607 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsBoostRule#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,609 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.EnumEntity
2022-09-29 16:14:55,622 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,623 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,623 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,633 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,633 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRange#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,640 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserTaxGroup
2022-09-29 16:14:55,652 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,653 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,654 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,664 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,665 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSortField#sort` was mapped with explicit lazy-group (`sort`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,672 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,673 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,673 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,674 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,675 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,676 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,676 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,677 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,681 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,711 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,712 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,714 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,723 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,725 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#outerProperty` was mapped with explicit lazy-group (`outerProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,726 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexedProperty#valueRangeSet` was mapped with explicit lazy-group (`valueRangeSet`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,745 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.email.EmailAddress
2022-09-29 16:14:55,757 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,758 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,758 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,774 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,775 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.RegionL10NAugmentation#region` was mapped with explicit lazy-group (`region`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,776 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,783 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,784 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,784 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,785 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,786 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,787 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,797 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,798 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,799 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,799 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,800 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,801 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsFacetSearchConfig
2022-09-29 16:14:55,819 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,820 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,823 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,830 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,831 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,831 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#indexConfig` was mapped with explicit lazy-group (`indexConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,832 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#searchConfig` was mapped with explicit lazy-group (`searchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,833 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsFacetSearchConfig#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,834 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,840 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,845 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,845 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsValueRangeSet
2022-09-29 16:14:55,858 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,858 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsValueRangeSet#indexedProperty` was mapped with explicit lazy-group (`indexedProperty`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,861 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,862 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,863 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,874 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,875 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsPromotedItem#advancedSearchConfig` was mapped with explicit lazy-group (`advancedSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,877 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,878 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,879 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,894 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,895 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,896 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,897 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,898 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,912 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,913 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsServer#serverConfig` was mapped with explicit lazy-group (`serverConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,914 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,915 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,918 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,927 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsSort
2022-09-29 16:14:55,939 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,939 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsSort#index` was mapped with explicit lazy-group (`index`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,940 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,947 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,954 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,955 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,955 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,956 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,957 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,957 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,958 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,958 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.Principal
2022-09-29 16:14:55,969 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,970 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,971 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,972 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,973 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,973 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,974 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,975 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,975 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,976 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,976 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,977 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,978 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,979 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:55,980 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserDiscountGroup
2022-09-29 16:14:55,991 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Country
2022-09-29 16:14:56,008 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,009 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,010 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,011 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Region
2022-09-29 16:14:56,023 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,023 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.Region#country` was mapped with explicit lazy-group (`country`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,032 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,033 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,034 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,046 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,047 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.media.Media#catalog` was mapped with explicit lazy-group (`catalog`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,054 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,055 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,055 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,056 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig
2022-09-29 16:14:56,064 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,065 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.advance.EsAdvancedSearchConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,066 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,066 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,067 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,072 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,072 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.LanguageL10NAugmentation#language` was mapped with explicit lazy-group (`language`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,076 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.c2l.Currency
2022-09-29 16:14:56,094 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,095 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,096 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,103 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,103 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,105 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,108 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,114 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,115 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,116 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,116 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,117 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,117 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,118 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,119 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,119 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,120 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,121 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,126 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,131 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,132 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,132 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,133 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,134 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,134 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.Employee
2022-09-29 16:14:56,150 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,150 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,151 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,152 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,153 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,156 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,156 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,163 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,163 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,164 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,165 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,165 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#discountGroup` was mapped with explicit lazy-group (`discountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,166 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#priceGroup` was mapped with explicit lazy-group (`priceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,166 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionCurrency` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,167 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#sessionLanguage` was mapped with explicit lazy-group (`sessionLanguage`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,168 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.User#taxGroup` was mapped with explicit lazy-group (`taxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,169 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,174 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,179 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,186 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,187 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsStopWord#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,189 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserPriceGroup
2022-09-29 16:14:56,220 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,220 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,221 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,232 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,234 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndexConfig#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,234 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,243 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,244 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,244 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.email.EmailMessage
2022-09-29 16:14:56,255 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,256 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.email.EmailMessage#fromAddress` was mapped with explicit lazy-group (`fromAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,258 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,258 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,259 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,260 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,260 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,261 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,262 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,263 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,263 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,264 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,268 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,276 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,276 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,277 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,277 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,278 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,279 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,286 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,286 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.user.UserGroup
2022-09-29 16:14:56,298 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,299 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,303 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,304 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,305 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,306 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,306 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#billingAddress` was mapped with explicit lazy-group (`billingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,307 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#profilePicture` was mapped with explicit lazy-group (`profilePicture`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,307 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.Principal#shippingAddress` was mapped with explicit lazy-group (`shippingAddress`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,308 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userDiscountGroup` was mapped with explicit lazy-group (`userDiscountGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,309 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userPriceGroup` was mapped with explicit lazy-group (`userPriceGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,309 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.user.UserGroup#userTaxGroup` was mapped with explicit lazy-group (`userTaxGroup`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,310 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,310 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,318 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,324 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,324 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.c2l.CurrencyL10NAugmentation#currency` was mapped with explicit lazy-group (`currency`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,325 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,326 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,326 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,327 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.commercesearch.EsIndex
2022-09-29 16:14:56,335 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,335 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.commercesearch.EsIndex#facetSearchConfig` was mapped with explicit lazy-group (`facetSearchConfig`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,336 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,337 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,339 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,343 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,346 WARN  [main] org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper: HHH90005901: `digi.ecomm.entity.EnumEntity10NAugmentation#enumEntity` was mapped with explicit lazy-group (`enumEntity`).  Hibernate will ignore the lazy-group - this is generally not a good idea for to-one associations as it would lead to 2 separate SQL selects to initialize the association.  This is expected to be improved in future versions of Hibernate
2022-09-29 16:14:56,351 INFO  [main] org.hibernate.tuple.entity.EntityMetamodel: HHH000157: Lazy property fetching available for: digi.ecomm.entity.catalog.Catalog
2022-09-29 16:15:01,027 INFO  [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-29 16:15:01,057 INFO  [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-29 16:15:01,843 INFO  [main] org.quartz.impl.StdSchedulerFactory: Using default implementation for ThreadExecutor
2022-09-29 16:15:01,856 INFO  [main] org.quartz.core.SchedulerSignalerImpl: Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2022-09-29 16:15:01,857 INFO  [main] org.quartz.core.QuartzScheduler: Quartz Scheduler v.2.3.2 created.
2022-09-29 16:15:01,862 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: Using db table-based data access locking (synchronization).
2022-09-29 16:15:01,865 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreCMT: JobStoreCMT initialized.
2022-09-29 16:15:01,867 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler meta-data: Quartz Scheduler (v2.3.2) 'schedulerFactoryBean' with instanceId 'LAPTOP-F3OP9A9T1664442901845'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 25 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2022-09-29 16:15:01,868 INFO  [main] org.quartz.impl.StdSchedulerFactory: Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2022-09-29 16:15:01,874 INFO  [main] org.quartz.impl.StdSchedulerFactory: Quartz scheduler version: 2.3.2
2022-09-29 16:15:01,875 INFO  [main] org.quartz.core.QuartzScheduler: JobFactory set to: digi.ecomm.platformservice.cronjob.job.CronJobFactory@5e60e639
2022-09-29 16:15:05,385 INFO  [main] org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration: 

Using generated security password: 3ab5b7da-0f94-46c0-8b28-1f6b65be97b2

2022-09-29 16:15:05,596 INFO  [main] org.springframework.security.web.DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@285d33f3, org.springframework.security.web.context.SecurityContextPersistenceFilter@8cad98b, org.springframework.security.web.header.HeaderWriterFilter@79ab79f6, org.springframework.web.filter.CorsFilter@5b6fd32d, org.springframework.security.web.authentication.logout.LogoutFilter@2e4c4373, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@16db70a0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ee3a026, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@425436b4, org.springframework.security.web.session.SessionManagementFilter@311a569d, org.springframework.security.web.access.ExceptionTranslationFilter@56059cf1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3cc6bfdb]
2022-09-29 16:15:06,612 INFO  [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8082"]
2022-09-29 16:15:06,624 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port(s): 8082 (http) with context path '/api'
2022-09-29 16:15:06,625 INFO  [main] org.springframework.scheduling.quartz.SchedulerFactoryBean: Starting Quartz Scheduler now
2022-09-29 16:15:06,642 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: ClusterManager: detected 1 failed or restarted instances.
2022-09-29 16:15:06,643 INFO  [main] org.quartz.impl.jdbcjobstore.JobStoreSupport: ClusterManager: Scanning for instance "LAPTOP-F3OP9A9T1664358285525"'s failed in-progress jobs.
2022-09-29 16:15:06,669 INFO  [main] org.quartz.core.QuartzScheduler: Scheduler schedulerFactoryBean_$_LAPTOP-F3OP9A9T1664442901845 started.
2022-09-29 16:15:06,677 INFO  [QuartzScheduler_schedulerFactoryBean-LAPTOP-F3OP9A9T1664442901845_MisfireHandler] org.quartz.impl.jdbcjobstore.JobStoreSupport: Handling 1 trigger(s) that missed their scheduled fire-time.
2022-09-29 16:15:06,685 INFO  [main] org.springframework.boot.StartupInfoLogger: Started SearchCustomApiApplication in 19.856 seconds (JVM running for 20.541)
2022-09-29 16:17:56,980 INFO  [http-nio-8082-exec-1] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-29 16:17:56,980 INFO  [http-nio-8082-exec-1] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2022-09-29 16:17:56,984 INFO  [http-nio-8082-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 3 ms
2022-09-29 16:18:04,745 WARN  [I/O dispatcher 9] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:18:04,771 WARN  [http-nio-8082-exec-1] org.elasticsearch.client.RequestLogger: request [HEAD http://localhost:9200/enterprise_product?ignore_throttled=false&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=false] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:18:04,947 WARN  [http-nio-8082-exec-1] org.elasticsearch.client.RequestLogger: request [DELETE http://localhost:9200/enterprise_product?master_timeout=30s&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=true&ignore_throttled=false&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:18:05,331 WARN  [http-nio-8082-exec-1] org.elasticsearch.client.RequestLogger: request [PUT http://localhost:9200/enterprise_product?master_timeout=30s&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:18:05,333 WARN  [http-nio-8082-exec-1] digi.ecomm.commercesearch.index.service.impl.IndexServiceImpl: List of indexed items is empty.
2022-09-29 16:20:03,290 WARN  [I/O dispatcher 17] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:20:03,296 WARN  [http-nio-8082-exec-5] org.elasticsearch.client.RequestLogger: request [HEAD http://localhost:9200/enterprise_product?ignore_throttled=false&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=false] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:20:03,386 WARN  [http-nio-8082-exec-5] org.elasticsearch.client.RequestLogger: request [DELETE http://localhost:9200/enterprise_product?master_timeout=30s&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=true&ignore_throttled=false&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:20:03,581 WARN  [http-nio-8082-exec-5] org.elasticsearch.client.RequestLogger: request [PUT http://localhost:9200/enterprise_product?master_timeout=30s&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:20:03,583 WARN  [http-nio-8082-exec-5] digi.ecomm.commercesearch.index.service.impl.IndexServiceImpl: List of indexed items is empty.
2022-09-29 16:23:34,984 WARN  [I/O dispatcher 25] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:23:34,989 WARN  [http-nio-8082-exec-8] org.elasticsearch.client.RequestLogger: request [HEAD http://localhost:9200/enterprise_product?ignore_throttled=false&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=false] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:23:35,085 WARN  [http-nio-8082-exec-8] org.elasticsearch.client.RequestLogger: request [DELETE http://localhost:9200/enterprise_product?master_timeout=30s&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=true&ignore_throttled=false&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:23:35,288 WARN  [http-nio-8082-exec-8] org.elasticsearch.client.RequestLogger: request [PUT http://localhost:9200/enterprise_product?master_timeout=30s&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:23:35,289 WARN  [http-nio-8082-exec-8] digi.ecomm.commercesearch.index.service.impl.IndexServiceImpl: List of indexed items is empty.
2022-09-29 16:26:26,112 WARN  [I/O dispatcher 33] org.elasticsearch.client.RequestLogger: request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:26:26,120 WARN  [http-nio-8082-exec-2] org.elasticsearch.client.RequestLogger: request [HEAD http://localhost:9200/enterprise_product?ignore_throttled=false&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=false] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:26:26,202 WARN  [http-nio-8082-exec-2] org.elasticsearch.client.RequestLogger: request [DELETE http://localhost:9200/enterprise_product?master_timeout=30s&ignore_unavailable=false&expand_wildcards=open%2Cclosed&allow_no_indices=true&ignore_throttled=false&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:26:26,397 WARN  [http-nio-8082-exec-2] org.elasticsearch.client.RequestLogger: request [PUT http://localhost:9200/enterprise_product?master_timeout=30s&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.14.0-dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html to enable security."]
2022-09-29 16:26:26,398 WARN  [http-nio-8082-exec-2] digi.ecomm.commercesearch.index.service.impl.IndexServiceImpl: List of indexed items is empty.
